<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Shane Dowling</title>
    <link>https://shanedowling.com/</link>
    <description>Recent content on Shane Dowling</description>
    <generator>Hugo -- 0.148.2</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Jun 2025 21:11:54 +0000</lastBuildDate>
    <atom:link href="https://shanedowling.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Homelab - Day 5 - The NAS</title>
      <link>https://shanedowling.com/posts/homelab---day-5---the-nas/</link>
      <pubDate>Wed, 18 Jun 2025 21:11:54 +0000</pubDate>
      <guid>https://shanedowling.com/posts/homelab---day-5---the-nas/</guid>
      <description>&lt;img src=&#34;https://shanedowling.com/images/hp-proliant.jpg&#34; height=&#34;400px&#34;&gt;
&lt;p&gt;So, it&amp;rsquo;s been a while and I have made some progress worth sharing!&lt;/p&gt;
&lt;p&gt;After keeping an eye on the auction sites for a while I ended up pulling the plug and buying 2 12TB Seagate Ironwolf drives for my NAS and now wanted to get started with setting this up.&lt;/p&gt;
&lt;h2 id=&#34;the-hardware&#34;&gt;The hardware&lt;/h2&gt;
&lt;p&gt;Off a recommendation from Joe at &lt;a href=&#34;https://latenightlinux.com/&#34;&gt;Late Night Linux&lt;/a&gt; I picked up a HP 290 G2 I5-8500. It comes with 8GB of RAM and a 256ssd. The form factor is reasonably nice and it fit the two drives perfectly and it&amp;rsquo;s been chugging along well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Homelab - Day 4 - Self-Hosting Gitea</title>
      <link>https://shanedowling.com/posts/homelab---day-4---self-hosting-gitea/</link>
      <pubDate>Fri, 07 Mar 2025 19:31:59 +0000</pubDate>
      <guid>https://shanedowling.com/posts/homelab---day-4---self-hosting-gitea/</guid>
      <description>&lt;h1 id=&#34;aims&#34;&gt;Aims&lt;/h1&gt;
&lt;p&gt;Today’s goal was to deploy Gitea on my K3s cluster, ensuring that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It used persistent storage via my NAS.&lt;/li&gt;
&lt;li&gt;It was accessible externally through Traefik.&lt;/li&gt;
&lt;li&gt;It could eventually replace GitHub for my FluxCD setup.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;what-i-did&#34;&gt;What I Did&lt;/h1&gt;
&lt;h2 id=&#34;storage-and-permissions-woes&#34;&gt;Storage and Permissions Woes&lt;/h2&gt;
&lt;p&gt;Running Gitea as a stateless container worked fine initially, but as soon as I introduced persistence, things got tricky. I ran into permission issues almost immediately, thanks to the interplay between Kubernetes&amp;rsquo; user permissions and my NAS file system.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Homelab - Day 3 - The first software deployment</title>
      <link>https://shanedowling.com/posts/homelab---day-3---the-first-software-deployment/</link>
      <pubDate>Fri, 28 Feb 2025 10:45:34 +0000</pubDate>
      <guid>https://shanedowling.com/posts/homelab---day-3---the-first-software-deployment/</guid>
      <description>&lt;h1 id=&#34;aims&#34;&gt;Aims&lt;/h1&gt;
&lt;p&gt;The goal for today was to get my &lt;strong&gt;first piece of software running on the cluster&lt;/strong&gt;, ensuring that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It leveraged the &lt;strong&gt;NAS for storage&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;It was accessible externally via &lt;strong&gt;Traefik&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The process was repeatable for future deployments.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I chose the &lt;strong&gt;Unifi Management Console&lt;/strong&gt; as my first self-hosted application. Once migrated, I could &lt;strong&gt;wipe my Raspberry Pi 4&lt;/strong&gt;, which was previously running the console, and add it as a &lt;strong&gt;worker node to the cluster&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Homelab - Day 2 - Setting Up a New K3s Control Plane and Node</title>
      <link>https://shanedowling.com/posts/homelab---day-2---setting-up-k3s-control-plane/</link>
      <pubDate>Fri, 21 Feb 2025 23:57:09 +0000</pubDate>
      <guid>https://shanedowling.com/posts/homelab---day-2---setting-up-k3s-control-plane/</guid>
      <description>&lt;p&gt;After going back and forth multiple times and making plenty of mistakes, I finally managed to set up a new K3s control plane and node. It turned out to be relatively straightforward once I got the steps right, so I’m documenting this for future reference!&lt;/p&gt;
&lt;h2 id=&#34;aims&#34;&gt;Aims&lt;/h2&gt;
&lt;p&gt;The goal was to set up a fresh K3s cluster, ensuring that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The control plane and node are configured correctly.&lt;/li&gt;
&lt;li&gt;Flux is properly bootstrapped to manage cluster state.&lt;/li&gt;
&lt;li&gt;Common pitfalls are documented to save time in the future.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-i-did&#34;&gt;What I Did&lt;/h2&gt;
&lt;h3 id=&#34;control-plane-setup&#34;&gt;Control Plane Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Install K3s:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -sfL https://get.k3s.io | sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Add an SSH key for Flux to connect to GitHub.&lt;/li&gt;
&lt;li&gt;Bootstrap Flux with Git:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flux bootstrap git &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ssh://git@github.com/&amp;lt;your-repo&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --branch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;main &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --private-key-file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/home/&amp;lt;user&amp;gt;/.ssh/&amp;lt;flux_key&amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;clusters/k3s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Retrieve the control plane token:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat /var/lib/rancher/k3s/server/token
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Allow traffic on the K3s API port:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables -A INPUT -p tcp --dport &lt;span style=&#34;color:#ae81ff&#34;&gt;6443&lt;/span&gt; -j ACCEPT
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;node-setup&#34;&gt;Node Setup&lt;/h3&gt;
&lt;p&gt;To join a new node to the cluster:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Homelab - Day 1 - Really Ghetto Data Storage</title>
      <link>https://shanedowling.com/posts/homelab---day-1---data-storage/</link>
      <pubDate>Tue, 11 Feb 2025 13:57:09 +0000</pubDate>
      <guid>https://shanedowling.com/posts/homelab---day-1---data-storage/</guid>
      <description>&lt;h2 id=&#34;setting-up-storage-for-the-kubernetes-cluster&#34;&gt;Setting Up Storage for the Kubernetes Cluster&lt;/h2&gt;
&lt;p&gt;The first step in setting up my homelab Kubernetes cluster is ensuring some reliable data storage. Right now, I have two main categories of data in mind:&lt;/p&gt;
&lt;h3 id=&#34;1-operationally-critical-data&#34;&gt;1. Operationally Critical Data&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Needs RAID with redundancy&lt;/li&gt;
&lt;li&gt;Requires both on-site and off-site backups&lt;/li&gt;
&lt;li&gt;Approximately &lt;strong&gt;1TB&lt;/strong&gt; of data&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-media-data&#34;&gt;2. Media Data&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Non-critical, so no backups required&lt;/li&gt;
&lt;li&gt;Several terabytes of storage needed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since the Kubernetes cluster depends on Operationally Critical Data, I need to establish a RAID-backed storage solution with proper backups before moving forward.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Homelab Setup: The Journey to Kubernetes</title>
      <link>https://shanedowling.com/posts/homelab-setup-the-journey-to-kubernetes/</link>
      <pubDate>Mon, 10 Feb 2025 20:50:46 +0000</pubDate>
      <guid>https://shanedowling.com/posts/homelab-setup-the-journey-to-kubernetes/</guid>
      <description>&lt;h2 id=&#34;why-im-migrating-my-self-hosted-services&#34;&gt;Why I&amp;rsquo;m Migrating My Self-Hosted Services&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve decided to migrate all my existing self-hosted services—and add a few new ones—to a Kubernetes (K8s) cluster that I&amp;rsquo;m going to build. There are several motivations behind this decision:&lt;/p&gt;
&lt;h3 id=&#34;learning-kubernetes-beyond-ephemeral-clusters&#34;&gt;Learning Kubernetes Beyond Ephemeral Clusters&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;My role as an Engineering Manager at Syntasso involves a lot of K8s development using Kind, but these environments are entirely ephemeral. I want to experience the long-term challenges of operating a cluster to build greater empathy for our customers.&lt;/li&gt;
&lt;li&gt;I want to deepen my understanding of Kubernetes, particularly in areas like:
&lt;ul&gt;
&lt;li&gt;Hardening a K8s cluster&lt;/li&gt;
&lt;li&gt;Managing multiple clusters effectively&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;increased-focus-on-self-hosting&#34;&gt;Increased Focus on Self-Hosting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The British government&amp;rsquo;s baffling approach to tech privacy has pushed me toward self-hosting more of my personal services.&lt;/li&gt;
&lt;li&gt;My current setup is a mix of manually configured systems and Docker Compose-based services running on different machines. It’s time to bring structure to the chaos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-plan&#34;&gt;The Plan&lt;/h2&gt;
&lt;h3 id=&#34;time-constraints-and-approach&#34;&gt;Time Constraints and Approach&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;m a dad with two small kids, so my time for this project is limited. My approach will be:&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Hybrid Cloud Show is Live!</title>
      <link>https://shanedowling.com/posts/the-hybrid-cloud-show-is-live/</link>
      <pubDate>Fri, 05 Apr 2024 16:45:59 +0000</pubDate>
      <guid>https://shanedowling.com/posts/the-hybrid-cloud-show-is-live/</guid>
      <description>&lt;img src=&#34;https://shanedowling.com/images/hcs.jpg&#34; height=&#34;400px&#34;&gt;
&lt;p&gt;Exciting news – the first episode of our podcast, the &lt;a href=&#34;https://hybridcloudshow.com/&#34;&gt;Hybrid Cloud Show&lt;/a&gt;, is finally here, part of the awesome &lt;a href=&#34;https://latenightlinux.com/&#34;&gt;Late Night Linux podcast family&lt;/a&gt;! 💥 Join me and three very smart industry pros as we dive into the fascinating world of public cloud, private cloud, and everything in between. Check out our first episode &lt;a href=&#34;https://hybridcloudshow.com/hcs01/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>I&#39;m launching a Platform Engineering Newsletter</title>
      <link>https://shanedowling.com/posts/im-launching-a-platform-engineering-newsletter/</link>
      <pubDate>Tue, 02 Jan 2024 16:45:59 +0000</pubDate>
      <guid>https://shanedowling.com/posts/im-launching-a-platform-engineering-newsletter/</guid>
      <description>&lt;p&gt;Hello! I&amp;rsquo;m excited to share the first issue of our monthly journey through the world of platform engineering. This newsletter is all about the latest trends, insights, and resources in our field whether you&amp;rsquo;re a seasoned expert or just starting out.&lt;/p&gt;
&lt;p&gt;You can find the first month &lt;a href=&#34;https://pemonthly.com/p/platform-engineering-monthly-december&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Each month, I&amp;rsquo;ll bring you a mix of news, case studies, upcoming events, and cool projects to keep you in the know. Feel free to share your thoughts, feedback, or anything exciting you&amp;rsquo;ve come across in platform engineering. As it was the holidays, I opted to send Decembers newsletter in January but expect this newsletter to come out on the final Tuesday of the month.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kindle Scribe to Mastodon</title>
      <link>https://shanedowling.com/posts/kindle-scribe-to-mastodon/</link>
      <pubDate>Mon, 01 Jan 2024 16:45:59 +0000</pubDate>
      <guid>https://shanedowling.com/posts/kindle-scribe-to-mastodon/</guid>
      <description>&lt;img src=&#34;https://shanedowling.com/images/eink.jpg&#34; height=&#34;400px&#34;&gt;
&lt;h1 id=&#34;kindle-scribe-to-mastodon&#34;&gt;Kindle Scribe to Mastodon&lt;/h1&gt;
&lt;p&gt;Over the holidays, I put together a fun little project to put out status updates on Mastodon. Of course, I used some spare time to make this as overly-engineered as possible.&lt;/p&gt;
&lt;h2 id=&#34;stringing-it-all-together&#34;&gt;Stringing It All Together&lt;/h2&gt;
&lt;p&gt;I wanted this to be event-driven and serverless and to give me some experience toying with Terraform in AWS. Thankfully, what would be the most computationally challenging part is already handled by Amazon. The Kindle Scribe provides a means to convert a note to text and then email it to myself. I used my email provider to then forward it to AWS. I&amp;rsquo;m using Amazon to register a domain (click TLD domain names are only $3). I used route53 to hook that domain up to SES, then have SES invoke a Lambda when that particular email address is emailed from a particular email with a particular subject line. As I  can&amp;rsquo;t send the email body directly to a Lambda, I&amp;rsquo;ll need to write it to a bucket first, then have the lambda read from the s3 bucket. (Thankfully SES does pass a MessageID to the Lambda so we know which MessageID refers to to which event), you could also trigger an event from a bucket change but SES already offered, so I figured this was a bit simpler. Now that I&amp;rsquo;ve got it all triggering a Lambda, I can throw code at this problem.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Make your smartphone a little dumber</title>
      <link>https://shanedowling.com/posts/make-your-smartphone-a-little-dumber/</link>
      <pubDate>Fri, 01 Sep 2023 16:45:59 +0000</pubDate>
      <guid>https://shanedowling.com/posts/make-your-smartphone-a-little-dumber/</guid>
      <description>&lt;img alt=&#34;Photo by Thanos Pal on Unsplash&#34; src=&#34;https://shanedowling.com/images/dumb-punkt.jpg&#34; height=&#34;400px&#34;&gt;
&lt;p&gt;For many, &lt;a href=&#34;switching-to-a-dumbphone-3b090f8ad709.html&#34;&gt;MANY&lt;/a&gt; years, I&amp;rsquo;ve been an advocate for the simplicity of dumbphones. My go-to? The LightPhone 2. However, modern life sometimes demands the functionalities of a smartphone, such as banking or GPS navigation. Every once in a while, I wish my smartphone would be just a touch simpler, but I can&amp;rsquo;t abandon its smart features entirely. There are times I need them, especially for those updates or browser-based app handshakes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Streamlining OS Development Pipelines for the Beepberry - A Fun Challenge</title>
      <link>https://shanedowling.com/posts/streamlining-os-development-pipelines-for-the-beepberry/</link>
      <pubDate>Mon, 05 Jun 2023 13:32:59 +0000</pubDate>
      <guid>https://shanedowling.com/posts/streamlining-os-development-pipelines-for-the-beepberry/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://shanedowling.com/images/1_6nkAxHBzMyFB-k06nx5jdg.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Imagine a cool device that brings together an LCD screen, Raspberry Pi Zero, and a Blackberry keyboard – that&amp;rsquo;s the Beepberry! It&amp;rsquo;s designed to work like a WiFi-only keyboard phone, and one of the main goals is to reach a super-fast boot time of under 5 seconds. Sounds challenging, right? Well, to speed up the development process and test boot optimization, using QEMU to emulate the OS is a smart move. In this blog post, we&amp;rsquo;ll explore the tough parts of creating pipelines for entire operating systems, their limitations, and the benefits that the Beepberry project will gain from using QEMU.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Harnessing the Power of NixOS for Platform Engineering</title>
      <link>https://shanedowling.com/posts/harnessing-the-power-of-nixos-for-platform-engineering/</link>
      <pubDate>Sun, 19 Mar 2023 13:32:59 +0000</pubDate>
      <guid>https://shanedowling.com/posts/harnessing-the-power-of-nixos-for-platform-engineering/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://shanedowling.com/images/1*TGyS3TCFr2HNkaxm6B1T7Q@2x.jpeg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;NixOS is an innovative and powerful Linux distribution built on top of the Nix package manager. Its unique approach to package and configuration management sets it apart from traditional Linux distributions, making it an excellent choice for platform engineering tasks. In this blog post, we’ll explore the benefits of using NixOS for platform engineering and provide an overview of its key features.
Immutable Infrastructure and Reproducible Builds&lt;/p&gt;
&lt;p&gt;NixOS’s immutability and reproducibility are its most significant strengths. All software packages and system configurations are stored in an isolated and immutable manner, ensuring that any changes to the system will not affect existing dependencies. This approach allows for consistent and reproducible builds, reducing the risk of “works on my machine” issues and simplifying deployment across environments.&lt;/p&gt;</description>
    </item>
    <item>
      <title>De-risk early when engineering platforms</title>
      <link>https://shanedowling.com/posts/de-risk-early-when-engineering-platforms/</link>
      <pubDate>Sat, 11 Mar 2023 13:32:59 +0000</pubDate>
      <guid>https://shanedowling.com/posts/de-risk-early-when-engineering-platforms/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://shanedowling.com/images/1*kDMCR1b1FEdKc2qS7WpelA@2x.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Platform engineering encompasses a broad domain with continually evolving frontiers that require overcoming new challenges to level up the solutions offered to engineers. However, this evolution can lead to situations where previously-made assumptions may no longer be applicable to new solutions.&lt;/p&gt;
&lt;p&gt;Our team recently encountered this scenario when using AWS Stacksets across multi-account/region rollouts of our platform, which highlighted some interesting dependency challenges that we only discovered at the 11th hour of our project. The new world introduced edge cases that we didn’t anticipate, and we learned that it’s crucial to identify unknowns early and be honest about them. It’s essential to deliver a first step that cuts across those unknowns as soon as possible and iterate from there, even if that means doing something hacky. If a hack doesn’t work, it’s better to discard it than a polished solution that would never work.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reduce developer cognitive load with nix</title>
      <link>https://shanedowling.com/posts/reduce-developer-cognitive-load-with-nix/</link>
      <pubDate>Sat, 11 Mar 2023 13:32:59 +0000</pubDate>
      <guid>https://shanedowling.com/posts/reduce-developer-cognitive-load-with-nix/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://shanedowling.com/images/1*pKKqrJIhwCjSWjfz2BIQPw@2x.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Nixpkg is a package manager that uses a purely functional approach to package management, isolating packages and ensuring that there are no conflicts between them. It provides a powerful language for defining packages, which makes it easy to manage dependencies and ensure that software environments are reproducible and reliable. Additionally, Nixpkg makes it easy to manage multiple software environments and share projects with other developers.&lt;/p&gt;
&lt;p&gt;In addition to Nixpkg, there are two other tools that can be used in conjunction with Nix to improve developer productivity: Homemanager and Direnv.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nonviolent Communication</title>
      <link>https://shanedowling.com/posts/nonviolent-communication-a7bddf8d0805/</link>
      <pubDate>Fri, 27 Aug 2021 13:32:59 +0000</pubDate>
      <guid>https://shanedowling.com/posts/nonviolent-communication-a7bddf8d0805/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://shanedowling.com/images/1__Tq3cCMHDxnnkVTxtFSJ6jA.jpeg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;what-is-nonviolent-communication&#34;&gt;What is Nonviolent Communication?&lt;/h3&gt;
&lt;p&gt;Nonviolent Communication(NVC) helps us communicate clearly by breaking down and identifying our needs and communicating them compassionately.&lt;/p&gt;
&lt;h3 id=&#34;why&#34;&gt;Why?&lt;/h3&gt;
&lt;p&gt;NVC can help reduce conflict towards others and ourselves. It can also help us to hear others out and recognise each other&amp;rsquo;s needs and support acting more compassionately day to day.&lt;/p&gt;
&lt;h3 id=&#34;how&#34;&gt;How&lt;/h3&gt;
&lt;p&gt;At a high level, the steps involved are:&lt;/p&gt;
&lt;h4 id=&#34;observation&#34;&gt;Observation&lt;/h4&gt;
&lt;p&gt;Be present and listen carefully to what the other person is saying. How is it affecting you? Just observe, don&amp;rsquo;t evaluate.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5 Steps to a better Personal Development Plan(PDP)</title>
      <link>https://shanedowling.com/posts/wrangle-your-personal-development-plan-pdp-into-actionable-objectives-e448649b5db0/</link>
      <pubDate>Fri, 26 Mar 2021 15:30:42 +0000</pubDate>
      <guid>https://shanedowling.com/posts/wrangle-your-personal-development-plan-pdp-into-actionable-objectives-e448649b5db0/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://shanedowling.com/images/1__fc4D7D9urHFu0rbm8cpP2Q.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Reviewing your PDP can be a somewhat overwhelming process. So many areas of improvement can be highlighted, it can be a real challenge to discover what to focus on. Not only that but you also want to make sure your areas of focus have high impact benefits to the squad, so much to think about!&lt;/p&gt;
&lt;p&gt;These 5 steps should help give you the direction needed to turn those PDP opportunities into something actionable, demonstrable and focused on what you care about.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning Python as a Platform Engineer-First Steps</title>
      <link>https://shanedowling.com/posts/learning-python-as-a-platform-engineer-first-steps-911e59dd4af8/</link>
      <pubDate>Fri, 01 Jan 2021 14:48:49 +0000</pubDate>
      <guid>https://shanedowling.com/posts/learning-python-as-a-platform-engineer-first-steps-911e59dd4af8/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://shanedowling.com/images/1__t__tjPBb9m6YDhRdn3wKGSg.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve relatively recently moved into a Platform Engineering position after working in very developer oriented teams for many years. What&amp;rsquo;s interesting is that the engineers you work with have much more diverse and interesting backgrounds in terms of their experience, so there&amp;rsquo;s a real opportunity to grow and learn a lot more, as opposed to a more homogenous set of developers. With that in mind, I wanted to put together materials on how a more ops focused engineer can up-skill in Python(as that&amp;rsquo;s more my wheel-house), in particular what are the things that would help you move into a more Python-focused role.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Populate Ansible from Amazon secrets manager</title>
      <link>https://shanedowling.com/posts/populate-ansible-from-amazon-secrets-manager-8eac77127e37/</link>
      <pubDate>Thu, 03 Sep 2020 18:06:58 +0000</pubDate>
      <guid>https://shanedowling.com/posts/populate-ansible-from-amazon-secrets-manager-8eac77127e37/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://shanedowling.com/images/1__l0WrN40X7lf7tKsbdtj7Sw.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;One of the ways to improve your security and avoid passing around env files is to follow the &lt;a href=&#34;https://12factor.net/config&#34;&gt;twelve factor app&lt;/a&gt; and start populating your secrets from the environment. Another improvement is to pull those secrets from a known secret store, with features like rotation, auditing etc.&lt;/p&gt;
&lt;h3 id=&#34;requirements&#34;&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ansible.com/&#34;&gt;Ansible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Have some secrets stored in &lt;a href=&#34;https://aws.amazon.com/secrets-manager/&#34;&gt;AWS Secrets Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ansible should have access to the latest &lt;a href=&#34;https://aws.amazon.com/cli/&#34;&gt;aws-cli&lt;/a&gt; command(secrets manager is a recent addition)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;Jq&lt;/a&gt; if you&amp;rsquo;re storing json in your secrets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;rsquo;s worth testing your AWS calls to just extract the secret you&amp;rsquo;re interested in to stdout, from the terminal tests some calls like:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Better local development for Serverless Functions</title>
      <link>https://shanedowling.com/posts/better-local-development-for-serverless-functions-b96b5a4cfa8f/</link>
      <pubDate>Mon, 11 Feb 2019 20:15:38 +0000</pubDate>
      <guid>https://shanedowling.com/posts/better-local-development-for-serverless-functions-b96b5a4cfa8f/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://shanedowling.com/images/1__roedigbmFjRYkZobdZWuKg.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Lambda is a terrific piece of kit for all the benefits listed on the &lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS product page&lt;/a&gt; and &lt;a href=&#34;https://serverless.com/&#34;&gt;Serverless&lt;/a&gt; is a very useful framework for developing Lambda functions. However, developing serverless applications locally is a total pain if what you&amp;rsquo;re solving isn&amp;rsquo;t totally trivial.&lt;/p&gt;
&lt;p&gt;When things get complicated and your Lambda functions start to integrate with other AWS services, things really begin to break down. There are a few things that look like silver-bullets, I&amp;rsquo;ll share them here and explain why they didn&amp;rsquo;t work for me, then give you a working example that I myself struggled to find(hence me writing this).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Easy maintenance mode with nginx</title>
      <link>https://shanedowling.com/posts/easy-maintenance-mode-with-nginx-2d4d510a0980/</link>
      <pubDate>Mon, 20 Aug 2018 18:51:42 +0000</pubDate>
      <guid>https://shanedowling.com/posts/easy-maintenance-mode-with-nginx-2d4d510a0980/</guid>
      <description>&lt;p&gt;So I combined a few solutions I found online to come up with a quick way to set up maintenance mode using nginx. Ideally it shouldn&amp;rsquo;t happen but in times of emergency in can be good to knock up a quick maintenance page for everyone but your own internal ips.&lt;/p&gt;
&lt;h3 id=&#34;nginx-config&#34;&gt;Nginx Config&lt;/h3&gt;
&lt;p&gt;So here&amp;rsquo;s the configuration I use for nginx, it starts with setting the internal ips of your company in the main nginx config file. Then in the actual vhost, you can set it to watch for the existence of a maintenance_on.html and when it exists, throw a 503 and use the maintenance page as your 503 error page.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
