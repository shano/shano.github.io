<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shane Dowling - Tech</title><link href="https://shanedowling.com/" rel="alternate"></link><link href="https://shanedowling.com/feeds/tech.atom.xml" rel="self"></link><id>https://shanedowling.com/</id><updated>2020-11-02T00:00:00+00:00</updated><subtitle>Shane Dowling</subtitle><entry><title>Please, PLEASE make a domain for your own email address.</title><link href="https://shanedowling.com/please-please-make-a-domain-for-your-own-email-address.html" rel="alternate"></link><published>2020-11-02T00:00:00+00:00</published><updated>2020-11-02T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2020-11-02:/please-please-make-a-domain-for-your-own-email-address.html</id><summary type="html">&lt;p&gt;Don’t have a &lt;a class="reference external" href="mailto:me&amp;#64;gmail.com"&gt;me&amp;#64;gmail.com&lt;/a&gt; or &lt;a class="reference external" href="mailto:us&amp;#64;outlook.com"&gt;us&amp;#64;outlook.com&lt;/a&gt;, have a &lt;a class="reference external" href="mailto:me&amp;#64;myname.com"&gt;me&amp;#64;myname.com&lt;/a&gt;
instead! [Google locks people out of their
accounts](&lt;a class="reference external" href="https://www.businessinsider.com/google-users-locked-out-after-years-2020-10?r=US&amp;amp;IR=T"&gt;https://www.businessinsider.com/google-users-locked-out-after-years-2020-10?r=US&amp;amp;IR=T&lt;/a&gt;),
to me loss of my email address would be a total disaster. This is the
problem with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Don’t have a &lt;a class="reference external" href="mailto:me&amp;#64;gmail.com"&gt;me&amp;#64;gmail.com&lt;/a&gt; or &lt;a class="reference external" href="mailto:us&amp;#64;outlook.com"&gt;us&amp;#64;outlook.com&lt;/a&gt;, have a &lt;a class="reference external" href="mailto:me&amp;#64;myname.com"&gt;me&amp;#64;myname.com&lt;/a&gt;
instead! [Google locks people out of their
accounts](&lt;a class="reference external" href="https://www.businessinsider.com/google-users-locked-out-after-years-2020-10?r=US&amp;amp;IR=T"&gt;https://www.businessinsider.com/google-users-locked-out-after-years-2020-10?r=US&amp;amp;IR=T&lt;/a&gt;),
to me loss of my email address would be a total disaster. This is the
problem with monopolies and something everyone needs to think more
about. Imagine a world where a comment somewhere on an unrelated social
network wipes out 15 years of email and communication as well as ongoing
access to that email address. That’s today and if you don’t look out for
these things you can be locked out of incredibly important parts of your
own digital world.&lt;/p&gt;
&lt;p&gt;So a few quick tips:&lt;/p&gt;
&lt;div class="section" id="use-a-personal-domain-for-email-dont-rely-on-any-one-service-ever-with-a-personal-domain-you-can-keep-your-email-address-and-swap-to-different-suppliers-whenever-you-could-try-fastmail-with-your-me-myname-com-address-and-if-you-dont-like-it-swap-back-to-gmail-if-you-want-try-protonmail-maybe-either-way-your-email-address-never-needs-to-change"&gt;
&lt;h2&gt;Use a personal domain for email, don’t rely on any one service ever. With a personal domain you can keep your email address and swap to different suppliers whenever. You could try Fastmail with your &lt;a class="reference external" href="mailto:me&amp;#64;myname.com"&gt;me&amp;#64;myname.com&lt;/a&gt; address, and if you don’t like it swap back to Gmail if you want, try Protonmail maybe. Either way, your email address never needs to change.&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="always-backup-your-current-email-use-a-client-like-mail-or-thunderbird-and-always-download-your-mail"&gt;
&lt;h2&gt;Always backup your current email, use a client(like Mail or Thunderbird), and always download your mail.&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="dont-use-google-sign-in-up-process-ever-dont-use-any-companies-single-sign-on-with-your-google-account-gone-those-logins-are-totally-doomed-its-far-too-risky"&gt;
&lt;h2&gt;Don’t use Google Sign-In/Up process ever. Don’t use any companies single sign on. With your Google Account gone, those logins are totally doomed. It’s far too risky.&lt;/h2&gt;
&lt;p&gt;Bonus tip! Take a look at [nomoregoogle.com](&lt;a class="reference external" href="https://nomoregoogle.com"&gt;https://nomoregoogle.com&lt;/a&gt;)
and try to distribute some of your life away from one company.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Tech"></category></entry><entry><title>Populate Ansible from Amazon secrets manager</title><link href="https://shanedowling.com/populate-ansible-from-amazon-secrets-manager-8eac77127e37.html" rel="alternate"></link><published>2020-09-03T18:06:58+00:00</published><updated>2020-09-03T18:06:58+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2020-09-03:/populate-ansible-from-amazon-secrets-manager-8eac77127e37.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__l0WrN40X7lf7tKsbdtj7Sw.png"&gt;&lt;/p&gt;
&lt;p&gt;One of the ways to improve your security and avoid passing around env files is to follow the &lt;a href="https://12factor.net/config"&gt;twelve factor app&lt;/a&gt; and start populating your secrets from the environment. Another improvement is to pull those secrets from a known secret store, with features like rotation, auditing etc.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ansible.com/"&gt;Ansible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Have …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__l0WrN40X7lf7tKsbdtj7Sw.png"&gt;&lt;/p&gt;
&lt;p&gt;One of the ways to improve your security and avoid passing around env files is to follow the &lt;a href="https://12factor.net/config"&gt;twelve factor app&lt;/a&gt; and start populating your secrets from the environment. Another improvement is to pull those secrets from a known secret store, with features like rotation, auditing etc.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ansible.com/"&gt;Ansible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Have some secrets stored in &lt;a href="https://aws.amazon.com/secrets-manager/"&gt;AWS Secrets Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ansible should have access to the latest &lt;a href="https://aws.amazon.com/cli/"&gt;aws-cli&lt;/a&gt; command(secrets manager is a recent addition)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stedolan.github.io/jq/"&gt;Jq&lt;/a&gt; if you're storing json in your secrets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's worth testing your AWS calls to just extract the secret you're interested in to stdout, from the terminal tests some calls like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;aws secretsmanager get-secret-value --secret-id some/secret/name --query SecretString --output text
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Or for json you might do something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;aws secretsmanager get-secret-value --secret-id secrets&lt;span class="p"&gt;|&lt;/span&gt; jq --raw-output &lt;span class="s1"&gt;&amp;#39;.SecretString&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; jq -r .API_KEY
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Ansible Config&lt;/h3&gt;
&lt;p&gt;Once you have secrets manager outputting your secrets to stdout, you can utilise it in Ansible. In this example I'm outputting to an env file but this could but used anywhere in Ansible. Instead of outputting to a file you could set its own environment variables then spin up the project from Ansible without outputting to a file anywhere.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Setting env with some secret&lt;/span&gt;
  &lt;span class="nt"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;executable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/bin/bash&lt;/span&gt;
  &lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
    &lt;span class="no"&gt;aws secretsmanager get-secret-value --secret-id some/secret/name --query SecretString --output text&lt;/span&gt;
  &lt;span class="nt"&gt;register&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;some_secret&lt;/span&gt;

&lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;pass response of ssm to .env file&lt;/span&gt;
  &lt;span class="nt"&gt;become&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;no&lt;/span&gt;
  &lt;span class="nt"&gt;blockinfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;some_environment_path&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}/.env&amp;#39;&lt;/span&gt;
    &lt;span class="nt"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;present&lt;/span&gt;
    &lt;span class="nt"&gt;create&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;yes&lt;/span&gt;
    &lt;span class="nt"&gt;marker&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;#&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;{mark}&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;MY&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;SECRET&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;FROM&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;AWS&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;#&amp;quot;&lt;/span&gt;
    &lt;span class="nt"&gt;block&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
      &lt;span class="no"&gt;SOME_SECRET=&amp;#39;{{ some_secret.stdout }}&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And that's it! Anything I could've done better(which I'm sure there is), do let me know!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Better local development for Serverless Functions</title><link href="https://shanedowling.com/better-local-development-for-serverless-functions-b96b5a4cfa8f.html" rel="alternate"></link><published>2019-02-11T20:15:38+00:00</published><updated>2019-02-11T20:15:38+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2019-02-11:/better-local-development-for-serverless-functions-b96b5a4cfa8f.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__roedigbmFjRYkZobdZWuKg.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Lambda is a terrific piece of kit for all the benefits listed on the &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS product page&lt;/a&gt; and &lt;a href="https://serverless.com/"&gt;Serverless&lt;/a&gt; is a very useful framework for developing Lambda functions. However, developing serverless applications locally is a total pain if what you're solving isn't totally trivial.&lt;/p&gt;
&lt;p&gt;When things get complicated and your …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__roedigbmFjRYkZobdZWuKg.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Lambda is a terrific piece of kit for all the benefits listed on the &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS product page&lt;/a&gt; and &lt;a href="https://serverless.com/"&gt;Serverless&lt;/a&gt; is a very useful framework for developing Lambda functions. However, developing serverless applications locally is a total pain if what you're solving isn't totally trivial.&lt;/p&gt;
&lt;p&gt;When things get complicated and your Lambda functions start to integrate with other AWS services, things really begin to break down. There are a few things that look like silver-bullets, I'll share them here and explain why they didn't work for me, then give you a working example that I myself struggled to find(hence me writing this).&lt;/p&gt;
&lt;h3&gt;Localstack&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/localstack/localstack"&gt;Localstack&lt;/a&gt; is definitely the biggest attempt at a silver bullet here. Basically it emulates a huge chunk of AWS locally and you connect your serverless functions into that. Why I didn't use it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Bits worked, but if you have any sort of half complicated setup(like a region outside us-east-1 or eu-west-1), it will break down. Uploading a whole cloudformation template was a disaster of broken links between services. I got to the point of editing localstack code to try fix issue after issue I was coming across and gave up. The product would be cool if it wasn't trying to do something so super complicated.&lt;/li&gt;
&lt;li&gt;It's also a huge resource drain on a developer's machine.&lt;/li&gt;
&lt;li&gt;Fundamentally, you shouldn't have to emulate half of AWS to test your code.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Serverless Offline&lt;/h3&gt;
&lt;p&gt;Serverless offline is fairly straightforward. It should allow you to spin up your functions locally and call them as needed. Where this fell down for me was that it required you to have HTTP endpoints for your lambda functions, all of our Lambda functions were driven either by SQS events or a Cron. We also instantiate our SNS topics in our code, so it would constantly attempt to create SNS topics and AWS would throw errors.&lt;/p&gt;
&lt;p&gt;I also did try using &lt;a href="https://www.npmjs.com/package/serverless-offline-sqs"&gt;serverless-offline-sqs&lt;/a&gt; but could not get it to drive events into our Lamdba functions.&lt;/p&gt;
&lt;p&gt;I was burning a lot of time getting a dev environment setup and I realised that this was fundamentally the wrong approach. I needed to start writing proper unit tests and use mocking to emulate the infrastructure(I mean ideally they'd be isolated properly and infrastructure/functions would be totally ignorant of each other, but that's for another day).&lt;/p&gt;
&lt;h3&gt;The Example&lt;/h3&gt;
&lt;p&gt;Say we're developing an application that makes use of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lambda&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;li&gt;SQS&lt;/li&gt;
&lt;li&gt;SNS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Your lambda function connects to your MongoDB, does a thing and fires off occasional SNS notifications/SQS messages to other services.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lambda&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For the actual code being run, I was going to use &lt;a href="https://www.npmjs.com/package/jest"&gt;jest&lt;/a&gt; to start writing tests. Jest works well and integrates nicely into serverless.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To emulate MongoDB, I'm going to use an &lt;a href="https://www.npmjs.com/package/mongodb-memory-server"&gt;in-memory version of MongoDB&lt;/a&gt; that ties nicely into our Mongoose models.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQS/SNS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For any Amazon infrastructure, we're going to use &lt;a href="https://www.npmjs.com/package/aws-sdk-mock"&gt;aws-sdk-mock&lt;/a&gt;. This is an excellent wrapper around &lt;a href="https://www.npmjs.com/package/sinon"&gt;sinon&lt;/a&gt; for mocking the AWS infrastructure, that's super useful for unit tests as you'll see later.&lt;/p&gt;
&lt;h3&gt;Tieing it all together&lt;/h3&gt;
&lt;p&gt;So firstly lets install our dependencies.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install aws-sdk-mock mongodb-memory-server sinon jest --save-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Let's also create a tests folder to keep all this test code in.&lt;/p&gt;
&lt;p&gt;mkdir tests&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setting up MongoDB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now, for our code to integrate with our in-memory Mongo-DB server, we're going to need to add a few setup/teardown functions and a Mongo Environment. Clone this &lt;a href="https://github.com/vladgolubev/jest-mongodb"&gt;repo&lt;/a&gt; and put:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setup.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;teardown.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mongo-environment.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;into your new test folder.&lt;/p&gt;
&lt;p&gt;In your root directory add a &lt;code&gt;jest.config.js&lt;/code&gt; with this content.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;globalSetup&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./tests/setup.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;globalTeardown&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./tests/teardown.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;testEnvironment&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./tests/mongo-environment.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;roots&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./tests/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This should be enough to get MongoDB up and running. Now onto our actual tests scripts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Setting up our tests&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Now, finally, you can tie it all together with this snippet:&lt;/p&gt;
&lt;p&gt;Add jest to your package.json&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;jest&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And run with &lt;code&gt;npm test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One major point to note is that aws-mock-sdk requires a very specific way of instantiating AWS resources(within the scope of the function tests), so if you see any errors around aws regions, double check &lt;a href="https://github.com/dwyl/aws-sdk-mock#use-in-your-tests"&gt;you're following the rules&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Easy maintenance mode with nginx</title><link href="https://shanedowling.com/easy-maintenance-mode-with-nginx-2d4d510a0980.html" rel="alternate"></link><published>2018-08-20T18:51:42+00:00</published><updated>2018-08-20T18:51:42+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2018-08-20:/easy-maintenance-mode-with-nginx-2d4d510a0980.html</id><summary type="html">&lt;p&gt;So I combined a few solutions I found online to come up with a quick way to set up maintenance mode using nginx. Ideally it shouldn't happen but in times of emergency in can be good to knock up a quick maintenance page for everyone but your own internal ips …&lt;/p&gt;</summary><content type="html">&lt;p&gt;So I combined a few solutions I found online to come up with a quick way to set up maintenance mode using nginx. Ideally it shouldn't happen but in times of emergency in can be good to knock up a quick maintenance page for everyone but your own internal ips.&lt;/p&gt;
&lt;h3&gt;Nginx Config&lt;/h3&gt;
&lt;p&gt;So here's the configuration I use for nginx, it starts with setting the internal ips of your company in the main nginx config file. Then in the actual vhost, you can set it to watch for the existence of a maintenance_on.html and when it exists, throw a 503 and use the maintenance page as your 503 error page.&lt;/p&gt;
&lt;h3&gt;How to use&lt;/h3&gt;
&lt;p&gt;By default I have the file named as maintenance_off.html, so it's only a simple move operation to turn on maintenance mode. For the content of my maintenance file, I generally use this self-contained static html file to serve out a message to customers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Any sort of conditionals going on on your web server is likely to slow things down by a few milliseconds. Again you're asking your web server to check against network and the disk per request, then make a decision, so bear this in mind before implementing a solution like this.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Lessons from Remote Working</title><link href="https://shanedowling.com/for-the-past-few-years-as-a-freelancer-ive-done-many-forms-of-remote-work-19b58de3bc90.html" rel="alternate"></link><published>2018-02-18T22:57:15+00:00</published><updated>2018-02-18T22:57:15+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2018-02-18:/for-the-past-few-years-as-a-freelancer-ive-done-many-forms-of-remote-work-19b58de3bc90.html</id><summary type="html">&lt;p&gt;For the past few years as a freelancer, I've done many forms of remote work. I've worked both part and full-time remote positions, I've also worked with teams across multiple time-zones, in locations ranging from home offices, hotdesking, even camping and crummy motels, so I have a fairly broad range …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For the past few years as a freelancer, I've done many forms of remote work. I've worked both part and full-time remote positions, I've also worked with teams across multiple time-zones, in locations ranging from home offices, hotdesking, even camping and crummy motels, so I have a fairly broad range of experience with remote working. It seems to be the trend that many companies have opted for, and this is definitely a great idea, both for the employee and the company. The employee can often cultivate a better work-life balance and the company can access a far wider range of talent than what may exist in the local area.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__vEPp8je3q4MQbK__hHru5AA__2x.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;However, with remote teams, there is a cost paid for the lack of a physical presence. If right now, communication is sloppy and requires a lot of working around the system, going remote is going to be difficult. Most of this article deals with the issues of communication but also problems can come up with regard to teamwork, motivation and the potential for a class-based communication system, with remote workers being second class citizens so to speak. I'm also going to be stealing a bunch of stuff from the Agile framework, as (intentionally or not), it seems to cultivate very good remote working conditions, from my experience.&lt;/p&gt;
&lt;h3&gt;Communication&lt;/h3&gt;
&lt;p&gt;So the first thing is (obviously enough) communication. You will have to cultivate a lot more intentional focus on communication. You begin to appreciate how excellent the bandwidth of face to face conversations is when its gone. One way in which my more successful remote teams worked is through the &lt;a href="https://en.wikipedia.org/wiki/Agile_software_development"&gt;Agile framework&lt;/a&gt;. Agile is a programmer-specific framework, but there are still lessons that can be taken away for non-development teams. Many of the things I've found that worked within remote teams have strong Agile ties.&lt;/p&gt;
&lt;h3&gt;Enforce Morning stand-ups&lt;/h3&gt;
&lt;p&gt;So within Agile, there is the idea of a morning standup, where you essentially discuss what you worked on yesterday, any particular blockers to that work and what you plan on doing today. This sort of morning meeting often becomes the backbone of communication with remote teams, it also has a great bang for your buck in terms of actually building a sense of a team. Too easily can you slip into the role of a lone remote worker and ignore the resources on your team, you do so at your peril, so having a semi-formal place to air out your issues and perhaps get valuable insights from others should not be under-estimated. For those running teams, you can get a huge amount of value in a very short space of time.&lt;/p&gt;
&lt;h3&gt;Emulate the water cooler&lt;/h3&gt;
&lt;p&gt;While I'm on the topic of morning retro's there is another aspect to meetings that I found definitely increases my feeling of working within a team and that was the watercooler-esque conversations with the team before and after meetings. These to me are somewhat essential if you want to try and cultivate a good team vibe. Typically at the start of a remote meeting, someone will be late or have connection issues, use the time to chat about life, catch up with the people who are online with you and fill them in on what's new in your life. These things are really easy to ignore but when you start getting into a routine of informal chatting it can really create a great connection between team members.&lt;/p&gt;
&lt;h3&gt;Retrospectives are also useful&lt;/h3&gt;
&lt;p&gt;Retros are another part of the Agile methodology, essentially they are a semi-regular meeting to review how a past sprint(few weeks work) has gone. There's plenty of info online if you want to dig in, but essentially, it's an intentional review of how things are going outside of the work itself. One topic that came up often in retro's is how we could improve communication, we'd often face an issue, come up with a potential solution, try it out and see how it went in the next retro. The points I'm sharing here are just a starting off point, it's going to be up to you and your team to figure out what works best and retro's can be a great way to put some structure around that and (to some extent) force these beneficial reviews because it's not like you going to happen across each other at lunchtime, and chat out your ideas. Formalise these types of insight capturing or they will be lost.&lt;/p&gt;
&lt;h3&gt;Everyone should act as if remote&lt;/h3&gt;
&lt;p&gt;One thing that can kill a remote team vibe is where most of the team is in an office and remote members have to join from a screen in. I've sat in such meetings and essentially you become a second class member of the meeting. I guarantee you will not say nearly as much as you could have, had you been on-site. Interjecting on someone's point is really difficult and awkward when it's on a room full of people separate to you, the time delay alone can mean awkward breaks in the conversation, you'll give up and often won't respond to much unless there's specific attention directed towards you. I've been there, it happens and valuable insights can be missed as a result.&lt;/p&gt;
&lt;p&gt;Try to see if you can test having all team members working a remote setup. It will help immensely with balancing out communication barriers between the team and if there are sub-conversations that need to be had been two members in the same office, they can always take it offline after the remote meeting has happened, so hopefully, it should'nt ruin the office-workers bandwidth too much.&lt;/p&gt;
&lt;h3&gt;Slack is actually awesome&lt;/h3&gt;
&lt;p&gt;While I didn't want to specifically talk much about tools, I will say this, just use Slack. It's flexibility, the variety of communication methods and ease of use make it the best tool I've found for working remotely. Hands down. There's plenty of reviews discussing features, but for me, the best part was when a text-conversation became too burdensome, how easily it was to just swap to an audio/video call or a screen-sharing session. It's simply awesome.&lt;/p&gt;
&lt;p&gt;If the company you work with doesn't use Slack and is using something rubbish like Skype or something painful like an old ass version of Cisco WebEx that doesn't support Linux(ugh), appear.in can also provide a handy video chat tool that requires no sign-up and just a browser to get things going. Can definitely recommend it too.&lt;/p&gt;
&lt;p&gt;Try use video chat where you can, I have found it can get really easy to get too comfortable typing to communicate with team members. Never underestimate the value of a video conversation, even if it often feels like too much effort from the comfort of your office chair.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__wRyT5k0tDgJZZ6wcwxAcpw__2x.jpeg"&gt;&lt;/p&gt;
&lt;h3&gt;Get dressed for work&lt;/h3&gt;
&lt;p&gt;This is just a small point, but it really will do you no harm to get dressed in the morning. You want to create as much of an appearance of a working environment as possible, even when it couldn't be further from the truth. Yanking a shirt out of my backpack gave me some sense of professionalism even when it was a laptop on my lap on some dingy couch in a run-down motel.&lt;/p&gt;
&lt;p&gt;The more simulated distance you can create between "work you" and "life you" the less those two things will bleed into each other, which is better for your headspace and of those around you, coworkers and family benefit too. So try come up with as many simulated differences as possible. Perhaps try having a routine that emulates commuting or a habit that signifies "this is the start of work", that isn't just getting right into work.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__d1fy9ivJ4ziTH6jxvEoBFQ__2x.jpeg"&gt;&lt;/p&gt;
&lt;h3&gt;Try to make it fun&lt;/h3&gt;
&lt;p&gt;One of the QA members I worked with always came up with nice ideas for each of the remote workers to share something about their location or day for each retro. So try take a photo of your workspace or go outside your front door and take a picture, these little things were a really nice way to get a sense of what was going on in your co-worker's lives. Not essential but definitely a nice thing to do.&lt;/p&gt;
&lt;h3&gt;Use the focus&lt;/h3&gt;
&lt;p&gt;I've worked in many companies (remote and on-site) that have had shitty communication setups. Too many meetings, too many people in meetings, pointless meetings with no aim, the list goes on. This often happened because there was no barrier to just adding a few more people who might be useful in that meeting, hey the meeting room is a few feet from my desk, I can drop in for a bit.&lt;/p&gt;
&lt;p&gt;With remote working, you actually have a nice default which is that communication doesn't come easy, so make use of that. Start to become very intentional about how you communicate and why. You can create a very refined, tight communication structure, filled with value because communication itself becomes a regular topic to refine in and of itself. There are no natural moments where two people are sitting beside each other where you can informally ask "Hey can I run this by you", those interactions get forgotten when you're running a local team, for better or worse.&lt;/p&gt;
&lt;h3&gt;What now?&lt;/h3&gt;
&lt;p&gt;Myself, I've since moved back to a full-time office position within an office, with a generous option to remote work(which I've taken them up on occasion), I'll share another post on why at a later stage, but if I remember any other insights from my years of remote working, I will certainly add it here.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__6gfnVvkMRFtjVsWF7vkClA.png"&gt;&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Supplementing an iPad Pro with Linux</title><link href="https://shanedowling.com/supplementing-an-ipad-pro-57a809a06d7f.html" rel="alternate"></link><published>2018-01-21T13:04:52+00:00</published><updated>2018-01-21T13:04:52+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2018-01-21:/supplementing-an-ipad-pro-57a809a06d7f.html</id><summary type="html">&lt;p&gt;Recently I wrote about &lt;a href="https://shanedowling.com/why-im-using-an-ipad-as-my-at-home-machine-2fe3e8949bb2"&gt;why I'm using an iPad Pro as my main "at home" machine&lt;/a&gt; and &lt;a href="https://shanedowling.com/how-am-i-using-my-ipad-pro-as-a-development-machine-e4912a31744e"&gt;how I'm generally using it for tinkering around with remote servers&lt;/a&gt;. There is however, one caveat. I do still have an at-home server that I use for helping with making the iPad as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I wrote about &lt;a href="https://shanedowling.com/why-im-using-an-ipad-as-my-at-home-machine-2fe3e8949bb2"&gt;why I'm using an iPad Pro as my main "at home" machine&lt;/a&gt; and &lt;a href="https://shanedowling.com/how-am-i-using-my-ipad-pro-as-a-development-machine-e4912a31744e"&gt;how I'm generally using it for tinkering around with remote servers&lt;/a&gt;. There is however, one caveat. I do still have an at-home server that I use for helping with making the iPad as feature rich as I need it to be.&lt;/p&gt;
&lt;h4&gt;The Server&lt;/h4&gt;
&lt;p&gt;To do this, I essentially have Archlinux running on an old Thinkpad X230, sitting under my router connected via an ethernet cable to keep things nice and stable. The only way I manage it is over SSH.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1____SEPppZNXVSX8WegbbzcEQ.png"&gt;&lt;/p&gt;
&lt;h4&gt;Blocking Advertisements&lt;/h4&gt;
&lt;p&gt;While the iPad has the ability to add content blockers into Safari, this (obviously enough) did not block the ads within Apps, nor did it provide as complete an ad-blocking setup as I would have liked. Though I can recommend &lt;a href="https://1blocker.com"&gt;1Blocker&lt;/a&gt; as a pretty great app in a pinch.&lt;/p&gt;
&lt;p&gt;For this I ended up using &lt;a href="https://pi-hole.net"&gt;pi-hole&lt;/a&gt;, a pretty excellent ad-blocking solution that works on the router end of things. There's a great guide on their site, that allows you to set your router to use a local DNS server(instead of your ISPs or Google's for example). Also how pi-hole blocks is pretty great too, it attempts to &lt;a href="https://www.reddit.com/r/pihole/comments/7evq88/how_does_pihole_responds_to_a_piholed_domain/dq8988s/"&gt;minimise visual interruption&lt;/a&gt;, which is neat.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__obYk____7GDnINeg2aRaxg6w.png"&gt;&lt;/p&gt;
&lt;h4&gt;Making use of Usenet&lt;/h4&gt;
&lt;p&gt;Very rarely do I need to use Usenet these days, my various TV/Movie subscription almost always sort me out. When I do need to grab something off Usenet, I have a very nice setup connecting my iPad to my Archlinux box to add a few nice features.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__0rs2KHDuoThDZD0sqxrH9g.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Firstly I installed/configured &lt;a href="https://nzbget.net"&gt;NZBGet&lt;/a&gt; on my Archlinux machine and ensured I could connect to the WebUI from the iPad. Don't worry if the UI looks a bit rough around the edges, someone has written a really nice client for IOS.&lt;/p&gt;
&lt;p&gt;The next setup it to down/setup &lt;a href="https://itunes.apple.com/us/app/nzbclient-for-nzbget/id1178245637?mt=8"&gt;NZBClient for NZBGet&lt;/a&gt; on my iPad, which doesn't take long. You can fill in both your NZBGet server details as well as your &lt;a href="https://sabnzbd.org/wiki/introduction/nzb-sources"&gt;indexer&lt;/a&gt;, that way, you can search for stuff and download it directly from your iPad, pretty seamless! However what happens when you want to watch/listen to anything you might have grabbed from Usenet?&lt;/p&gt;
&lt;h4&gt;Media Streaming&lt;/h4&gt;
&lt;p&gt;&lt;img alt="" src="images/1__GYDK9r5tzOltIFYEmakcsg.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;The most useful/performant App I found so far for Media Streaming, is an app called &lt;a href="https://itunes.apple.com/us/app/playerxtreme-media-player-pro/id440488550?platform=ipad&amp;amp;preserveScrollPosition=true#platform/ipad"&gt;PlayerExtreme&lt;/a&gt;. It supports a lot of different remote server types. For me I actually found just setting up plain &lt;a href="https://wiki.archlinux.org/index.php/samba"&gt;Samba&lt;/a&gt; on Archlinux worked really well for streaming, but there's plenty of other protocols you can try.&lt;/p&gt;
&lt;p&gt;Either way, it, combined with my Usenet client means I never need to really hit the server anymore, everything has been up and running for a few months now and is always working as expected. I'd definitely give this is a go if you running into similar limitations on your iPad.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>The iPad Pro as a focused, simple coding machine</title><link href="https://shanedowling.com/how-am-i-using-my-ipad-pro-as-a-development-machine-e4912a31744e.html" rel="alternate"></link><published>2018-01-20T22:47:42+00:00</published><updated>2018-01-20T22:47:42+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2018-01-20:/how-am-i-using-my-ipad-pro-as-a-development-machine-e4912a31744e.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__bY3zgSqJyGTkf__ghXqpKRQ.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;So recently I wrote a post on &lt;a href="https://shanedowling.com/why-im-using-an-ipad-as-my-at-home-machine-2fe3e8949bb2"&gt;why a developer might use an iPad Pro&lt;/a&gt; as an at home machine. Today, I'm going to elaborate on how I'm actually using it day to day.&lt;/p&gt;
&lt;h3&gt;So there is not much you can do locally&lt;/h3&gt;
&lt;p&gt;Realistically, as a local dev environment there …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__bY3zgSqJyGTkf__ghXqpKRQ.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;So recently I wrote a post on &lt;a href="https://shanedowling.com/why-im-using-an-ipad-as-my-at-home-machine-2fe3e8949bb2"&gt;why a developer might use an iPad Pro&lt;/a&gt; as an at home machine. Today, I'm going to elaborate on how I'm actually using it day to day.&lt;/p&gt;
&lt;h3&gt;So there is not much you can do locally&lt;/h3&gt;
&lt;p&gt;Realistically, as a local dev environment there really is not much an iPad Pro can do. I'm used to proper Linux/Unix based machines, these sandboxed apps just didn't cut it for me, there's nothing close to a full development system on an iPad(sorry I know!), I wouldn't even bother trying. So pretty quickly I opted to go for a remote Linux box that I could remotely access.&lt;/p&gt;
&lt;p&gt;I picked up an iPad Pro with the ability to add in cellular data, so I can hop onto my remote server from anywhere I have data, which made this a solid possibility. I know I am basically cheating, but, I still needed to investigate if there was a painless enough setup I could use on the iPad that I would actually continue to use. So a fast starting server, decent network connection, and a decent enough editing environment was essential.&lt;/p&gt;
&lt;h3&gt;Editing Code&lt;/h3&gt;
&lt;p&gt;Now that I've already pulled back the curtain(you can't really code just on an iPad), we need to decide on a method of remotely editing code. I've used Vim for years, for me, I was happy to just ssh onto the server using some terminal client, setup a nice Vim environment and be done. Everything went well setup wise, but unfortunately vim editing sucks a lot more when you're missing an escape key. Which the iPad Pro Smart Keyboard does not have and I'm not lugging around a second keyboard just for the ESC key.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__wXkWchnmXkkug2FEzXFdOA.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;There is hacky ways with other shortcuts to get esc working, there's also an onscreen esc key that terminal clients provide for IOS, but it's just just the same, my decade old Vim muscle memory makes the whole thing too painful when I keep hitting backtick constantly. So Vim was out the window.&lt;/p&gt;
&lt;p&gt;I tried a few different options but in the end, &lt;a href="http://gocoedit.com"&gt;GoCoEdit&lt;/a&gt; was the best available. It can remotely mount folders over ssh, it performs pretty well over networking and it has a fairly decent interface(sublime textish if that helps).&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__vel3b1tg__V__rsu4RlMO2Yg.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;If you do more web-based editing, I hear Coda is pretty great but not what I wanted for my needs. I'm a more terminals, piping and grepping, not pretty pages and CSS.&lt;/p&gt;
&lt;p&gt;What I'll probably end up doing is setting up &lt;a href="http://spacemacs.org"&gt;Spacemacs&lt;/a&gt; with the Emacs configuration and seeing if I can finally pull the trigger and start using Emacs's crazy keybindings, but I'm not learning a whole new set of editor shortcuts right now.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__hCg__jKnXH__1LM3zXbVnxew.png"&gt;&lt;/p&gt;
&lt;h3&gt;Executing Applications&lt;/h3&gt;
&lt;h4&gt;Which remote server&lt;/h4&gt;
&lt;p&gt;I needed a way to be able to spin up/shut down a remote Linux box, have it start-up pretty quickly and do this in the painless way as possible, because I'm not paying for constantly on uptime when this is only being used very occasionally by myself. I also wanted it to be connectable via the same access details each time, to avoid having to put in new server IPs into my terminal client every time I started up the server.&lt;/p&gt;
&lt;p&gt;I tried out both Vultr and DigitalOcean for this, mostly as they were relatively straightforward to work with and this is mostly for me playing around with things, not production uptime machines. So in the end it came down to speed and App quality. Cutting a long story short, DigitalOcean won out. It supported having a reserved ip, which meant I didn't need to rely on something like DynDNS/waiting for DNS propagation each time I powered it down/up again(or manually setting IPs). It was also very quick to spin up, like shockingly quick. If I requested a power-up via the DigitalOcean IOS app, by the time I'd swapped to my ssh client and connected, it was already up, which was crazy good for me. I could also run an instance from London which reduced latency a bunch for me, that was a nice advantage over Vultr. To add to it, the app that could connect to DigitalOcean seem to be of a better quality(and actually worked, which is nice). None of the apps tested were particularly amazing but the DigitalOcean one consistently worked and worked well. So from my perspective, I'd strongly suggest DigitalOcean for such a setup.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__hV07DCg6sdHlxSfoK__D7tA.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;So people know, the DigitalOcean app I tried was &lt;a href="https://itunes.apple.com/us/app/digitalocean-manager/id633128302?mt=8"&gt;DigitalOcean Manager&lt;/a&gt; and the Vultr one was called &lt;a href="https://itunes.apple.com/us/app/vulture-unofficial-vultr-app/id1116844578?mt=8"&gt;Vulture&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Remotely connecting&lt;/h3&gt;
&lt;p&gt;So here's the list of tools I use for connecting to various services I might need.&lt;/p&gt;
&lt;h4&gt;SQL Client&lt;/h4&gt;
&lt;p&gt;So on the App Store there are a few SQL Clients but none of them looked so great. So I just use &lt;a href="http://www.mycli.net"&gt;mycli&lt;/a&gt; on the server itself, works just fine.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__wPGK5QcybjIjH8ePcYmV__g.jpeg"&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://itunes.apple.com/gb/app/termius/id549039908?mt=8"&gt;Termius&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;I've been a Linux user for so many years, I'm pretty comfortable working exclusive on the command line. Termius is the de-facto ssh terminal client for IOS and for good reason. I ran it, it worked perfectly and never even bothered looking at anything else.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__iS2vFJJgmH5XpACE6GmV9g.png"&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://www.docker.com"&gt;Docker&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;I would definitely recommend picking up some Docker knowledge if you haven't already. Being able to quickly spin up services on a remote machine is really handy. For example I wanted to migrate from my static content pelican site to Medium, but Medium only accepts Wordpress archives. So I spun up a basic Wordpress Docker, used a quick script(with a few of my own bugfixes) to import my static content to Wordpress and exported to Medium, all without touching the parent operating system. All very nice!&lt;/p&gt;
&lt;h3&gt;A Handy Tip&lt;/h3&gt;
&lt;p&gt;So one thing that might be useful is when you exit your little server to have it automatically shut down so you don't need to keep remembering to kill the server via the app. If you want to do this without needing to enter a password each time, firstly run this command to start editing the sudoers file.&lt;/p&gt;
&lt;p&gt;sudo visudo&lt;/p&gt;
&lt;p&gt;Then add this line to allow passwordless access to poweroff commands.&lt;/p&gt;
&lt;p&gt;username   ALL=(ALL) NOPASSWD: /sbin/poweroff, /sbin/reboot, /sbin/shutdown&lt;/p&gt;
&lt;p&gt;Then create an alias for your user so that when you hit exit, it actually shuts down the machine. Put this in your .bashrc or .zshrc or whatever rc your shell uses.&lt;/p&gt;
&lt;p&gt;alias exit='sudo poweroff'&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__6gfnVvkMRFtjVsWF7vkClA.png"&gt;&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Why an iPad for a backend developer</title><link href="https://shanedowling.com/why-im-using-an-ipad-as-my-at-home-machine-2fe3e8949bb2.html" rel="alternate"></link><published>2018-01-08T19:38:33+00:00</published><updated>2018-01-08T19:38:33+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2018-01-08:/why-im-using-an-ipad-as-my-at-home-machine-2fe3e8949bb2.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__B__WKx4__N__VChXf__FWDV5dg__2x.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;So I'm a backend developer. I'm often closest to the source of most technical problems at my job. Networking issues, memory issues, hardware issues, operating system issues, the list goes on. I need to be able to tinker and play with things often, so usually my work environments reflect this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__B__WKx4__N__VChXf__FWDV5dg__2x.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;So I'm a backend developer. I'm often closest to the source of most technical problems at my job. Networking issues, memory issues, hardware issues, operating system issues, the list goes on. I need to be able to tinker and play with things often, so usually my work environments reflect this. So the question is, why in God's name would I want to move to an iPad?&lt;/p&gt;
&lt;p&gt;The downsides are immediately obvious, I have almost no tinkering power on here. It's not Open Source, like at all. There's very little I can do with this if something goes wrong, recently I had an issue with an app not syncing with my iPhone, I had to contact the developer and ask for assistance, rather than just jump down to the log files or the code itself and see what was up.&lt;/p&gt;
&lt;p&gt;I also like to keep abreast of whatever new tech changes happen on Linux machines. Examples off the top of my head are the removal of ifconfig on most systems or the change to upstartd, these were things I had faced on my bleeding edge desktop long before the became the norm on my work servers. But, most of these "issues" I can live with. Let me explain the benefits and how I've gotten around the inability to tinker and play about with the bleeding edge server changes.&lt;/p&gt;
&lt;h3&gt;Single tasking is great&lt;/h3&gt;
&lt;p&gt;These days I prefer Apps to the Web. For me the web is an open-ended mind field of negative sentiment and distraction. I find myself disliking it more and more when I jump onto a web browser for anything other than totally focused work, it's just a time suck for me. So now I find the idea of a full-screen, mostly single tasking app-driven system does wonders for my focus. (IOS does support split screen but it's mostly terrible to use and unintuitive in it's design, so I'm happy to ignore it's existence).&lt;/p&gt;
&lt;p&gt;What single tasking am I doing? Right now I'm writing this on the wonderfully hipster Hanx app, which is essentially an old type-writer clone(for some reason the sound of old clackey keys makes me want to write more). I also spend a fair amount of time reading and writing on the Medium, and I have a few dev/ssh apps on here(but more on that later), in general it's mostly to pop on, do something specific and hop off. Rarely do I hit Safari and rarely do I get stuck on some random time-sink that had nothing to do with my original intentions. The sandboxed feel of working within the context of "Apps" genuinely has done wonders for my sanity.&lt;/p&gt;
&lt;h3&gt;Maintenance takes up energy&lt;/h3&gt;
&lt;p&gt;The first thing I do when I jump onto my own Macbook or my work Linux machine is maintenance. Any new brew updates on this thing? Everything running okay? Do I need to run CleanMyMac or Hazel to tidy things up? Often times on my personal machine, I don't want to think about these tasks, I want to use the tool in my hands, not screw about with it's inner workings. I might be a developer, but at home I might want to just hop on some writing project or screw around with my guitar on Garageband, I would say, with a laptop more than half the times I wanted to do some specific task, I would go down some unrelated technical rabbit hole and go nowhere near the task I intended on solving. The iPad removes a lot of that, it feels like it's removed a barrier that I always have with my Macbook.&lt;/p&gt;
&lt;h3&gt;Tinkering and Digging have their place&lt;/h3&gt;
&lt;p&gt;When I do want to start screwing around with things, as I often do, I spin up a DigitalOcean instance, SSH on and play around, simple as that. I have an iPad that takes a sim card for cellular data and ssh doesn't take up much data for me. On top of that DigitalOcean instances seem to spin up pretty instantaneously for me, so there really isn't much of a barrier for me to get to a tinkery Debian environment from my iPad.&lt;/p&gt;
&lt;p&gt;Also for me and my personal tinkering, Vim is a perfectly excellent editor. However, I even have a local editor on my iPad that allows me to mount remote SSH servers should I want something locally. Also pleasantly Emacs with Spacemacs seems to work fine over ssh, so if I need to do some heavier development, that's always an option.&lt;/p&gt;
&lt;p&gt;The nice thing about all this however is my tinkering environment is siloed in a very pleasing way. It's also fully backed up at an OS level for a dollar a month, so if I screw something up and totally bomb it, firstly I haven't lost my general purpose computing device and secondly I can restore what is non-essential tinkering server from a backup from a few days ago.&lt;/p&gt;
&lt;h3&gt;The battery life is actually good&lt;/h3&gt;
&lt;p&gt;Maybe is was because of my Dev setup and the iPad has forced some simplicity on me, but my 2017 Macbook Pro had a shitty battery life for me. Again, this could be down to Docker images or some other pile of services on my old machine that killed the battery, but I never ever got close to the advertised speeds on my Macbook. My iPad however, has a crazy good battery. Sure, Docker, Vagrant and the other power sucks have been migrated off to a remote server so perhaps "technically" this iPad battery is worse than my Macbook but practically speaking, it's incredibly good.&lt;/p&gt;
&lt;h3&gt;These sandboxes Apps are…. nice&lt;/h3&gt;
&lt;p&gt;All day at work I deal with things like package management issues, log files, potential security threats, etc. There is certain amount of pleasure in pulling this device out(that does "just work") and start doing productive things, without thinking about all of the crap I usually need to maintain on a machine. When I (very rarely) hop onto my MacBook at home, there's a sense of dread that there will be something I need to deal with. The whole interface to it feels clunky, should I really need to maintain brew packages every time I hop onto a machine?&lt;/p&gt;
&lt;p&gt;Certainly you can argue that I could set my MacBook up to be more sandboxed and probably doesn't need constant maintenance, but ultimately my tinkering is an addiction. I feel compelled to just start messing around with things and create yet another crazy setup that will add no value and I will inevitably discard but will take me a bunch of time to configure properly. I left my Linux machine for a Macbook, mostly due to endless tinkering. However all the Macbook became was a shit version of Linux for tinkering. I still found endless time to waste on maintenance getting "The Perfect Setup".&lt;/p&gt;
&lt;h3&gt;How does it feel?&lt;/h3&gt;
&lt;p&gt;I mean, I know full well RMS would be very angry with me. I guess I'm at a point where I no longer care. I have little to prove to anyone either. In my younger days there was a sense of pride pulling out my custom installed ArchLinux distro, with some obscure window manager and working almost purely from the command line. I could show off my crazy looking colour terminal where most of my work is done(I mean that is basically what my work development environment looks like right now). Lately however, I'm seeing these machines much more as tools to be used than a time-suck in and of themselves.&lt;/p&gt;
&lt;p&gt;Since I've had this iPad, I have only ever used my Macbook for yanking files off of, nothing more. In my mind this is a success, but only time will tell.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Faster SugarCRM Development with PHPStorm</title><link href="https://shanedowling.com/faster-sugarcrm-development-with-phpstorm-8f59b4860885.html" rel="alternate"></link><published>2017-04-30T00:00:00+00:00</published><updated>2017-04-30T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2017-04-30:/faster-sugarcrm-development-with-phpstorm-8f59b4860885.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__QzgJ__r__gWS5Nddl0PmJlSw.png"&gt;&lt;/p&gt;
&lt;p&gt;Javascript development with SugarCRM can be a bit of a pain, however combining PHPStorm's filewatcher tool with a cut down repair script can speed things up to a more tolerable level.&lt;/p&gt;
&lt;p&gt;What this setup does is watch for any javascript changes in our custom/ folder(because you're not making core …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__QzgJ__r__gWS5Nddl0PmJlSw.png"&gt;&lt;/p&gt;
&lt;p&gt;Javascript development with SugarCRM can be a bit of a pain, however combining PHPStorm's filewatcher tool with a cut down repair script can speed things up to a more tolerable level.&lt;/p&gt;
&lt;p&gt;What this setup does is watch for any javascript changes in our custom/ folder(because you're not making core hacks are you?) and execute a light-weight repair script when any of those files change. So you'll hit save in PHPStorm, wait a few seconds and your dev javascript should be refreshed and ready to test.&lt;/p&gt;
&lt;p&gt;The Repair Script
-—-—-—-— -&lt;/p&gt;
&lt;p&gt;First thing to do is get our hands on a fast repair script. Thankfully FrancescaS on the SugarCRM forums came up with a tidy javascript focused version of a repair script(originally by Jeff Bikart. The whole thread is `here `__ but I'll reproduce the code below for the lazy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;/*&lt;/span&gt;
&lt;span class="x"&gt;* Copyright 2013&lt;/span&gt;
&lt;span class="x"&gt;* Jeff Bickart&lt;/span&gt;
&lt;span class="x"&gt;* @bickart&lt;/span&gt;
&lt;span class="x"&gt;* jeff @ neposystems.com&lt;/span&gt;
&lt;span class="x"&gt;* modified by FrancescaS @ wolfram.com to repair/rebuild&lt;/span&gt;
&lt;span class="x"&gt;* only what absolutely necessary to work on js scripts&lt;/span&gt;
&lt;span class="x"&gt;*/&lt;/span&gt;
&lt;span class="x"&gt;if(!defined(&amp;#39;sugarEntry&amp;#39;))define(&amp;#39;sugarEntry&amp;#39;, true);&lt;/span&gt;
&lt;span class="x"&gt;require_once(&amp;#39;include/entryPoint.php&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt;require_once(&amp;#39;modules/Administration/QuickRepairAndRebuild.php&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt;//Bug 27991 . Redirect to index.php if the request is not come from CLI.&lt;/span&gt;
&lt;span class="x"&gt;$sapi_type = php_sapi_name();&lt;/span&gt;
&lt;span class="x"&gt;if (substr($sapi_type, 0, 3) != &amp;#39;cgi&amp;#39;) {&lt;/span&gt;
&lt;span class="x"&gt;global $sugar_config;&lt;/span&gt;
&lt;span class="x"&gt;if(!empty($sugar_config[&amp;#39;site_url&amp;#39;])){&lt;/span&gt;
&lt;span class="x"&gt;}else{&lt;/span&gt;
&lt;span class="x"&gt;sugar_die(&amp;quot;Didn&amp;#39;t find site url in your sugarcrm config file&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;//End of #27991&lt;/span&gt;
&lt;span class="x"&gt;if(empty($current_language)) {&lt;/span&gt;
&lt;span class="x"&gt;$current_language = $sugar_config[&amp;#39;default_language&amp;#39;];&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;$app_list_strings = return_app_list_strings_language($current_language);&lt;/span&gt;
&lt;span class="x"&gt;$app_strings = return_application_language($current_language);&lt;/span&gt;
&lt;span class="x"&gt;global $current_user;&lt;/span&gt;
&lt;span class="x"&gt;$current_user = new User();&lt;/span&gt;
&lt;span class="x"&gt;$current_user-&amp;gt;getSystemUser();&lt;/span&gt;
&lt;span class="x"&gt;$GLOBALS[&amp;#39;log&amp;#39;]-&amp;gt;debug(&amp;#39;-—-—-—-—-—-—-—-—-—-—-→ at repair.php ←-—-—-—-—-—-—-—-—-—-—-&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt;$repair = new RepairAndClear();&lt;/span&gt;
&lt;span class="x"&gt;// replace the repairAndClearAll with a limited set or clear actions&lt;/span&gt;
&lt;span class="x"&gt;//$repair-&amp;gt;repairAndClearAll(array(&amp;#39;clearAll&amp;#39;),array(translate(&amp;#39;LBL_ALL_MODULES&amp;#39;)), true,false,&amp;#39;&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;module_list= array(translate(&amp;#39;LBL_ALL_MODULES&amp;#39;));&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;show_output = false;&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;execute= true;&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearLanguageCache();&lt;/span&gt;
&lt;span class="x"&gt;MetaDataManager::enableCacheRefreshQueue();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearTpls();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearJsFiles();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearJsLangFiles();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearLanguageCache();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearDashlets();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearSmarty();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearThemeCache();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearXMLfiles();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearExternalAPICache();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearAdditionalCaches();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;clearPDFFontCache();&lt;/span&gt;
&lt;span class="x"&gt;$repair-&amp;gt;repairMetadataAPICache();&lt;/span&gt;
&lt;span class="x"&gt;$exit_on_cleanup = true;&lt;/span&gt;
&lt;span class="x"&gt;sugar_cleanup(false);&lt;/span&gt;
&lt;span class="x"&gt;// some jobs have annoying habit of calling sugar_cleanup(), and it can be called only once&lt;/span&gt;
&lt;span class="x"&gt;// but job results can be written to DB after job is finished, so we have to disconnect here again&lt;/span&gt;
&lt;span class="x"&gt;// just in case we couldn&amp;#39;t call cleanup&lt;/span&gt;
&lt;span class="x"&gt;if(class_exists(&amp;#39;DBManagerFactory&amp;#39;)) {&lt;/span&gt;
&lt;span class="x"&gt;$db = DBManagerFactory::getInstance();&lt;/span&gt;
&lt;span class="x"&gt;$db-&amp;gt;disconnect();&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;if($exit_on_cleanup) exit;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Take this file and move it to your ~/Bin folder or wherever you tend to put these one off little scripts.&lt;/p&gt;
&lt;p&gt;The Watcher&lt;/p&gt;
&lt;p&gt;The next thing to do is configure PHPStorm to start watching for Javascript file changes.&lt;/p&gt;
&lt;p&gt;Go into Settings-&amp;gt;Tools-&amp;gt;File Watchers and hit the green plus to add a new watcher.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1____XfSAae6p__j0R8XD__MGAHg.png"&gt;
&lt;img alt="" src="images/1__jOrBq5xCqCJ7ONApQjVfww.png"&gt;&lt;/p&gt;
&lt;p&gt;Simply alter your pattern to whatever your SugarCRM project structure looks like.&lt;/p&gt;
&lt;p&gt;You should see a count of the number of files the scope has detected in the project and it should be more than 0, so use that as a guide to ensure the scope is correctly identifying all your interesting javascript files.&lt;/p&gt;
&lt;p&gt;Once the scope is sorted, back in the watcher configuration, for the 'Argument' setting you will need to put in the path to the repair script from above then finally, for the 'Working Directory' put the root of the SugarCRM source.&lt;/p&gt;
&lt;p&gt;After all of that is configured make some changes to a javascript file, hit save and hopefully you should see the 'Watch for JS Changes' task running for a few seconds.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Pomot — command line pomotodo client</title><link href="https://shanedowling.com/pomot-command-line-pomotodo-client-d3447f55056e.html" rel="alternate"></link><published>2017-04-20T00:00:00+00:00</published><updated>2017-04-20T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2017-04-20:/pomot-command-line-pomotodo-client-d3447f55056e.html</id><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__kvu1aNJ6g__yuMT7O3c6L8Q.png"&gt;&lt;/p&gt;
&lt;p&gt;For anyone interested, I've created a simple pomotodo client for interacting with pomotodo.com easily.&lt;/p&gt;
&lt;p&gt;You can find it &lt;a href="https://github.com/shano/pomot/"&gt;here&lt;/a&gt;, feel free to use github issues for any issues or feature requests you can think of.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Command line calendars with Khal and fastmail</title><link href="https://shanedowling.com/command-line-calendars-with-khal-and-fastmail-57214af20b8f.html" rel="alternate"></link><published>2017-04-04T00:00:00+00:00</published><updated>2017-04-04T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2017-04-04:/command-line-calendars-with-khal-and-fastmail-57214af20b8f.html</id><summary type="html">&lt;p&gt;Recently I've been on a bit of a command line kick and I started using &lt;a href="https://github.com/pimutils/khal"&gt;khal&lt;/a&gt; to render my calendar agenda locally.&lt;/p&gt;
&lt;p&gt;All of the codebases used are python based so before I start I've created a virtualenv so as not to pollute my OS.&lt;/p&gt;
&lt;p&gt;mkvirtualenv khal
workon khal&lt;/p&gt;
&lt;h3&gt;Vdirsyncer …&lt;/h3&gt;</summary><content type="html">&lt;p&gt;Recently I've been on a bit of a command line kick and I started using &lt;a href="https://github.com/pimutils/khal"&gt;khal&lt;/a&gt; to render my calendar agenda locally.&lt;/p&gt;
&lt;p&gt;All of the codebases used are python based so before I start I've created a virtualenv so as not to pollute my OS.&lt;/p&gt;
&lt;p&gt;mkvirtualenv khal
workon khal&lt;/p&gt;
&lt;h3&gt;Vdirsyncer&lt;/h3&gt;
&lt;p&gt;Firstly we need to setup &lt;a href="https://github.com/pimutils/vdirsyncer"&gt;Vdirsyncer&lt;/a&gt;, which is used to actually download your caldav entries to a local folder which khal then reads from.&lt;/p&gt;
&lt;p&gt;pip install vdirsyncer&lt;/p&gt;
&lt;p&gt;Then to configure it create a file in ~/.vdirsyncer/config and adding these contents, replacing the username/password with your own.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[general]
 status_path = &amp;quot;~/.vdirsyncer/status/&amp;quot;
[pair fastmail]
 a = &amp;quot;khal&amp;quot;
 b = &amp;quot;cal&amp;quot;
 collections = [&amp;quot;from a&amp;quot;, &amp;quot;from b&amp;quot;]
[storage cal]
 type = &amp;quot;caldav&amp;quot;
 url = &amp;quot;https://caldav.messagingengine.com/&amp;quot;
 username = &amp;quot;user@fastmail.fm&amp;quot;
 password = &amp;quot;ONE_TIME_PASSWORD&amp;quot;
 read_only = &amp;quot;true&amp;quot;
[storage khal]
 type = &amp;quot;filesystem&amp;quot;
 path = &amp;quot;~/.vdirsyncer/fastmail&amp;quot;
 fileext = &amp;quot;.ics&amp;quot;
 #encoding = &amp;quot;utf-8&amp;quot;
 #post_hook = null
 ```

Then run an initial vdirsyncer command, this will create a bunch of folders under ~/.vdirsyncer/fastmail, each of these represents each of the calendars you have in fastmail.

### Khal

```bash
pip install khal
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now to configure khal we create this file in ~/.config/khal/config with the contents, replace the folder_id_* with the actual foldernames in ~/.vdirsyncer/fastmail&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[calendars]

[[default]]
 path = ~/.vdirsyncer/fastmail/Default
 type = discover

[[travel]]
 path = ~/.vdirsyncer/fastmail/folder_id_1
 type = discover

[[events]]
 path = ~/.vdirsyncer/fastmail/folder_id_2
 type = discover

[[admin]]
 path = ~/.vdirsyncer/fastmail/folder_id_3
 type = discover

[[birthdays]]
 path = ~/.vdirsyncer/fastmail/folder_id_3
 type = discover

[locale]
 timeformat = %H:%M
 dateformat = %d/%m/%Y
 longdateformat = %d/%m/%Y
 datetimeformat = %d/%m/%Y %H:%M
 longdatetimeformat = %d/%m/%Y %H:%M
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now if you run khal you should get a nice calendar view with an agenda next to it.&lt;/p&gt;
&lt;h3&gt;Aliases&lt;/h3&gt;
&lt;p&gt;To keep things simple I created an alias that allows me to pop into this virtualenv, sync my calendars and display khal whenever I need my calendars displayed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias khal='workon khal &amp;amp;&amp;amp; vdirsyncer sync &amp;amp;&amp;amp; khal'&lt;/code&gt;&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Conditional Read Only Fields</title><link href="https://shanedowling.com/sugarcrm-7-conditional-read-only-fields-7fbf971f0592.html" rel="alternate"></link><published>2016-02-06T00:00:00+00:00</published><updated>2016-02-06T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2016-02-06:/sugarcrm-7-conditional-read-only-fields-7fbf971f0592.html</id><summary type="html">&lt;p&gt;SugarCRM has a few ways to set fields as read-only, but it leaves a lot to be desired. One of the missing features that you might need to implement is having a module flagged as read-only on the record view based on a field on the module or the result …&lt;/p&gt;</summary><content type="html">&lt;p&gt;SugarCRM has a few ways to set fields as read-only, but it leaves a lot to be desired. One of the missing features that you might need to implement is having a module flagged as read-only on the record view based on a field on the module or the result of an API request.&lt;/p&gt;
&lt;p&gt;I have found a way to do it but it is mostly basic UI hacking and doesn't set the field read-only everywhere on the UI, just the record view page. So it will remain on the recordlist view or within other subpanels as editable, so bear this in mind as it's only useful for very specific cases.&lt;/p&gt;
&lt;p&gt;Here's a quick javascript function that'll iterate over all sidecar metadata panels and flag every field on the UI. Simply add in a conditional to flag only certain fields and wrap it in whatever checks you need to make. Stick this in your record.js.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readOnly&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// set fields to read-only&lt;/span&gt;
  &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;panels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;panel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;field&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;field&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readonly&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>NetworkX — Get all Paths from all sources to sinks</title><link href="https://shanedowling.com/networkx-get-all-paths-from-all-sources-to-sinks-825e3787b458.html" rel="alternate"></link><published>2015-11-04T00:00:00+00:00</published><updated>2015-11-04T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-11-04:/networkx-get-all-paths-from-all-sources-to-sinks-825e3787b458.html</id><summary type="html">&lt;p&gt;Often when I'm working with graphs and a set of masses in a spectrum I need to be able to iterate over all paths for all sources and sinks in that graph. Especially if I'm looking to compare multiple ideal spectrums against a given spectrum. Here's some code that will …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Often when I'm working with graphs and a set of masses in a spectrum I need to be able to iterate over all paths for all sources and sinks in that graph. Especially if I'm looking to compare multiple ideal spectrums against a given spectrum. Here's some code that will allow me to quickly iterate over all source-&amp;gt;sink paths in a given graph G.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;"""
 Shane Dowling, 04 Nov 2015
 Will iterate over all sources, sinks and get all paths
 """
 import networkx as nx
G = nx.DiGraph()
 # Fill in a few edges
 sink_nodes = [node for node, outdegree in G.out_degree(G.nodes()).items() if outdegree == 0]
 source_nodes = [node for node, indegree in G.in_degree(G.nodes()).items() if indegree == 0]
 for [(source, sink) for sink in sink_nodes for source in source_nodes]:
 for path in nx.all_simple_paths(G, source=source, target=sink):
 print(path)
 ```&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Generate Binary Tree From String</title><link href="https://shanedowling.com/generate-binary-tree-from-string-fcb1a0c662e7.html" rel="alternate"></link><published>2015-10-27T00:00:00+00:00</published><updated>2015-10-27T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-10-27:/generate-binary-tree-from-string-fcb1a0c662e7.html</id><summary type="html">&lt;p&gt;Recently while implementing the &lt;a href="http://rosalind.info/problems/ba7f/"&gt;Small Parsimony Problem&lt;/a&gt; I had the need to generate a binary tree from a string in Python.&lt;/p&gt;
&lt;p&gt;The pseudo-code in the question implicitly assumes you have some functionality that will generate a DNA sequence like CAAATCCC into a binary tree, then run SmallParsimony on it. I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently while implementing the &lt;a href="http://rosalind.info/problems/ba7f/"&gt;Small Parsimony Problem&lt;/a&gt; I had the need to generate a binary tree from a string in Python.&lt;/p&gt;
&lt;p&gt;The pseudo-code in the question implicitly assumes you have some functionality that will generate a DNA sequence like CAAATCCC into a binary tree, then run SmallParsimony on it. I couldn't find that functionality anywhere, so I decided to implement something simple in networkx. Hopefully it's useful.&lt;/p&gt;
&lt;p&gt;```python&lt;/p&gt;
&lt;h1&gt;!/usr/bin/env python&lt;/h1&gt;
&lt;p&gt;"""
 Shane Dowling, 27 Oct 2015
 To run simply call generate_leaf_graph and pass in s string.
 """
def count_predecessors(T):
 pred = 0
 for v in T.nodes():
 pred += 1
 return pred&lt;/p&gt;
&lt;p&gt;def generate_leaf_graph(s):
 """
 Will generate a leaf graph and return it along
 with the Character dictionary representing the characters
 at each leaf node position
 """
 T = nx.DiGraph()
 Character = {}
 i = 0
 parI = len(s)
 for (son, daughter) in zip(s[0::2], s[1::2]):
   Character[i] = son
   Character[i+1] = daughter
   T.add_edge(parI, i)
   T.add_edge(parI, i+1)
   i += 2
   parI += 1&lt;/p&gt;
&lt;p&gt;while count_predecessors(T) &amp;gt; 1:
  for v in T.nodes():
   T.add_edge(parI, v)
   T.add_edge(parI, v+1)
   parI += 1
 return [T, Character]
 ```&lt;/p&gt;</content><category term="tech"></category></entry><entry><title>SugarCRM — Conditional Actions</title><link href="https://shanedowling.com/sugarcrm-conditional-actions-9c19e52c50.html" rel="alternate"></link><published>2015-10-15T00:00:00+00:00</published><updated>2015-10-15T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-10-15:/sugarcrm-conditional-actions-9c19e52c50.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__qWKDdqMlWZ9HD3fdzhvAjw.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Say you need to hide certain actions in Sugar depending on the status of a field, I've come across a great snippet of code from an awesome comment by Felix Nilam on the SugarCRM forums and wanted to show you a brief snippet of how it could work.&lt;/p&gt;
&lt;p&gt;Make sure …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__qWKDdqMlWZ9HD3fdzhvAjw.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Say you need to hide certain actions in Sugar depending on the status of a field, I've come across a great snippet of code from an awesome comment by Felix Nilam on the SugarCRM forums and wanted to show you a brief snippet of how it could work.&lt;/p&gt;
&lt;p&gt;Make sure to call it before render, otherwise I had issues with this.meta.buttons already having rendered.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;extendsFrom&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;RecordView&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="nx"&gt;initialize&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;view&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;invokeParent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;view&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;record&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;initialize&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;]});&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;before&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;render&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mycustom_button_visibility&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;before&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;render&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mycustom2_button_visibility&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;mycustom_button_visibility&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;some_field&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;some_field&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;some_value&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hide_button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;some_button_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;mycustom2_button_visibility&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;some_second_field&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;undefined&amp;#39;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;some_second_field&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;some_value&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hide_button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;some_second_button_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;hide_button&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;button_sel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;button_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="c1"&gt;// find the buttons index for the share button&lt;/span&gt;
        &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;main_dropdown&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;button_sel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bbn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;idx_bbn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bbn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;button_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;idx_bbn&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;});&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;button_sel&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;button_index&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;//remove the meta&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;button_sel&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;splice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;button_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Props to Felix for the snippet and I hope this helps others.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Bioinformatics/Rosalind — Skeleton Generator</title><link href="https://shanedowling.com/bioinformatics-rosalind-skeleton-generator-5229517d32fa.html" rel="alternate"></link><published>2015-09-27T00:00:00+00:00</published><updated>2015-09-27T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-09-27:/bioinformatics-rosalind-skeleton-generator-5229517d32fa.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__UkaRZWvi0Lv5WVz4qxP5LQ.png"&gt;&lt;/p&gt;
&lt;p&gt;Working through part 4 of my &lt;a href="https://www.coursera.org/specializations/bioinformatics"&gt;Cousera Bioinformatics specialisation&lt;/a&gt;, I decided to write a generator that creates a standardised approach to structure, write and test your algorithmic code. It also works for &lt;a href="http://rosalind.info/"&gt;Rosalind&lt;/a&gt; problems.&lt;/p&gt;
&lt;p&gt;Explanations are in the &lt;a href="https://github.com/shano/biogen/blob/master/README.md"&gt;README&lt;/a&gt;. If you have any issues or are confused by anything, feel …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__UkaRZWvi0Lv5WVz4qxP5LQ.png"&gt;&lt;/p&gt;
&lt;p&gt;Working through part 4 of my &lt;a href="https://www.coursera.org/specializations/bioinformatics"&gt;Cousera Bioinformatics specialisation&lt;/a&gt;, I decided to write a generator that creates a standardised approach to structure, write and test your algorithmic code. It also works for &lt;a href="http://rosalind.info/"&gt;Rosalind&lt;/a&gt; problems.&lt;/p&gt;
&lt;p&gt;Explanations are in the &lt;a href="https://github.com/shano/biogen/blob/master/README.md"&gt;README&lt;/a&gt;. If you have any issues or are confused by anything, feel free to get in touch!&lt;/p&gt;
&lt;p&gt;You can find the code &lt;a href="https://github.com/shano/biogen"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Tiddlywiki to Org-Mode</title><link href="https://shanedowling.com/tiddlywiki-to-org-mode-c83bd3cd7323.html" rel="alternate"></link><published>2015-08-31T00:00:00+00:00</published><updated>2015-08-31T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-08-31:/tiddlywiki-to-org-mode-c83bd3cd7323.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__xJqslHRpA1F0Qxjvp4tU2A.png"&gt;&lt;/p&gt;
&lt;p&gt;Okay, I swear this is the last document conversion script I'm writing this year. I've been on a bit of a rampage to move all of my life in Emacs Org-Mode and converting all of my Tiddlywiki notes into Org mode has been on my list for a while. Thankfully …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__xJqslHRpA1F0Qxjvp4tU2A.png"&gt;&lt;/p&gt;
&lt;p&gt;Okay, I swear this is the last document conversion script I'm writing this year. I've been on a bit of a rampage to move all of my life in Emacs Org-Mode and converting all of my Tiddlywiki notes into Org mode has been on my list for a while. Thankfully both formats are pretty simple so the script was fairly straightforward.&lt;/p&gt;
&lt;p&gt;You can find it &lt;a href="https://github.com/shano/Tiddlywiki-to-Org-Mode"&gt;here&lt;/a&gt;, simply fill in the folder locations and give it a run.&lt;/p&gt;
&lt;p&gt;A heads up. If you're merging the newly generated Org notes into an existing directory, do a dry run in a dummy folder first then compare the dummy results with your existing Org folder. You need to ensure you won't overwrite any existing files(the script doesn't do any clever checking).&lt;/p&gt;
&lt;p&gt;You can do something like&lt;/p&gt;
&lt;p&gt;&lt;code&gt;comm -12 &amp;lt;(ls ~/Documents/OrgFolder) &amp;lt;(ls ~/Documents/DummyFolder/org)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;to run an intersection on the two filesets.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>OSQA to Tiddlywiki</title><link href="https://shanedowling.com/osqa-to-tiddlywiki-ccdb598d226b.html" rel="alternate"></link><published>2015-07-27T00:00:00+00:00</published><updated>2015-07-27T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-07-27:/osqa-to-tiddlywiki-ccdb598d226b.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__0l5W0q____QuCByvtgmeQdJA.png"&gt;&lt;/p&gt;
&lt;p&gt;Recently I've been trying out &lt;a href="http://www.tiddlywiki.com/"&gt;Tiddlywiki&lt;/a&gt; as an alternative to &lt;a href="http://evernote.com/"&gt;Evernote&lt;/a&gt;. I decided to try convert my existing &lt;a href="http://www.osqa.net/"&gt;OSQA&lt;/a&gt; install to &lt;a href="http://www.tiddlywiki.com/"&gt;Tiddlywiki&lt;/a&gt; as I'm travelling a lot and don't always have access to my servers via the internet. Here's a python script I wrote that might help anyones trying to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__0l5W0q____QuCByvtgmeQdJA.png"&gt;&lt;/p&gt;
&lt;p&gt;Recently I've been trying out &lt;a href="http://www.tiddlywiki.com/"&gt;Tiddlywiki&lt;/a&gt; as an alternative to &lt;a href="http://evernote.com/"&gt;Evernote&lt;/a&gt;. I decided to try convert my existing &lt;a href="http://www.osqa.net/"&gt;OSQA&lt;/a&gt; install to &lt;a href="http://www.tiddlywiki.com/"&gt;Tiddlywiki&lt;/a&gt; as I'm travelling a lot and don't always have access to my servers via the internet. Here's a python script I wrote that might help anyones trying to do the same.&lt;/p&gt;
&lt;p&gt;You can find it &lt;a href="https://github.com/shano/osqatotiddlywiki"&gt;here on github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Any questions or queries, just let me know!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Verify you're hidden with conky</title><link href="https://shanedowling.com/verify-youre-hidden-with-conky-b59f1e36001b.html" rel="alternate"></link><published>2015-07-26T00:00:00+00:00</published><updated>2015-07-26T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-07-26:/verify-youre-hidden-with-conky-b59f1e36001b.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__1JMMamsmo6ZschEvlANcLg.png"&gt;&lt;/p&gt;
&lt;p&gt;I run a few scripts to ensure my identity stays hidden day to day on my
laptop. Here's a few conky scripts to verify things are as they should
be.&lt;/p&gt;
&lt;h3&gt;VPN&lt;/h3&gt;
&lt;p&gt;Because I don't always know my ip or what my VPN's ip is, I wanted conky
to display the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__1JMMamsmo6ZschEvlANcLg.png"&gt;&lt;/p&gt;
&lt;p&gt;I run a few scripts to ensure my identity stays hidden day to day on my
laptop. Here's a few conky scripts to verify things are as they should
be.&lt;/p&gt;
&lt;h3&gt;VPN&lt;/h3&gt;
&lt;p&gt;Because I don't always know my ip or what my VPN's ip is, I wanted conky
to display the location I currently appear at from my VPN. If the
location was the same as where I physically am, something's gone wrong.
To implement this, I wrote a python script and using ipinfo.io grab my
location and print it to conky.&lt;/p&gt;
&lt;p&gt;Here's the script I use to pull my location.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
 &lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;User-Agent&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;curl/7.9.8 (i686-pc-linux-gnu) libcurl 7.9.8 (OpenSSL 0.9.6b) (ipv6 enabled)&amp;#39;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://ipinfo.io&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;ipdata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ipdata&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;city&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ipdata&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;region&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ipdata&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;country&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
 &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And here's the conky configuration I use to call it.&lt;/p&gt;
&lt;p&gt;${goto 40}Location: ${execpi 600 python ~/scripts/conky/location.py}&lt;/p&gt;
&lt;p&gt;&lt;a href="http://dnsleaktest.com"&gt;http://dnsleaktest.com&lt;/a&gt; for an example of how it can be circumvented.&lt;/p&gt;
&lt;h3&gt;Mac Address&lt;/h3&gt;
&lt;p&gt;For my mac address I wanted to be able to see my wifi adaptors physical
address and what it should be spoofed to. If the two are the same,
something's else has gone wrong.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;${if_existing /proc/net/route wlan0}
 ${goto 40}${execpi 600 ethtool -P wlan0}
 ${endif}
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Hostname&lt;/h3&gt;
&lt;p&gt;I also like to randomise my hostname on startup using this &lt;a href="http://shanedowling.com/connect-to-routers-anonymously/"&gt;script&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;${goto 40}Hostname: ${execpi 1000 hostname}&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Adding an action to the listview headerpanel</title><link href="https://shanedowling.com/sugarcrm-7-adding-an-action-to-the-listview-headerpanel-cdfff560e7b3.html" rel="alternate"></link><published>2015-07-25T00:00:00+00:00</published><updated>2015-07-25T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-07-25:/sugarcrm-7-adding-an-action-to-the-listview-headerpanel-cdfff560e7b3.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__WJpUe2DNz1qsC4zMTJB0eA.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;This tutorial should show you how to add a custom button/action that
will appear across all modules. It's a little similar to &lt;a href="http://shanedowling.com/sugarcrm-7-adding-an-action-to-the-listview/"&gt;this tutorial&lt;/a&gt;
with a few changes to how the button gets rendered and the actions get
called.&lt;/p&gt;
&lt;h3&gt;1. Adding the button to the headerpanel&lt;/h3&gt;
&lt;p&gt;Firstly you'll need …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__WJpUe2DNz1qsC4zMTJB0eA.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;This tutorial should show you how to add a custom button/action that
will appear across all modules. It's a little similar to &lt;a href="http://shanedowling.com/sugarcrm-7-adding-an-action-to-the-listview/"&gt;this tutorial&lt;/a&gt;
with a few changes to how the button gets rendered and the actions get
called.&lt;/p&gt;
&lt;h3&gt;1. Adding the button to the headerpanel&lt;/h3&gt;
&lt;p&gt;Firstly you'll need to create a new folder to store the headerpane
actions, so create this folder in the sugarcrm root
directory custom/clients/base/views/list-headerpane/. Then create the
file list-headerpane.php with this content. This will add a button next
to the Create button for all modules.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sugarEntry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;sugarEntry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Not A Valid Entry Point&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * Your installation or use of this SugarCRM file is subject to the applicable&lt;/span&gt;
&lt;span class="cm"&gt; * terms available at&lt;/span&gt;
&lt;span class="cm"&gt; * [http://support.sugarcrm.com/06_Customer_Center/10_Master_Subscription_Agreements/](http://support.sugarcrm.com/06_Customer_Center/10_Master_Subscription_Agreements/).&lt;/span&gt;
&lt;span class="cm"&gt; * If you do not agree to all of the applicable terms or do not have the&lt;/span&gt;
&lt;span class="cm"&gt; * authority to bind the entity as an authorized representative, then do not&lt;/span&gt;
&lt;span class="cm"&gt; * install or use this SugarCRM file.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * Copyright (C) SugarCRM Inc. All rights reserved.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;

&lt;span class="nv"&gt;$viewdefs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;base&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;view&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;list-headerpane&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;template&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;headerpane&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;LBL_MODULE_NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;buttons&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;new_button&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;button&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;label&amp;#39;&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;LBL_NEW_BUTTON_LABEL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;css_class&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;btn-secondary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;acl_action&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;events&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;click&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;list:new_button:fire&amp;#39;&lt;/span&gt;
            &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;create_button&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;button&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;label&amp;#39;&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;LBL_CREATE_BUTTON_LABEL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;css_class&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;btn-primary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;acl_action&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;create&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;route&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;action&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;create&amp;#39;&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sidebar_toggle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s1"&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sidebartoggle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. Adding the action hook&lt;/h3&gt;
&lt;p&gt;To fire this action you'll need to add some
code custom/clients/base/views/recordlist/recordlist.js, in the&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;list:new_button:fire&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;applyFxn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now populate applyFxn with whatever code you want to run and it will
work across every module.&lt;/p&gt;
&lt;h3&gt;3. Quick Repair and Rebuilt(as always)&lt;/h3&gt;
&lt;p&gt;Any questions feel free to ask!&lt;/p&gt;
&lt;h3&gt;Extra tip.&lt;/h3&gt;
&lt;p&gt;Only want to do this for a single module. Instead of placing the code in
custom/clients place it in custom/modules/&lt;MODULE&gt;/clients and it
should work for just that one module.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM — Prevent currencies getting overridden</title><link href="https://shanedowling.com/sugarcrm-prevent-currencies-getting-overridden-7944af907da9.html" rel="alternate"></link><published>2015-04-16T00:00:00+00:00</published><updated>2015-04-16T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-04-16:/sugarcrm-prevent-currencies-getting-overridden-7944af907da9.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__zrzOG7L4xvFI2XJ2hB9iaA.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;SugarCRM has some neat features involving currency rates, but one of the
more annoying ones is that Sugar will automatically update the base rate
every time you save a record with a currency field attached. This can be
fairly annoying default behaviour if you wish to maintain the correct
record …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__zrzOG7L4xvFI2XJ2hB9iaA.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;SugarCRM has some neat features involving currency rates, but one of the
more annoying ones is that Sugar will automatically update the base rate
every time you save a record with a currency field attached. This can be
fairly annoying default behaviour if you wish to maintain the correct
record value at the time of sale.&lt;/p&gt;
&lt;h3&gt;The problem&lt;/h3&gt;
&lt;p&gt;Say for example you have a custom module Books and your systems base
currency is USD. You sell a book for 10 Euros at 11 dollars(the currenct
change rate). If say a few weeks later you wanted to change the status
of the Book to say, note down that the invoice was received and the
exchange rate in that time has changed drastically. When you hit save
Sugar would re-calculate the Euro value again(and despite the item being
sold for 10 Euros originally the exchange rate has now changed and Sugar
shows say 12 Euros, which is completely inconsistent with what you've
invoiced.&lt;/p&gt;
&lt;h3&gt;The solution&lt;/h3&gt;
&lt;p&gt;There is thankfully a way around this using by overriding Sugar's
default behaviour using logic hooks. So taking our book example this is
what custom/modules/Books/logic_hooks.php might look like.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
  &lt;span class="c1"&gt;// Do not store anything in this file that is not part of the array or the hook version.  This file will&lt;/span&gt;
  &lt;span class="c1"&gt;// be automatically rebuilt in the future.&lt;/span&gt;
  &lt;span class="nv"&gt;$hook_version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nv"&gt;$hook_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;// position, file, function&lt;/span&gt;
  &lt;span class="nv"&gt;$hook_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;before_save&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nv"&gt;$hook_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;before_save&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;workflow&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;include/workflow/WorkFlowHandler.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;WorkFlowHandler&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;WorkFlowHandler&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nv"&gt;$hook_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;before_save&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Custom Book Logic Hooks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;custom/modules/Books/logic_hooks_class.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;books_logic_hooks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;before_save_method&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nv"&gt;$hook_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;after_save&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Custom Book Logic Hooks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;custom/modules/Books/logic_hooks_class.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;books_logic_hooks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;after_save_method&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the actual code to do the overriding would be in
custom/modules/Books/logic_hooks_class.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sugarEntry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;sugarEntry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Not A Valid Entry Point&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;books_logic_hooks&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;$fetchedRow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;before_save_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$bean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$fetchedRow&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;fetched_row&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="sd"&gt;/**&lt;/span&gt;
&lt;span class="sd"&gt;  * Called as process_record logic hook on the Books module&lt;/span&gt;
&lt;span class="sd"&gt;  */&lt;/span&gt;

&lt;span class="sd"&gt;/**&lt;/span&gt;
&lt;span class="sd"&gt;  * [@param](http://twitter.com/param &amp;quot;Twitter profile for @param&amp;quot;) $bean&lt;/span&gt;
&lt;span class="sd"&gt;  * [@param](http://twitter.com/param &amp;quot;Twitter profile for @param&amp;quot;) $event&lt;/span&gt;
&lt;span class="sd"&gt;  * [@param](http://twitter.com/param &amp;quot;Twitter profile for @param&amp;quot;) $arguments&lt;/span&gt;
&lt;span class="sd"&gt;  */&lt;/span&gt;
  &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;after_save_method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$bean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$custom_bean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Books&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nv"&gt;$custom_bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$resave_bean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Need to ignore base rate updates when the currency stays the same&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$fetchedRow&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$custom_bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;currency_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$fetchedRow&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$custom_bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;currency_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;fetched_row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;currency_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$fetchedRow&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$custom_bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;base_rate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
      &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$fetchedRow&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$custom_bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;base_rate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt;     &lt;span class="nv"&gt;$bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;fetched_row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;base_rate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Run a SQL update to reset the base price to the original, as it shouldn&amp;#39;t be over-ridden unless it&amp;#39;s new&lt;/span&gt;
        &lt;span class="nv"&gt;$sql&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UPDATE books_cstm SET base_rate=&amp;quot;%s&amp;quot; WHERE id_c=&amp;quot;%s&amp;quot;;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$fetchedRow&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$custom_bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;base_rate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$custom_bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;db&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$sql&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using the db over-ride hack should allow you to retain the same base
rate on each record and Sugar will display the original 10 Euros despite
the exchange rate changing.&lt;/p&gt;
&lt;h3&gt;Some words of caution&lt;/h3&gt;
&lt;p&gt;If you decide to override Sugar's default behaviour, you could run
into some issues down the line with reporting.
Basically the reports modules seems to ignore the base rate stored on
each individual record and just uses whatever the system default is.&lt;/p&gt;
&lt;p&gt;So you'll have totals in your report that will be inconsistent with the
currency value that's stored on the record. One way around this is to
only create reports using your base currency, another is to create a
secondary field storing the correct amount of the currency in a decimal
field rather than a currency field and creating reports based on that
amount.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Roll SugarCRM with Docker</title><link href="https://shanedowling.com/sugarcrm-7-roll-sugarcrm-with-docker-f4449e2ca7a.html" rel="alternate"></link><published>2015-04-07T00:00:00+00:00</published><updated>2015-04-07T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-04-07:/sugarcrm-7-roll-sugarcrm-with-docker-f4449e2ca7a.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__IkzYCoEsXglLAC549u9Wzg.png"&gt;&lt;/p&gt;
&lt;p&gt;I find trying to replicate the SugarCRM environment locally a real pain.
One of the main issues is simply that Sugar requires such old versions
of PHP to be installed, especially compared to other web projects I have
that implement the latest/greatest versions of PHP. Running multiple PHP
versions …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__IkzYCoEsXglLAC549u9Wzg.png"&gt;&lt;/p&gt;
&lt;p&gt;I find trying to replicate the SugarCRM environment locally a real pain.
One of the main issues is simply that Sugar requires such old versions
of PHP to be installed, especially compared to other web projects I have
that implement the latest/greatest versions of PHP. Running multiple PHP
versions simultaneously can be a pain. One solution is to use Vagrant
but I find that too heavy for my needs, so I gave docker a go and found
it a much faster/elegant solution.&lt;/p&gt;
&lt;p&gt;Here's the steps to get yourself up and running.&lt;/p&gt;
&lt;h3&gt;1. MySQL&lt;/h3&gt;
&lt;p&gt;You'll need your own installation of MySQL for this. As I use Debian
testing as a host I just installed MySQL on it and have my SugarCRM
boxes point to the host using the dockerhost entry in /etc/hosts on each
docker container.&lt;/p&gt;
&lt;p&gt;There is nothing at all stopping you from creating another Docker
instance running MySQL but I figured this was an unnecessary step and
getting data persistence working with Docker can be a little annoying.&lt;/p&gt;
&lt;h3&gt;2. Getting the Docker config&lt;/h3&gt;
&lt;p&gt;Simply clone the repo for whichever version you intend to you use.&lt;/p&gt;
&lt;p&gt;I have two versions of this setup for both SugarCRM Version 7.2(Needing
PHP 5.3) and Version 7.5(Needing PHP 5.4).&lt;/p&gt;
&lt;p&gt;Sugar-Docker 7.2 is &lt;a href="https://github.com/shano/docker-sugarcrm-72"&gt;here&lt;/a&gt;.
Sugar-Docker 7.5 is &lt;a href="https://github.com/shano/docker-sugarcrm-75"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;3. Fill in Docker settings&lt;/h3&gt;
&lt;p&gt;run.sh&lt;/p&gt;
&lt;p&gt;Edit this script and change the containers ip to whatever your hosts ip
is. Don't forget to set the folder to your SugarCRM code folder.&lt;/p&gt;
&lt;p&gt;files/vhost.conf&lt;/p&gt;
&lt;p&gt;Change settings here if you wish to use a custom url to access Sugar or
if you have multiple instances of SugarCRM installed.&lt;/p&gt;
&lt;p&gt;files/php.ini&lt;/p&gt;
&lt;p&gt;Change any settings you might want to customise with PHP here.&lt;/p&gt;
&lt;h3&gt;4. Tell SugarCRM to use the right MySQL database&lt;/h3&gt;
&lt;p&gt;In config.php I just set the mysql host to dockerhost.&lt;/p&gt;
&lt;h3&gt;5. Hosts entry&lt;/h3&gt;
&lt;p&gt;Then on your host operating system make sure to point the virtualhost
url to the box. For me, in my /etc/hosts I have this entry.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;127.0.0.1 sugar.dev&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Debugging&lt;/h3&gt;
&lt;p&gt;Because I've used stdout for logs you can see apache errors by running a
command like this.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo docker logs -f sugarcrm72&lt;/code&gt;&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Solving boot2docker's fail to start error</title><link href="https://shanedowling.com/solving-boot2dockers-fail-to-start-error-acec8ba7802c.html" rel="alternate"></link><published>2015-02-07T00:00:00+00:00</published><updated>2015-02-07T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-02-07:/solving-boot2dockers-fail-to-start-error-acec8ba7802c.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__lnHJgbXH80YiZ__B2F1HYcA.png"&gt;&lt;/p&gt;
&lt;p&gt;I'm putting this obvious solution up as I couldn't see it anywhere
online.&lt;/p&gt;
&lt;p&gt;If you try to start up boot2docker with boot2docker start and it
returns.&lt;/p&gt;
&lt;p&gt;error in run: Failed to start machine "boot2docker-vm": exit status 1&lt;/p&gt;
&lt;p&gt;Before destroying everything and wiping your ~/Virtualbox VMs folder,
try starting up Virtualbox …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__lnHJgbXH80YiZ__B2F1HYcA.png"&gt;&lt;/p&gt;
&lt;p&gt;I'm putting this obvious solution up as I couldn't see it anywhere
online.&lt;/p&gt;
&lt;p&gt;If you try to start up boot2docker with boot2docker start and it
returns.&lt;/p&gt;
&lt;p&gt;error in run: Failed to start machine "boot2docker-vm": exit status 1&lt;/p&gt;
&lt;p&gt;Before destroying everything and wiping your ~/Virtualbox VMs folder,
try starting up Virtualbox and seeing if the vm simply hasn't been
suspended due to an OSX suspend or shutdown.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Unpause the machine&lt;/li&gt;
&lt;li&gt;Send a shutdown signal&lt;/li&gt;
&lt;li&gt;Try boot2docker start again.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And that's it, hope it works for you.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>R — Cleaning/Merging Excel files</title><link href="https://shanedowling.com/r-cleaning-merging-excel-files-e742fbb33c71.html" rel="alternate"></link><published>2015-02-05T00:00:00+00:00</published><updated>2015-02-05T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2015-02-05:/r-cleaning-merging-excel-files-e742fbb33c71.html</id><summary type="html">&lt;p&gt;This is just a useful snippet of code I've been using a lot to tidy
up messy exports I've been getting lately.&lt;/p&gt;
&lt;p&gt;Takes in a bunch of excel files, rewrites some variable column names in
column 3 then outputs them as a list of dataframes. These then get
merged into …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is just a useful snippet of code I've been using a lot to tidy
up messy exports I've been getting lately.&lt;/p&gt;
&lt;p&gt;Takes in a bunch of excel files, rewrites some variable column names in
column 3 then outputs them as a list of dataframes. These then get
merged into a single csv file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;filenames&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;list.files&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;excels&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;*.xlsx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;full.names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;ldf&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filenames&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;read.xls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;sectionName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nf"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="nf"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;sectionName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;section&amp;quot;&lt;/span&gt;
  &lt;span class="n"&gt;df&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;merge_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ldf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;write.csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;result.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row.names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM — Git Version Control Strategy</title><link href="https://shanedowling.com/sugarcrm-git-version-control-strategy-20997a85b1c0.html" rel="alternate"></link><published>2014-11-10T00:00:00+00:00</published><updated>2014-11-10T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-11-10:/sugarcrm-git-version-control-strategy-20997a85b1c0.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__2NJhCUqmjZjwLRviy5R6yg.png"&gt;&lt;/p&gt;
&lt;p&gt;I've found SugarCRM an utter pain to work with in terms of version
control for a number of reasons, but the most annoying is simply that
certain critical elements of the SugarCRM configuration are stored on
the database.&lt;/p&gt;
&lt;p&gt;Over time I've worked out a system that circumvents this and I've …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__2NJhCUqmjZjwLRviy5R6yg.png"&gt;&lt;/p&gt;
&lt;p&gt;I've found SugarCRM an utter pain to work with in terms of version
control for a number of reasons, but the most annoying is simply that
certain critical elements of the SugarCRM configuration are stored on
the database.&lt;/p&gt;
&lt;p&gt;Over time I've worked out a system that circumvents this and I've
managed to create a very useful gitflow based workflow.&lt;/p&gt;
&lt;p&gt;I won't go over what gitflow is or does, there's a great explanation
&lt;a href="http://nvie.com/posts/a-successful-git-branching-model/"&gt;here&lt;/a&gt; and if you need a more visual explanation this &lt;a href="http://danielkummer.github.io/git-flow-cheatsheet/"&gt;cheatsheet&lt;/a&gt; is a terrific reference.&lt;/p&gt;
&lt;h3&gt;Example Problem&lt;/h3&gt;
&lt;p&gt;Say you're in the middle of developing a new feature in SugarCRM. You've
used something like.&lt;/p&gt;
&lt;p&gt;git flow feature start mynewfeature&lt;/p&gt;
&lt;p&gt;Someone realises a new urgent fix is required to go live now, you're not
going to want to deploy your half implemented feature along with the new
urgent fix. That's okay, you're using git flow. So you'd commit your
half finished feature. Then create a hotfix, like&lt;/p&gt;
&lt;p&gt;git flow hotfix start mynewfix&lt;/p&gt;
&lt;p&gt;The problem is that you've made a bunch of changes to the sugarcrm
database, specifically fields_meta_data. Even if you swap branches the
fields_meta_data won't update back to the master branch, which is
where the new hotfix will create it's branch from. What you need is a
way to keep fields_meta_data in sync with the branch you're currently
working on.&lt;/p&gt;
&lt;h3&gt;The Solution-Git Hooks&lt;/h3&gt;
&lt;p&gt;Using git hooks you can automatically run commands when certain events
occur. The two hooks of interest to us are pre-commit and post-checkout.&lt;/p&gt;
&lt;h3&gt;Tracking all database changes&lt;/h3&gt;
&lt;p&gt;What pre-commit does is run everytime you commit code. So, if you
could dump your fields_meta_data everytime a commit is made, you can
be sure your branch is tracking all database changes you're making via&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
rm databases/fields_meta_data.sql
mysqldump -u root -p — extended-insert&lt;span class="o"&gt;=&lt;/span&gt;FALSE — skip-dump-date sugarcrm fields_meta_data &amp;gt; databases/fields_meta_data.sql
git add databases/fields_meta_data.sql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that I'm not compressing these database dumps, they should stay in
plaintext with each line representing a database insert. The reason for
that is when it comes time to merge two branches, say you've made
changes to studio in a master branch and also to a feature branch you
wish to release, you can merge the fields_meta_data in with branched
changes very easily via any mergetool.&lt;/p&gt;
&lt;h3&gt;Keep Sugar up to date with your branch&lt;/h3&gt;
&lt;p&gt;Finally when you swap between branches you'll want to automatically
apply that branches fields_meta_data because your likely to forget to
do this step. So say your swapping from a feature branch to master.
You'll want to revert your studio changes back to where master was. You
can do this in the post checkout git hook. So in&lt;/p&gt;
&lt;p&gt;```bash&lt;/p&gt;
&lt;h1&gt;!/bin/bash&lt;/h1&gt;
&lt;p&gt;echo 'Importing this branches field meta data'
 mysql -u root -p sugarcrm &amp;lt; databases/fields_meta_data.sql
 ```&lt;/p&gt;
&lt;p&gt;This will automatically execute your fields_meta_data database dump on
your SugarCRM install.&lt;/p&gt;
&lt;h3&gt;Deploying&lt;/h3&gt;
&lt;p&gt;In the end, whether a hotfix or a feature it'll always get merged to
master when I'm deploying. So what I tend to do is finish my
release/hotfix, merge to master then apply a data sync to
fields_meta_data on live so I can manually review the db changes
before deploying. Navicat has a really nice tool to handle this.&lt;/p&gt;
&lt;h3&gt;Going further&lt;/h3&gt;
&lt;p&gt;As you can see all I've written is two simple bash scripts and
they've made my Sugar workflow much cleaner. You could go far further
than this, a few examples I can think of would be to track db changes on
the saved_reports table or have the scripts automatically run a command
line variant of the Quick Repair/Rebuild. The other thing could be to
track the entire structure of the SugarCRM database if you felt like it,
but since all db fields are tracked via fields_meta_data I thought
this wasn't necessary but I'm sure there's ton of other things you could
add to make your development life easier.&lt;/p&gt;
&lt;p&gt;Let me know if you think of anything!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Better PHP Debugging with Emacs</title><link href="https://shanedowling.com/better-php-debugging-with-emacs-1c2f71c947fe.html" rel="alternate"></link><published>2014-10-02T00:00:00+00:00</published><updated>2014-10-02T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-10-02:/better-php-debugging-with-emacs-1c2f71c947fe.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__3CPMZKjTwVkDGKtphfr3yQ.png"&gt;&lt;/p&gt;
&lt;p&gt;Recently I came across an app called &lt;a href="http://codebugapp.com/"&gt;CodeBug&lt;/a&gt;, a really nice PHP debugger for
Mac. I find debugging PHP really painful within editors such as Vim or Emacs, so up until now I'd been stuck using the incredibly bloated PHPStorm.&lt;/p&gt;
&lt;p&gt;On Emacs you can currently use Geben for debugging but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__3CPMZKjTwVkDGKtphfr3yQ.png"&gt;&lt;/p&gt;
&lt;p&gt;Recently I came across an app called &lt;a href="http://codebugapp.com/"&gt;CodeBug&lt;/a&gt;, a really nice PHP debugger for
Mac. I find debugging PHP really painful within editors such as Vim or Emacs, so up until now I'd been stuck using the incredibly bloated PHPStorm.&lt;/p&gt;
&lt;p&gt;On Emacs you can currently use Geben for debugging but I find it's install really painful and it's usage even more so. I figured it was worth knocking up an Emacs plugin that allows you to set breakpoints in Codebug.&lt;/p&gt;
&lt;p&gt;You can find the repo &lt;a href="https://github.com/shano/emacs-codebug"&gt;here&lt;/a&gt; and it's been accepted to &lt;a href="http://melpa.milkbox.net/"&gt;Mepla&lt;/a&gt;, so it
can be installed via the package manager.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Codebug have very nicely featured this plugin on their &lt;a href="http://codebugapp.com/"&gt;homepage&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Shellshock — Am I vulnerable and what do I do?</title><link href="https://shanedowling.com/shellshock-am-i-vulnerable-and-what-do-i-do-4368762a4c94.html" rel="alternate"></link><published>2014-09-25T00:00:00+00:00</published><updated>2014-09-25T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-09-25:/shellshock-am-i-vulnerable-and-what-do-i-do-4368762a4c94.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__9ehFHvJtYiV__mH5tFVI9OQ.png"&gt;&lt;/p&gt;
&lt;p&gt;`Shellshock `__ is the
latest Heartbleed level vulnerability to be discovered. It's a pretty
long running exploit in how bash handles environment variables. It's a
good thing to fix asap, especially if you're running any old services
like telnet, ftp or an old version of apache.&lt;/p&gt;
&lt;h3&gt;Is my server vulnerable?&lt;/h3&gt;
&lt;p&gt;Run …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__9ehFHvJtYiV__mH5tFVI9OQ.png"&gt;&lt;/p&gt;
&lt;p&gt;`Shellshock `__ is the
latest Heartbleed level vulnerability to be discovered. It's a pretty
long running exploit in how bash handles environment variables. It's a
good thing to fix asap, especially if you're running any old services
like telnet, ftp or an old version of apache.&lt;/p&gt;
&lt;h3&gt;Is my server vulnerable?&lt;/h3&gt;
&lt;p&gt;Run this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;env &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;() { :;}; echo vulnerable&amp;#39;&lt;/span&gt; bash -c &lt;span class="s1"&gt;&amp;#39;echo test&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you see&lt;/p&gt;
&lt;p&gt;vulnerable
test&lt;/p&gt;
&lt;p&gt;You should patch immediately.&lt;/p&gt;
&lt;p&gt;However if you see.&lt;/p&gt;
&lt;p&gt;test&lt;/p&gt;
&lt;p&gt;You should be okay.&lt;/p&gt;
&lt;h3&gt;How to fix?&lt;/h3&gt;
&lt;p&gt;Centos/RedHat&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum update bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Debian/Ubuntu&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install bash
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;OSX&lt;/h3&gt;
&lt;p&gt;Unless your running OSX as a critical server somewhere remote, I'd hold
off the solution for now and wait for Apple to distribute an update. If
you need to update.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install homebrew&lt;/li&gt;
&lt;li&gt;Run&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew update bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Backup your existing vulnerable bash&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp /usr/local/bin/bash /usr/local/bin/bash_old
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then symlink to the new brew installed bash&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ln -s /usr/local/Cellar/bash/4.3.25/bin/bash /usr/local/bin/bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally reboot!&lt;/p&gt;
&lt;p&gt;Keep an eye on these solutions as time goes on as I fear these patches might not solve the whole problem.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Fix to re-enable ElasticSearch on custom modules</title><link href="https://shanedowling.com/sugarcrm-7-fix-to-re-enable-elasticsearch-on-custom-modules-f669c97ca480.html" rel="alternate"></link><published>2014-09-18T00:00:00+00:00</published><updated>2014-09-18T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-09-18:/sugarcrm-7-fix-to-re-enable-elasticsearch-on-custom-modules-f669c97ca480.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__HOS9Snvhcd__NSa6OnO__ksQ.png"&gt;&lt;/p&gt;
&lt;p&gt;I had an issue in Sugar where some custom modules refused to appear in
the Global Search settings, meaning I couldn't index them in
ElasticSearch.&lt;/p&gt;
&lt;p&gt;When I checked the module oddly enough unified search would be enabled:&lt;/p&gt;
&lt;p&gt;modules/&lt;MODULE&gt;/vardefs.php&lt;/p&gt;
&lt;h3&gt;1. Re-enable the module&lt;/h3&gt;
&lt;p&gt;To force it to be re-enabled …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__HOS9Snvhcd__NSa6OnO__ksQ.png"&gt;&lt;/p&gt;
&lt;p&gt;I had an issue in Sugar where some custom modules refused to appear in
the Global Search settings, meaning I couldn't index them in
ElasticSearch.&lt;/p&gt;
&lt;p&gt;When I checked the module oddly enough unified search would be enabled:&lt;/p&gt;
&lt;p&gt;modules/&lt;MODULE&gt;/vardefs.php&lt;/p&gt;
&lt;h3&gt;1. Re-enable the module&lt;/h3&gt;
&lt;p&gt;To force it to be re-enabled update/create this file&lt;/p&gt;
&lt;p&gt;custom/Extension/modules/&lt;MODULE&gt;/Ext/Vardefs/vardefs.php&lt;/p&gt;
&lt;p&gt;and add this setting.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$dictionary[&amp;#39;&amp;lt;MODULE&amp;gt;&amp;#39;][&amp;#39;unified_search&amp;#39;] = true;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. Re-enable a field&lt;/h3&gt;
&lt;p&gt;You'll also need a field using the unified index before SugarCRM&lt;/p&gt;
&lt;p&gt;custom/Extension/modules/&lt;MODULE&gt;/Ext/Vardefs/sugarfield_name.php&lt;/p&gt;
&lt;p&gt;Enable unfied_search as a setting.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$dictionary[&amp;#39;&amp;lt;MODULE&amp;gt;&amp;#39;][&amp;#39;fields&amp;#39;][&amp;#39;name&amp;#39;][&amp;#39;unified_search&amp;#39;]=true;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After a quick repair/rebuild. My module appears in the Global Search
Settings and I can poll it as normal through ElasticSearch.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Enable Importing on Custom Modules</title><link href="https://shanedowling.com/sugarcrm-7-enable-importing-on-custom-modules-eabf29774f3b.html" rel="alternate"></link><published>2014-09-11T00:00:00+00:00</published><updated>2014-09-11T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-09-11:/sugarcrm-7-enable-importing-on-custom-modules-eabf29774f3b.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__rMyjz1HzRpsHOYM40IoG7A.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;I've been wracking my brain trying to get &lt;a href="http://support.sugarcrm.com/04_Find_Answers/03_Developers/100Customization/Enabling_Importing_for_Custom_Modules/"&gt;this guide&lt;/a&gt; to work with SugarCRM 7. Add to the fact that it "looks" like this is also how it's done in SugarCRM 7, if you peruse the code under Accounts or Contacts. However it isn't. This is how I've added importing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__rMyjz1HzRpsHOYM40IoG7A.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;I've been wracking my brain trying to get &lt;a href="http://support.sugarcrm.com/04_Find_Answers/03_Developers/100Customization/Enabling_Importing_for_Custom_Modules/"&gt;this guide&lt;/a&gt; to work with SugarCRM 7. Add to the fact that it "looks" like this is also how it's done in SugarCRM 7, if you peruse the code under Accounts or Contacts. However it isn't. This is how I've added importing support to custom modules.&lt;/p&gt;
&lt;h3&gt;Set Module as Importable&lt;/h3&gt;
&lt;p&gt;Under modules/&lt;ModuleName&gt;/&lt;ModuleName&gt;_sugar.php set&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;public $importable = true;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Add Menu Item&lt;/h3&gt;
&lt;p&gt;Under modules/&lt;MODULES&gt;/clients/base/menus/header/header.php you
should have something like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$moduleName = &amp;#39;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; $viewdefs[$moduleName][&amp;#39;base&amp;#39;][&amp;#39;menu&amp;#39;][&amp;#39;header&amp;#39;] = array(&lt;/span&gt;
&lt;span class="x"&gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;route&amp;#39; =&amp;gt; &amp;quot;#$moduleName/create&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LNK_NEW_RECORD&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;create&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_module&amp;#39; =&amp;gt; $moduleName,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;icon&amp;#39; =&amp;gt; &amp;#39;icon-plus&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;route&amp;#39; =&amp;gt; &amp;quot;#$moduleName&amp;quot;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LNK_LIST&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;list&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_module&amp;#39; =&amp;gt; $moduleName,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;icon&amp;#39; =&amp;gt; &amp;#39;icon-reorder&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If not create the file with that array. Next add the import action to
the array.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;route&amp;#39; =&amp;gt; &amp;#39;#bwc/index.php?&amp;#39; . http_build_query(&lt;/span&gt;
&lt;span class="x"&gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;module&amp;#39; =&amp;gt; &amp;#39;Import&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;action&amp;#39; =&amp;gt; &amp;#39;Step1&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;import_module&amp;#39; =&amp;gt; $moduleName,&lt;/span&gt;
&lt;span class="x"&gt; )&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt;&amp;#39;LBL_IMPORT&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39;=&amp;gt;&amp;#39;import&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_module&amp;#39;=&amp;gt;$moduleName,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;icon&amp;#39; =&amp;gt; &amp;#39;icon-upload&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Add language setting&lt;/h3&gt;
&lt;p&gt;Under /modules/&lt;MODULES&gt;/language/en_us.lang.php add into the
$mod_strings array(if it's not already there):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;LBL_IMPORT&amp;#39; =&amp;gt; &amp;#39;Import &amp;#39;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Finally&lt;/h3&gt;
&lt;p&gt;The inevitable quick repair/rebuild.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>DOMpdf failing to render certain accented characters</title><link href="https://shanedowling.com/dompdf-failing-to-render-certain-accented-characters-9be35f0c13a6.html" rel="alternate"></link><published>2014-08-21T00:00:00+00:00</published><updated>2014-08-21T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-08-21:/dompdf-failing-to-render-certain-accented-characters-9be35f0c13a6.html</id><summary type="html">&lt;p&gt;I've noticed some issues with DOMpdf when trying to generate PDFs using
their internal Helvetica font. After banging my head against a wall for
a few hours trying to "fix" UTF-8 support, it turned out UTF-8 support
was working fine. Essentially DOMpdf's internal Helvetica font didn't
support a few polish …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've noticed some issues with DOMpdf when trying to generate PDFs using
their internal Helvetica font. After banging my head against a wall for
a few hours trying to "fix" UTF-8 support, it turned out UTF-8 support
was working fine. Essentially DOMpdf's internal Helvetica font didn't
support a few polish characters. Specifically the Sacute, sacute and a
few others like this. This was a bit of a killer problem for my
requirements so I needed a work-around. My workaround was to use Arial
fonts(they were close enough), but if you really need Helvetica you
could source a copy of the .ttfs and replicate these steps.&lt;/p&gt;
&lt;h3&gt;Download Arial fonts&lt;/h3&gt;
&lt;p&gt;wget &lt;a href="http://www.drivehq.com/file/df.aspx/shareID2129391/fileID59377155/arial.ttf"&gt;http://www.drivehq.com/file/df.aspx/shareID2129391/fileID59377155/arial.ttf&lt;/a&gt;
 wget &lt;a href="http://www.911fonts.com/fonts/6/0/5/605.ttf"&gt;http://www.911fonts.com/fonts/6/0/5/605.ttf&lt;/a&gt; -O arialit.ttf
 wget &lt;a href="http://4nts.com/fonts/arialbd.ttf"&gt;http://4nts.com/fonts/arialbd.ttf&lt;/a&gt;
 wget &lt;a href="http://www.911fonts.com/fonts/6/0/4/604.ttf"&gt;http://www.911fonts.com/fonts/6/0/4/604.ttf&lt;/a&gt; -O arialbit.ttf&lt;/p&gt;
&lt;p&gt;This downloads arial, arial-bold, arial-oblique and arial-boldoblique.&lt;/p&gt;
&lt;h3&gt;Generate compatible dompdf files&lt;/h3&gt;
&lt;p&gt;Pull up a terminal and cd into your dompdf folder. If you're using
composer, it'll be /vendor/dompdf/dompdf&lt;/p&gt;
&lt;p&gt;&lt;code&gt;php load_font.php arial ~/arial.ttf ~/arialbd.ttf ~/arialit.ttf ~/arialbit.ttf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You should now see an entry in lib/fonts/dompdf_font_family_cache.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;arial&amp;#39; =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;normal&amp;#39; =&amp;gt; DOMPDF_FONT_DIR . &amp;#39;arial&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;bold&amp;#39; =&amp;gt; DOMPDF_FONT_DIR . &amp;#39;arialbd&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;italic&amp;#39; =&amp;gt; DOMPDF_FONT_DIR . &amp;#39;arialit&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;bold_italic&amp;#39; =&amp;gt; DOMPDF_FONT_DIR . &amp;#39;arialbit&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can now reference the Arial font-family in your DOMpdf stylesheets
and have it render some nice Helvetica like fonts.&lt;/p&gt;
&lt;p&gt;If you are using composer with DOMpdf, I would highly recommend not
leaving your custom fonts in DOMpdfs vendor folder. Copy the fonts
directory somewhere in your projects directory, and over-ride this
variable with your own def, referencing the new folder location.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;def(&amp;quot;DOMPDF_FONT_DIR&amp;quot;, DOMPDF_DIR . &amp;quot;/lib/fonts/&amp;quot;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This means you shouldn't need to rely on dodgy customisations to the
vendor folder.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Yii — Convert database to migrations</title><link href="https://shanedowling.com/yii-convert-database-to-migrations-998a6277c968.html" rel="alternate"></link><published>2014-08-21T00:00:00+00:00</published><updated>2014-08-21T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-08-21:/yii-convert-database-to-migrations-998a6277c968.html</id><summary type="html">&lt;p&gt;It happens to be best of us. You start a new Yii project, generate a few
tables and fields, create the models in Gii and totally forget to use
any migrations.&lt;/p&gt;
&lt;p&gt;There's an easy way to move yourself to a db backed migration.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put txDbMigration in your codebase.&lt;/li&gt;
&lt;li&gt;Create a …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;It happens to be best of us. You start a new Yii project, generate a few
tables and fields, create the models in Gii and totally forget to use
any migrations.&lt;/p&gt;
&lt;p&gt;There's an easy way to move yourself to a db backed migration.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put txDbMigration in your codebase.&lt;/li&gt;
&lt;li&gt;Create a new seed migration file&lt;/li&gt;
&lt;li&gt;Update your console config file&lt;/li&gt;
&lt;li&gt;Only use migrations from now on.&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Custom subpanels</title><link href="https://shanedowling.com/sugarcrm-7-custom-subpanels-a75e66374a5b.html" rel="alternate"></link><published>2014-08-13T00:00:00+00:00</published><updated>2014-08-13T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-08-13:/sugarcrm-7-custom-subpanels-a75e66374a5b.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__g70Q0ojQdUFPYP4a__sPE5w.png"&gt;&lt;/p&gt;
&lt;p&gt;This tutorial should hopefully help you to create a new subpanel under
the Contacts module in Sugar using a custom link class and driven by
SugarCRM 7's new SugarQuery API.&lt;/p&gt;
&lt;h3&gt;1. Create a new link class&lt;/h3&gt;
&lt;p&gt;This should go into custom/modules//YourNewLink.php and this
class will act as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__g70Q0ojQdUFPYP4a__sPE5w.png"&gt;&lt;/p&gt;
&lt;p&gt;This tutorial should hopefully help you to create a new subpanel under
the Contacts module in Sugar using a custom link class and driven by
SugarCRM 7's new SugarQuery API.&lt;/p&gt;
&lt;h3&gt;1. Create a new link class&lt;/h3&gt;
&lt;p&gt;This should go into custom/modules//YourNewLink.php and this
class will act as the custom functionality that will build your link
between the two records.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Custom filtered link&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; class YourNewLink extends Link2&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; /**&lt;/span&gt;
&lt;span class="x"&gt; * DB&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * @var DBManager&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; protected $db;&lt;/span&gt;

&lt;span class="x"&gt;public function __construct($linkName, $bean, $linkDef = false)&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; $this-&amp;gt;focus = $bean;&lt;/span&gt;
&lt;span class="x"&gt; $this-&amp;gt;name = $linkName;&lt;/span&gt;
&lt;span class="x"&gt; $this-&amp;gt;db = DBManagerFactory::getInstance();&lt;/span&gt;
&lt;span class="x"&gt; if (empty($linkDef)) {&lt;/span&gt;
&lt;span class="x"&gt; $this-&amp;gt;def = $bean-&amp;gt;field_defs[$linkName];&lt;/span&gt;
&lt;span class="x"&gt; } else {&lt;/span&gt;
&lt;span class="x"&gt; $this-&amp;gt;def = $linkDef;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Returns false if no relationship was found for this link&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * @return bool&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public function loadedSuccesfully()&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; // this link always loads successfully&lt;/span&gt;
&lt;span class="x"&gt; return true;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * @see Link2::getRelatedModuleName()&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public function getRelatedModuleName()&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; return &amp;#39;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * @see Link2::buildJoinSugarQuery()&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public function buildJoinSugarQuery($sugar_query, $options = array())&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; $joinParams = array(&amp;#39;joinType&amp;#39; =&amp;gt; isset($options[&amp;#39;joinType&amp;#39;]) ? $options[&amp;#39;joinType&amp;#39;] : &amp;#39;INNER&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; $jta = &amp;#39;active_other_invites&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; if (!empty($options[&amp;#39;joinTableAlias&amp;#39;])) {&lt;/span&gt;
&lt;span class="x"&gt; $jta = $joinParams[&amp;#39;alias&amp;#39;] = $options[&amp;#39;joinTableAlias&amp;#39;];&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;$sugar_query-&amp;gt;joinRaw($this-&amp;gt;getCustomJoin($options), $joinParams);&lt;/span&gt;
&lt;span class="x"&gt; return $sugar_query-&amp;gt;join[$jta];&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Builds main join subpanel&lt;/span&gt;
&lt;span class="x"&gt; * @param string $params&lt;/span&gt;
&lt;span class="x"&gt; * @return string JOIN clause&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; protected function getCustomJoin($params = array())&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; $bean_id = $this-&amp;gt;db-&amp;gt;quoted($this-&amp;gt;focus-&amp;gt;id);&lt;/span&gt;
&lt;span class="x"&gt; $sql = &amp;quot; INNER JOIN(&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; $sql .= &amp;quot;SELECT id FROM accounts WHERE id={$bean_id}&amp;quot;; // This is essentially a select statement that will return a set of ids that you can match with the existing sugar_query&lt;/span&gt;
&lt;span class="x"&gt; $sql .= &amp;quot;) accounts_result ON accounts_result.id = sugar_query_table.id&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; return $sql;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The argument $sugar_query is a new SugarQuery object, the details of
which are documented &lt;a href="http://developer.sugarcrm.com/2014/04/22/sugarcrm-cookbook-sugarquery-the-basics/"&gt;here&lt;/a&gt;.
What you essentially need to do is extend this query with whatever
join/filters you wish to add. This is done in the inner join I've
specified.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The inner join can get really complicated, so if you want a
real working example, checkout modules/Emails/ArchivedEmailsLink.php and
how the core sugar team use this. I can confirm however that this does
work with custom joins.&lt;/p&gt;
&lt;p&gt;Here is the getEmailsJoin to help you understand what you can actually
produce via this custom join.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Builds main join for archived emails&lt;/span&gt;
&lt;span class="x"&gt; * @param string $params&lt;/span&gt;
&lt;span class="x"&gt; * @return string JOIN clause&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; protected function getEmailsJoin($params = array())&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; $bean_id = $this-&amp;gt;db-&amp;gt;quoted($this-&amp;gt;focus-&amp;gt;id);&lt;/span&gt;
&lt;span class="x"&gt; if (!empty($params[&amp;#39;join_table_alias&amp;#39;])) {&lt;/span&gt;
&lt;span class="x"&gt; $table_name = $params[&amp;#39;join_table_alias&amp;#39;];&lt;/span&gt;
&lt;span class="x"&gt; } else {&lt;/span&gt;
&lt;span class="x"&gt; $table_name = &amp;#39;emails&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;return &amp;quot;INNER JOIN (\\n&amp;quot;.&lt;/span&gt;
&lt;span class="x"&gt; // directly assigned emails&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;select eb.email_id, &amp;#39;direct&amp;#39; source FROM emails_beans eb where eb.bean_module = &amp;#39;{$this-&amp;gt;focus-&amp;gt;module_dir}&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt; AND eb.bean_id = $bean_id AND eb.deleted=0\\n&amp;quot; .&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot; UNION &amp;quot;.&lt;/span&gt;
&lt;span class="x"&gt; // Related by directly by email&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;select DISTINCT eear.email_id, &amp;#39;relate&amp;#39; source from emails_email_addr_rel eear INNER JOIN email_addr_bean_rel eabr&lt;/span&gt;
&lt;span class="x"&gt; ON eabr.bean_id = $bean_id AND eabr.bean_module = &amp;#39;{$this-&amp;gt;focus-&amp;gt;module_dir}&amp;#39; AND&lt;/span&gt;
&lt;span class="x"&gt; eabr.email_address_id = eear.email_address_id and eabr.deleted=0 where eear.deleted=0\\n&amp;quot; .&lt;/span&gt;
&lt;span class="x"&gt; &amp;quot;) email_ids ON $table_name.id=email_ids.email_id &amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. Add a new vardef entry for the linkfield.&lt;/h3&gt;
&lt;p&gt;For this example, I'm going to create the custom link on the contacts
module. So this code goes in
custom/Extension/modules/Contacts/Ext/Vardefs/your_field_name.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$dictionary[&amp;quot;Contact&amp;quot;][&amp;quot;fields&amp;quot;][&amp;quot;your_field_name&amp;quot;] = array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;active_other_invites&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;link&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;link_file&amp;#39; =&amp;gt; &amp;#39;custom/modules//YourNewLink.php&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;link_class&amp;#39; =&amp;gt; &amp;#39;YourNewLink&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;source&amp;#39; =&amp;gt; &amp;#39;non-db&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;vname&amp;#39; =&amp;gt; &amp;#39;LBL_NEW_LINK&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;module&amp;#39; =&amp;gt; &amp;#39;&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;link_type&amp;#39; =&amp;gt; &amp;#39;many&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;relationship&amp;#39; =&amp;gt; &amp;#39;&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3. Add the new link as a subpanel&lt;/h3&gt;
&lt;p&gt;custom/Extension/modules/Contacts/Ext/clients/base/layouts/subpanels/your_subpanel_name.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$viewdefs[&amp;#39;Contacts&amp;#39;][&amp;#39;base&amp;#39;][&amp;#39;layout&amp;#39;][&amp;#39;subpanels&amp;#39;][&amp;#39;components&amp;#39;][] = array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;layout&amp;#39; =&amp;gt; &amp;#39;subpanel&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_NEW_LINK&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;context&amp;#39; =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;link&amp;#39; =&amp;gt; &amp;#39;your_field_name&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4. Add the label&lt;/h3&gt;
&lt;p&gt;custom/Extension/modules/Contacts/Ext/Language/en_us.new_link.php&lt;/p&gt;
&lt;p&gt;Content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$mod_strings[&amp;#39;LBL_ACTIVE_OTHER_INVITES&amp;#39;] = &amp;#39;Your New Link&amp;#39;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;5. Quick Repair and Rebuild&lt;/h3&gt;
&lt;p&gt;That should hopefully get you started. Keep an eye on the sugarlogs
while you're debugging your queries. I also found using xdebug and
SugarQueries compileSql function invaluable in figuring out what I
needed to do to get a working INNER JOIN statement.&lt;/p&gt;
&lt;p&gt;I've found this to be a surprisingly powerful solution, it means that if
you need to show information related to a module that might be a few
joins away, this allows you to create the links manually without having
to create pointless related fields in-between the two.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Making Ajax Requests</title><link href="https://shanedowling.com/sugarcrm-7-making-ajax-requests-7bf1bd0c71a5.html" rel="alternate"></link><published>2014-08-09T00:00:00+00:00</published><updated>2014-08-09T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-08-09:/sugarcrm-7-making-ajax-requests-7bf1bd0c71a5.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__cu8y__JHqBRKgm37dccl0Pg.png"&gt;&lt;/p&gt;
&lt;p&gt;SugarCRM has a pretty great API if you know how to poll it. Today I'm
sharing two examples of where I've needed to poll SugarCRM's API with
some sample jQuery code.&lt;/p&gt;
&lt;h3&gt;A jQuery autocompleter&lt;/h3&gt;
&lt;p&gt;If you're declaring an input box and wish to autocomplete it's results
based on the results …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__cu8y__JHqBRKgm37dccl0Pg.png"&gt;&lt;/p&gt;
&lt;p&gt;SugarCRM has a pretty great API if you know how to poll it. Today I'm
sharing two examples of where I've needed to poll SugarCRM's API with
some sample jQuery code.&lt;/p&gt;
&lt;h3&gt;A jQuery autocompleter&lt;/h3&gt;
&lt;p&gt;If you're declaring an input box and wish to autocomplete it's results
based on the results from a particular module, this sample code should
get you started.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;#your-input-box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;autocomplete&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
 &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRequestHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OAuth-Token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SUGAR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getOAuthToken&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;records&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;};&lt;/span&gt;
   &lt;span class="p"&gt;}));&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;});&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#your-input-box&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#your-input-box-id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ui&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This leverages the existing SugarCRM API to populate this
data. You can customise the filter however you want, just load up
firebug/a web inspector and do a few sample requests from Sugar's core
fieldset if you need sample requests to work with.&lt;/p&gt;
&lt;p&gt;This is really useful for leveraging existing endpoints, but what if you
want to have Javascript call a custom piece of code you've written?&lt;/p&gt;
&lt;h3&gt;Call a custom API Endpoint via a jQuery ajax request.&lt;/h3&gt;
&lt;p&gt;Here's a sample piece of Javascript that will grab some input fields and
create your post request.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#some-button&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arg1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#field1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arg2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#field2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arg3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#field3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setRequestHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OAuth-Token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SUGAR&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getOAuthToken&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And here is the API code that would handle a post request with multiple
arguments.&lt;/p&gt;
&lt;p&gt;This would be placed in custom/modules//&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;if(!defined(&amp;#39;sugarEntry&amp;#39;) || !sugarEntry) die(&amp;#39;Not A Valid Entry Point&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; require_once(&amp;#39;custom/modules//.php&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; class yourCustomApiFn extends SugarApi&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; public function registerApiRest()&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; return array(&lt;/span&gt;
&lt;span class="x"&gt; //GET&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;customAPIFn&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; //request type&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;reqType&amp;#39; =&amp;gt; &amp;#39;POST&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; //endpoint path&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;path&amp;#39; =&amp;gt; array(&amp;#39;&amp;#39;, &amp;#39;&amp;#39;),&lt;/span&gt;
&lt;span class="x"&gt; //endpoint variables&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;pathVars&amp;#39; =&amp;gt; array(&amp;#39;module&amp;#39;, &amp;#39;action&amp;#39;),&lt;/span&gt;
&lt;span class="x"&gt; //method to call&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;method&amp;#39; =&amp;gt; &amp;#39;doSomething&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; //short help string to be displayed in the help documentation&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;shortHelp&amp;#39; =&amp;gt; &amp;#39;Does something really useful&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; );&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Method to be used for my MyEndpoint/GetExample endpoint&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public function doSomething($api, $args)&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; $arg1 = $args[&amp;#39;arg1&amp;#39;];&lt;/span&gt;
&lt;span class="x"&gt; $arg2 = $args[&amp;#39;arg2&amp;#39;];&lt;/span&gt;
&lt;span class="x"&gt; $arg3 = $args[&amp;#39;arg3&amp;#39;];&lt;/span&gt;

&lt;span class="x"&gt;$custom_bean = new CustomClass();&lt;/span&gt;
&lt;span class="x"&gt; return $custom_bean-&amp;gt;doSomething($arg1, $arg2, $arg3);&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Add a new action to a record</title><link href="https://shanedowling.com/sugarcrm-7-add-a-new-action-to-a-record-d020dafdc883.html" rel="alternate"></link><published>2014-08-07T00:00:00+00:00</published><updated>2014-08-07T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-08-07:/sugarcrm-7-add-a-new-action-to-a-record-d020dafdc883.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__lM3J923TEAa5__XNjB__57Jg.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Odds are if you're customising SugarCRM, you will at some point need to
add functionality to the records page. This article shows you a
framework for creating actions on the UI, the API entrypoints to run
your code and how to link it all together using SugarCRM's sidecar
functionality.&lt;/p&gt;
&lt;h3&gt;1 …&lt;/h3&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__lM3J923TEAa5__XNjB__57Jg.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Odds are if you're customising SugarCRM, you will at some point need to
add functionality to the records page. This article shows you a
framework for creating actions on the UI, the API entrypoints to run
your code and how to link it all together using SugarCRM's sidecar
functionality.&lt;/p&gt;
&lt;h3&gt;1. Add the button&lt;/h3&gt;
&lt;p&gt;In custom/modules//clients/base/views/record/record.php,
you'll need this to add the core button array.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$viewdefs[$module_name][&amp;#39;base&amp;#39;][&amp;#39;view&amp;#39;][&amp;#39;record&amp;#39;][&amp;#39;buttons&amp;#39;] =&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; 0 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;cancel_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_CANCEL_BUTTON_LABEL&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;css_class&amp;#39; =&amp;gt; &amp;#39;btn-invisible btn-link&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;showOn&amp;#39; =&amp;gt; &amp;#39;edit&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 1 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;rowaction&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;event&amp;#39; =&amp;gt; &amp;#39;button:save_button:click&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;save_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_SAVE_BUTTON_LABEL&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;css_class&amp;#39; =&amp;gt; &amp;#39;btn btn-primary&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;showOn&amp;#39; =&amp;gt; &amp;#39;edit&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;edit&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 2 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;actiondropdown&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;main_dropdown&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;primary&amp;#39; =&amp;gt; true,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;showOn&amp;#39; =&amp;gt; &amp;#39;view&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;buttons&amp;#39; =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; 0 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;rowaction&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;event&amp;#39; =&amp;gt; &amp;#39;button:edit_button:click&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;edit_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_EDIT_BUTTON_LABEL&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;edit&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 1 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;shareaction&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;share&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_RECORD_SHARE_BUTTON&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;view&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 2 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;pdfaction&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;download-pdf&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_PDF_VIEW&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;action&amp;#39; =&amp;gt; &amp;#39;download&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;view&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 3 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;pdfaction&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;email-pdf&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_PDF_EMAIL&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;action&amp;#39; =&amp;gt; &amp;#39;email&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;view&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 4 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;divider&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 5 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;rowaction&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;event&amp;#39; =&amp;gt; &amp;#39;button:do_some_task:click&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;do_some_task&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_DO_SOME_ACTION&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;view&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 6 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;rowaction&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;event&amp;#39; =&amp;gt; &amp;#39;button:find_duplicates_button:click&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;find_duplicates_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_DUP_MERGE&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;edit&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 7 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;rowaction&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;event&amp;#39; =&amp;gt; &amp;#39;button:duplicate_button:click&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;duplicate_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_DUPLICATE_BUTTON_LABEL&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_module&amp;#39; =&amp;gt; &amp;#39;&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;create&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 8 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;rowaction&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;event&amp;#39; =&amp;gt; &amp;#39;button:audit_button:click&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;audit_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LNK_VIEW_CHANGE_LOG&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;view&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 9 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;divider&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 10 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;rowaction&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;event&amp;#39; =&amp;gt; &amp;#39;button:delete_button:click&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;delete_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_DELETE_BUTTON_LABEL&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;delete&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; 3 =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;sidebar_toggle&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;sidebartoggle&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note what I've stored at &lt;strong&gt;array key 5&lt;/strong&gt;. This is the custom button that
will be rendered and the event button do_some_task will be called in
the javacript file we'll created. You can add this anywhere in the
drop-down I just generally choose here.&lt;/p&gt;
&lt;h3&gt;2. Create the javascript hook to call the API&lt;/h3&gt;
&lt;p&gt;In custom/modules//clients/base/views/record/record.js
create a file like this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;

&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;button:do_some_task:click&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;do_some_task&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="nx"&gt;do_some_task&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buildURL&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/DoSomeTask/&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="c1"&gt;//response comes back from your api, maybe you want to set some value on your model or alter a response?&lt;/span&gt;
 &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;some_field&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="c1"&gt;//Or maybe you want to show an error or success&lt;/span&gt;
 &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bad-task-response&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;})&lt;/span&gt;
 &lt;span class="sb"&gt;```&lt;/span&gt;

&lt;span class="sb"&gt;### 3. Build the API to act on the javascript file&lt;/span&gt;

&lt;span class="sb"&gt;In custom/modules//clients/base/api/doSomeTask.php create a&lt;/span&gt;
&lt;span class="sb"&gt;file like so&lt;/span&gt;

&lt;span class="sb"&gt;```&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sugarEntry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;sugarEntry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Not A Valid Entry Point&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nx"&gt;require_once&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;custom/modules//SomeCustomClass.php&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;doSomeTask&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;SugarApi&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;registerApiRest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="c1"&gt;//GET&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;MyGetEndpoint&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="c1"&gt;//request type&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;reqType&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="c1"&gt;//endpoint path&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DoSomeTask&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;?&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

&lt;span class="c1"&gt;//endpoint variables&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;pathVars&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

&lt;span class="c1"&gt;//method to call&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;method&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;DoSomeTask&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="c1"&gt;//short help string to be displayed in the help documentation&lt;/span&gt;
 &lt;span class="s1"&gt;&amp;#39;shortHelp&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;This does some custom task&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * Method to be used for my MyEndpoint/GetExample endpoint&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
 &lt;span class="nx"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;DoSomeTask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$api&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;$custom_bean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SomeCustomClass&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="nx"&gt;$custom_bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;retrieve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;$custom_bean&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;doSomething&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Make sure your DoSomeTask functon is uppercased not camel
cased. I kept getting invalid argument count errors when it was
camel-cased.&lt;/p&gt;
&lt;h3&gt;4. Language files for the button&lt;/h3&gt;
&lt;p&gt;Create a new language file at
custom/Extension/modules//Ext/Language/en_us.doSomeTask.php
with contents like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$mod_strings[&amp;#39;LBL_DO_SOME_TASK&amp;#39;] = &amp;#39;Do some task&amp;#39;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;5. Quick Repair/Rebuild&lt;/h3&gt;
&lt;p&gt;This should hopefully merge your language files into your code and
recompile your javascript into the front-end.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM — Sugar powered by Salt!</title><link href="https://shanedowling.com/sugarcrm-sugar-powered-by-salt-2d2af530f829.html" rel="alternate"></link><published>2014-08-02T00:00:00+00:00</published><updated>2014-08-02T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-08-02:/sugarcrm-sugar-powered-by-salt-2d2af530f829.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__zMEOOXE7GYSSRFVwtqxhVQ.png"&gt;&lt;/p&gt;
&lt;p&gt;SugarCRM can be a pain to setup, especially if you are managing many
installs on different servers/environments. I'm a big fan of using &lt;a href="http://www.saltstack.com/"&gt;salt&lt;/a&gt; to configure my servers. I rarely manage any servers directly anymore and generally run things through my salt master. This guide should hopefully get you …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__zMEOOXE7GYSSRFVwtqxhVQ.png"&gt;&lt;/p&gt;
&lt;p&gt;SugarCRM can be a pain to setup, especially if you are managing many
installs on different servers/environments. I'm a big fan of using &lt;a href="http://www.saltstack.com/"&gt;salt&lt;/a&gt; to configure my servers. I rarely manage any servers directly anymore and generally run things through my salt master. This guide should hopefully get you up and running with a production ready setup of SugarCRM that you can re-use over and over. If you are looking for a decent primer on saltstack, &lt;a href="http://www.youtube.com/watch?v=fTieSO2tp3s"&gt;this video&lt;/a&gt; will give you a really useful introduction to what salt can really do. I'm barely scratching the surface.&lt;/p&gt;
&lt;h3&gt;Howto&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://docs.saltstack.com/en/latest/topics/installation/ubuntu.html"&gt;Install salt&lt;/a&gt; on the server you with to act as the salt-master(the provisioner). &lt;a href="https://www.digitalocean.com/?refcode=81266f739d19%20"&gt;DigitalOcean&lt;/a&gt; is great and cheap for this sort of non-mission critical task.&lt;/li&gt;
&lt;li&gt;Spin up a new server(which will be production), &lt;a href="http://docs.saltstack.com/en/latest/ref/configuration/index.html"&gt;install/configure the salt-minion&lt;/a&gt; and point it at the master.&lt;/li&gt;
&lt;li&gt;Clone &lt;a href="https://github.com/shano/salted_sugar"&gt;this repo&lt;/a&gt; to your salt-master or fork and create your own. You'll need to do a bunch of customisations that you'll want private.&lt;/li&gt;
&lt;li&gt;Do a grep -iRn 'TODO' sugar_salt/* and fill in all details and copy files where needed.&lt;/li&gt;
&lt;li&gt;Overwrite or merge this folder with your existing /srv/salt.&lt;/li&gt;
&lt;li&gt;Run a sudo salt-call -l debug state.highstate on the minion box you've setup. This will give you a ton of output and let you know if anything has gone wrong.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;What this configuration gives you&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;A set of core server essentially tools including git, vim, curl etc.&lt;/li&gt;
&lt;li&gt;Systat which I find essential for finding out what's causing potential issues on servers.&lt;/li&gt;
&lt;li&gt;All of SugarCRMs LAMP requirements, including redis, elasticsearch, composer and apt-pinning to php 5.3.&lt;/li&gt;
&lt;li&gt;Correct php config including recommended increases to memory limit.&lt;/li&gt;
&lt;li&gt;Correct server permissions for your SugarCRM codebase.&lt;/li&gt;
&lt;li&gt;Ensures correct config files are always maintained.&lt;/li&gt;
&lt;li&gt;Ensures the correct htaccess files is always maintained.&lt;/li&gt;
&lt;li&gt;Ensures cache, upload directories exist with the correct permissions.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;This configuration is tested on Ubuntu servers ONLY, specifically 12.04. If you intend to use this on something else please verify this works with a virtual machine before using on production machines. &lt;a href="https://docs.vagrantup.com/v2/provisioning/salt.html"&gt;Salt plays really well with vagrant&lt;/a&gt;, in fact I actually manage all of my development, testing and production boxes using salt and this includes the development Vagrant boxes on my laptop. Specifically you'll probably want to change the php.ini that might not play nice with your alternate OS of choice.&lt;/li&gt;
&lt;li&gt;One improvement that could be made is to in fact keep config.php and config_override.php in version control but have the take in environment variables that salt could maintain(or your server).&lt;/li&gt;
&lt;li&gt;This is actually a little different to how I generally configure my SugarCRM boxes with salt. This configuration is not as re-usable as it could be, so what I do is abstract everything that's per server into their own sub-folders and everything that repeats per server into it's own server. I haven't shown this here for the sake of simplicity but is should be fairly straight forward.&lt;/li&gt;
&lt;li&gt;This repo was setup with SugarCRM 7 in mind. With the requirements specified &lt;a href="http://support.sugarcrm.com/02_Documentation/01_Sugar_Editions/04_Sugar_Professional/Sugar_Professional_7.2/Installation_and_Upgrade_Guide/"&gt;here&lt;/a&gt;. Alter the configuration files based on the requirements of the version that's applicable to you.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Any tips or improvements(I'm sure there's plenty), feel free to comment.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Log Queries with MySQL Proxy</title><link href="https://shanedowling.com/log-queries-with-mysql-proxy-714ae139cc00.html" rel="alternate"></link><published>2014-07-19T00:00:00+00:00</published><updated>2014-07-19T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-07-19:/log-queries-with-mysql-proxy-714ae139cc00.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__HJJkQeHYeEx3PtDHrtR6pQ.png"&gt;&lt;/p&gt;
&lt;h3&gt;What is it?&lt;/h3&gt;
&lt;p&gt;Have you ever found yourself wanting live statistics of you mysql
database, or a log of all the erroring queries. Well MySQL Proxy might&lt;/p&gt;
&lt;p&gt;MySQL Proxy is a simple program that sits between your client and MySQL server(s) that can monitor, analyze or transform their communication …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__HJJkQeHYeEx3PtDHrtR6pQ.png"&gt;&lt;/p&gt;
&lt;h3&gt;What is it?&lt;/h3&gt;
&lt;p&gt;Have you ever found yourself wanting live statistics of you mysql
database, or a log of all the erroring queries. Well MySQL Proxy might&lt;/p&gt;
&lt;p&gt;MySQL Proxy is a simple program that sits between your client and MySQL server(s) that can monitor, analyze or transform their communication.&lt;/p&gt;
&lt;p&gt;Basically MySQL Proxy collects database queries and acts on them using
scripts built in lua that can do some useful things. I find this handy
when debugging SugarCRM as sometimes failed database queries get
suppressed(especially when making API requests) and I needed a
transparent way to check nothing has failed on the DB side.&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;This example I'm going to show you allows you to sit the proxy on
3306(instead of mysql), so you don't need to alter any of the code point
to your existing MySQL installation. If this isn't what you want change
your steps accordingly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basically in your my.cnf. Change your servers port to 3307(server only not the client). Then restart mysql.&lt;/li&gt;
&lt;li&gt;Now install mysql-proxy using your regular package manager(it should even work on homebrew).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mysql-proxy proxy-backend-addresses&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:3307 log-level&lt;span class="o"&gt;=&lt;/span&gt;debug proxy-address&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:3306 proxy-lua-script&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/Cellar/mysql-proxy/0.8.3/lib/mysql-proxy/lua/proxy/mysql-proxy-log-error-queries.lua &lt;span class="nv"&gt;plugins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;proxy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If that default example lua script doesn't exist, simply copy one of the
files below and point proxy-lua-script to that.&lt;/p&gt;
&lt;h3&gt;Log any bad queries the database has to handle.&lt;/h3&gt;
&lt;p&gt;```
local errflag = false
 function readquery( packet )
 if packet:byte() == proxy.COMQUERY then
 local user = proxy.connection.client.username
 local host = proxy.connection.client.src.name
 print(user .. '@' .. host)
 if [[true or]] user:lower() == 'root' then
 [[
 host will always be localhost because of proxy
 and not ( host:lower() == 'localhost'
 or host:lower() == '127.0.0.1' ) then
 ]]
 proxy.queries:append(1, packet, {resultsetisneeded = true})
 proxy.queries:append(2, string.char(proxy.COMQUERY) .. "SET @lastquery = '" .. string.sub(packet, 2) .. "'", {resultsetisneeded = true} )
 proxy.queries:append(3, string.char(proxy.COMQUERY) .. "SHOW WARNINGS", {resultsetisneeded = true} )
 end
 return proxy.PROXYSENDQUERY
 end
 end&lt;/p&gt;
&lt;p&gt;function insertquery(errt, errn, errm)
 local query = "INSERT INTO `somedb`.`mysqlerror` " ..
 "(`date`, `errnum`,`errtype`, `errmessage`, `problemquery`, `connid`)" ..
 " VALUES ( NOW(), " ..
 errn .. "," .. """ ..
 errt ..""" .. "," .. """ ..
 errm .. """ .. "," ..
 "@lastquery" .. "," ..
 proxy.connection.server.threadid .. ")"
 print(query)
 proxy.queries:append(4, string.char(proxy.COMQUERY) .. query, {resultsetisneeded = true})
 return proxy.PROXYSENDQUERY
 end&lt;/p&gt;
&lt;p&gt;function readqueryresult(inj)
 local res = assert(inj.resultset)
 if inj.id == 1 then
 errflag = false
 if res.querystatus == proxy.MYSQLDPACKETERR then
 errflag = true
 return proxy.PROXYIGNORERESULT
 end
 elseif inj.id == 2 then
 return proxy.PROXYIGNORERESULT
 elseif inj.id == 3 then
 if errflag == true then
 for row in res.rows do
 proxy.response.type = proxy.MYSQLDPACKETERR
 proxy.response.errmsg = row[3]
 insertquery(row[1], row[2], row[3])
 end
 return proxy.PROXYSENDRESULT
 end
 return proxy.PROXYIGNORERESULT
 elseif inj.id == 4 then
 return proxy.PROXYIGNORERESULT
 end
 end
 ```&lt;/p&gt;
&lt;h3&gt;Log all queries with stats/warnings&lt;/h3&gt;
&lt;p&gt;Found &lt;a href="https://github.com/patrickallaert/MySQL-Proxy-scripts-for-devs/blob/master/debug.lua"&gt;here&lt;/a&gt;. Useful for spotting those slow/inefficient queries.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM — Versioning Your Database</title><link href="https://shanedowling.com/sugarcrm-versioning-your-database-cdcee943048b.html" rel="alternate"></link><published>2014-07-16T00:00:00+00:00</published><updated>2014-07-16T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-07-16:/sugarcrm-versioning-your-database-cdcee943048b.html</id><summary type="html">&lt;p&gt;One issue that constantly re-occurs for me using SugarCRM is that
certain knowledge is only stored in it's database. So say you want to
revert to a previous version of Sugar and wish to obtain the Studio
customisations you've done at that version, say two days ago, well your
just …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One issue that constantly re-occurs for me using SugarCRM is that
certain knowledge is only stored in it's database. So say you want to
revert to a previous version of Sugar and wish to obtain the Studio
customisations you've done at that version, say two days ago, well your
just out of luck. This is pretty annoying considering most of your day
to day changes will probably be in Studio and you have no real way to
see those changes outside of Sugar's "View History", which leaves a lot
to be desired mostly as again, it's all in the DB. You're effectively
left to sharing a database dump between developers.&lt;/p&gt;
&lt;p&gt;What I've done on my development environment is created a simple
pre-commit git-hook(good explanation of those &lt;a href="http://codeinthehole.com/writing/tips-for-using-a-git-pre-commit-hook/"&gt;here&lt;/a&gt;)
that essentially commits the database structure and the fields_meta_data table. This essentially means someone can get themselves up and running with a basic variant of my install pretty quickly including my studio changes, which are now all tracked in version control too. So put code resembling the below in your &lt;code&gt;.git/hooks/pre-commit&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm /database/sugar.sql
 mysqldump -u root -p — no-data &amp;gt; /database/sugar.sql
 mysqldump -v -u root -p fields_meta_data &amp;gt;&amp;gt; /database/sugar.sql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Originally I had this creating a gzipped time-stamped version of sugar
database dumps, but considering the SQL is small it makes much more
sense to leverage the plain-text advantages git gives you, and simply
track the changes through git rather than timestamped DB dumps.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I only use this script on my local dev environment. This also
isn't version controlled either, so I don't mind that my dev database
password is stored in plaintext.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Set recordlist row colours based on row data</title><link href="https://shanedowling.com/sugarcrm-7-set-recordlist-row-colours-based-on-row-data-6ff3072c08a9.html" rel="alternate"></link><published>2014-07-12T00:00:00+00:00</published><updated>2014-07-12T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-07-12:/sugarcrm-7-set-recordlist-row-colours-based-on-row-data-6ff3072c08a9.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__ftmi7V32ZXjnNFoJRH6UnQ.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;The tutorial shows you how to do two useful things in SugarCRM 7.
Firstly, how to call actions when rows get updated in SugarCRM's
recordlist and secondly, how to set information based on row data. The
example I have here will essentially update the table colours based on a
specific …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__ftmi7V32ZXjnNFoJRH6UnQ.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;The tutorial shows you how to do two useful things in SugarCRM 7.
Firstly, how to call actions when rows get updated in SugarCRM's
recordlist and secondly, how to set information based on row data. The
example I have here will essentially update the table colours based on a
specific data value in each row. So say you have a drop-down with the
values Red,Green,Orange and Yellow this will update the rows to the
specified colour. The key call here is this.collection.on('data:sync:complete'), which essentially fires when the sidecar(read backbone), data sync is completed.&lt;/p&gt;
&lt;p&gt;This code would go in custom/modules/&lt;YOUR_MODULE&gt;/clients/base/views/recordlist/recordlist.js&lt;/p&gt;
&lt;p&gt;```javascript
({&lt;/p&gt;
&lt;p&gt;this.collection.on('data:sync:complete', function() {
 this.render_colors();
 }, this);
 },
 render_colors : function() {
 setTimeout(
 function() {
 $("tr[name^='']").each(function () { //loop over each row
 if ($(this).find('div[data-original-title="Red"]').length &amp;gt; 0) { //check value of TD
 $(this).find($('td')).each(function () {
 $(this).css("background-color", "#FFBABA");
 });
 } else if ($(this).find('div[data-original-title="Green"]').length &amp;gt; 0) {
 $(this).find($('td')).each(function () {
 $(this).css("background-color", "#C3F8B5");
 });
 } else if ($(this).find('div[data-original-title="Orange"]').length &amp;gt; 0) {
 $(this).find($('td')).each(function () {
 $(this).css("background-color", "#FFCF8F");
 });
 } else if ($(this).find('div[data-original-title="Yellow"]').length &amp;gt; 0) {
 $(this).find($('td')).each(function () {
 $(this).css("background-color", "#FAFE8E");
 });
 }
 });
 }, 1000);
 }
 })
 ```&lt;/p&gt;
&lt;p&gt;One thing you might note is the setTimeout with a delay of 1 second.
This is simply because the table won't have rendered as soon as the sync
has completed so a wait of a second was added to allow the browser to
render the table, before iterating through the rows and setting the
appropriate colours. I honestly just couldn't find any documentation or
code samples to see if an even fired when the table gets re-rendered,
but I'll update it here if I find a better solution.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Minimalist MySQL Reporting</title><link href="https://shanedowling.com/minimalist-mysql-reporting-ecc27a71d97.html" rel="alternate"></link><published>2014-07-10T00:00:00+00:00</published><updated>2014-07-10T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-07-10:/minimalist-mysql-reporting-ecc27a71d97.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__ehZIxeK7e1vIcDgZbwxgXQ.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Sometimes business folk can have crazy demands on the types of reports
your system should produce and sometimes these can be really time
consuming and painful to get right. Often I find the most flexible
solution is to give these power-users access to tidier version of the
raw data within …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__ehZIxeK7e1vIcDgZbwxgXQ.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Sometimes business folk can have crazy demands on the types of reports
your system should produce and sometimes these can be really time
consuming and painful to get right. Often I find the most flexible
solution is to give these power-users access to tidier version of the
raw data within a tool they're comfortable playing with themselves.&lt;/p&gt;
&lt;p&gt;To that end, Excel has a &lt;a href="http://www.actualtech.com/product_opensourcedatabases.php"&gt;serviceable ODBC connector&lt;/a&gt;
that costs $35 and will allow your power users to pull data in from
MySQL and filter/play around to their hearts content. The problem is a)
formatting the data in such a way to provide useful information to your
users and b) opening up data access just enough to allow these reporting
users into your system.&lt;/p&gt;
&lt;h3&gt;A) Formatting the data&lt;/h3&gt;
&lt;p&gt;The easiest way to format data in MySQL is to create a view, these are
not difficult to setup. You simply need to wrap some simple syntax
around the query you wish to run. So build the query that returns the&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;VIEW&lt;/span&gt; &lt;span class="n"&gt;view_name&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt;
 &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;column_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt;
 &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;
 &lt;span class="o"&gt;```&lt;/span&gt;

&lt;span class="n"&gt;One&lt;/span&gt; &lt;span class="n"&gt;thing&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;note&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;ODBC&lt;/span&gt; &lt;span class="n"&gt;connector&lt;/span&gt; &lt;span class="n"&gt;won&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="nb"&gt;BLOB&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;so&lt;/span&gt;
&lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;

&lt;span class="o"&gt;```&lt;/span&gt;&lt;span class="k"&gt;sql&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;CONVERT&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="n"&gt;utf8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to convert it to a readable format.&lt;/p&gt;
&lt;h3&gt;B) Opening up data access&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; By changing the bind-address from 127.0.0.1 to 0.0.0.0 in
/etc/mysql/my.cnf this opens MySQL for remote connections. A better
alternative to this could be to keep MySQL closed and tunnel the
connections over SSH, this can be done with Putty on Windows or just run
ssh -ND user@remoteserver to setup a proxy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; If you decide to open MySQL to the outside world I
strongly recommend using a firewall to restrict access to the port. On
ubuntu to open up the firewall to allow connections to port 3306
from your office ip just run this command.&lt;/p&gt;
&lt;p&gt;sudo ufw allow from yourip to any port 3306&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Now create the remote user.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;USER&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;reportUser&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yourip&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;IDENTIFIED&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;yourpassword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Granting access to only a view for users on your IP.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;GRANT&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="k"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view_name&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;reportUser&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yourip&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;FLUSH&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Simply point the ODBC Excel connector to your MySQL host
and have it run the query&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;database&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the result set should populate in Excel.&lt;/p&gt;
&lt;p&gt;One final key thing to note is that it's a very dangerous thing to allow
reporting users to hit live databases, they could really kill the system
for live users. Ideally, you would do all of this on a replicated MySQL
server that only allows read-only actions against it, like backups and
reporting.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Colour Code Rows based on data values</title><link href="https://shanedowling.com/sugarcrm-7-colour-code-rows-based-on-data-values-a238bc54525c.html" rel="alternate"></link><published>2014-07-10T00:00:00+00:00</published><updated>2014-07-10T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-07-10:/sugarcrm-7-colour-code-rows-based-on-data-values-a238bc54525c.html</id><summary type="html">&lt;p&gt;Add this into your recordlist javascript file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;javascript
render_colors : function() {
 console.log('here');
 $("tr[name^='&amp;lt;YOUR_MODULE']").each(function() { //loop over each row
 if($(this).find('div[data-original-title="Out"]').length &amp;gt; 0) { //check value of TD
 $(this).find($('td')).each(function() {
 $(this).css("background-color", "#FFBABA");
 });
 } else if($(this).find('div …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Add this into your recordlist javascript file.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;javascript
render_colors : function() {
 console.log('here');
 $("tr[name^='&amp;lt;YOUR_MODULE']").each(function() { //loop over each row
 if($(this).find('div[data-original-title="Out"]').length &amp;gt; 0) { //check value of TD
 $(this).find($('td')).each(function() {
 $(this).css("background-color", "#FFBABA");
 });
 } else if($(this).find('div[data-original-title="In"]').length &amp;gt; 0) {
 $(this).find($('td')).each(function() {
 $(this).css("background-color", "#C3F8B5");
 });
 } else if($(this).find('div[data-original-title="Withdrawn"]').length &amp;gt; 0) {
 $(this).find($('td')).each(function() {
 $(this).css("background-color", "#FFCF8F");
 });
 } else if($(this).find('div[data-original-title="Reserved"]').length &amp;gt; 0) {
 $(this).find($('td')).each(function() {
 $(this).css("background-color", "#FAFE8E");
 });
 }
 });
 }&lt;/code&gt;&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Your brain on stoicism</title><link href="https://shanedowling.com/your-brain-on-stoicism-783d1cd1995c.html" rel="alternate"></link><published>2014-07-10T00:00:00+00:00</published><updated>2014-07-10T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-07-10:/your-brain-on-stoicism-783d1cd1995c.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__SOaZJ4BwYNtsm0SoctZl7A.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;For the last few months I've been attempting to practice Stoicism and
wanted to share the effects of what regular stoic practice has had. If
you've never heard of Stoicism I'd recommend &lt;a href="https://tim.blog/2009/04/13/stoicism-101-a-practical-guide-for-entrepreneurs/"&gt;fourhourworkweek.com's introduction&lt;/a&gt;, which is very pragmatic. Essentially, what happens after several weeks of watching your emotional reactions …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__SOaZJ4BwYNtsm0SoctZl7A.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;For the last few months I've been attempting to practice Stoicism and
wanted to share the effects of what regular stoic practice has had. If
you've never heard of Stoicism I'd recommend &lt;a href="https://tim.blog/2009/04/13/stoicism-101-a-practical-guide-for-entrepreneurs/"&gt;fourhourworkweek.com's introduction&lt;/a&gt;, which is very pragmatic. Essentially, what happens after several weeks of watching your emotional reactions, evaluating what's in your control
and feeling indifference to what isn't.&lt;/p&gt;
&lt;h3&gt;Certainty&lt;/h3&gt;
&lt;p&gt;The first noticeable effect was stoicism seems to have cultivated a sort
of centred calm feeling within my decision making. A certainty that
wasn't there before, like a rational backbone on which decisions are
made. This is a net effect I've never gotten from say tradional
mindfulness practice(simply as it's a topic not addressed). Say I'm
facing a difficult meeting or presentation and I need to make a decision
on something important I'm going to say. Instead of feeling this vague
anxiety or dread and avoiding the problem, I force myself to make a note
of it. I hold the feeling in my awareness and remind myself of the
preparation I've done. If my decision either way makes me look foolish,
well that's out of my control. The emotional background noise is
suspended and it's reduced decision fatigute by a significant amount.
It's a very useful default technique to go to.&lt;/p&gt;
&lt;h3&gt;The right thing&lt;/h3&gt;
&lt;p&gt;The right decision generally flows out these days too or more
specifically, what feels right at the time. I'm not simply seeking
pleasure, or the accolades of others. Taking the previous example of a
meeting, say I have to make a decision on bringing up an awkward point
that has to be addressed for significant progress gains in a project,
say it's holding work back. It has to be agreed by all stakeholders but
it might be a little embarrassing for me, maybe it's a mistake I've made
or an assumption I've mis-interpreted. When I make the call to bring it
up, there's been a significant reduction in hesitancy, it's the right
thing and if I look foolish, so be it. I'm doing the right thing in the
present moment and that rational backbone is hard to push out when you
face your decisions without emotional attachment.&lt;/p&gt;
&lt;h3&gt;More present&lt;/h3&gt;
&lt;p&gt;Being more present was also one of the side benefits of regular
meditative mindfulness, but one you seemed to obtained through vague
means, meditate more, pay more attention while eating etc. This lax
attitude to mindfulness outside the meditation was always a frustration
for me. The Stoic alternative to this is prosoche. I generally stick to
what I call a the Daily Stoic Routine, which I'll discuss in another
post, but apart of this routine is to tie my intentions to my
over-arching goals. In the morning I align whatever tasks I have to my
over-arching goals. I log often I managed my hourly "Arete" and any
overly destructive or pointless thoughts and actions. Then review
everything in the evening and feed any new lessons into the next day.
Simply by logging and reviewing everything coupled with an hourly
mindfulness practice and adding to this a healthy indifference to what's
out of my control(both the past and the future) I can help but feel
present. It's all that's rationally relevant.&lt;/p&gt;
&lt;h3&gt;It's still a muscle&lt;/h3&gt;
&lt;p&gt;Stoicism requires training. If I slip up and become mindless for a few
days or a weekend almost all of my discipline falls apart. However,
spotting this weakness, showing emotional indifference to your perceived
failings, noting that your perceived failings are just that a perception
then learning your lesson is all part of the process. Stoicism and
prosoche are almost self-healing. I must stress, this isn't some state
you simply walk into. Right now, I don't feel like a Stoic, I feel more
like I'm trying to emulate one. For example when making decisions I
might still see myself wanting accolades from others, but right now I'm
just trying not to let it influence my decision making. At some point I
won't even want accolades anymore, then maybe I could consider myself a
Stoic.
I've tended to read a post or system like this one and and expected this
clear, obvious, immediate effect. Stoicism is not like this, you don't
jump to being a rational decision maker and after being ruled by
emotions for so long. This post is simply a catalog of changes I've
noticed beginning to accrue over time.
The key reason I'm promoting Stoicism is it's resilience and ability to
stick around in your mind. Constant active reminders and an almost
instance forgiveness loop when you've failed make this a powerful
philosophy and a very difficult one to shake.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Manage background tasks with PHP-Resque and Supervisor</title><link href="https://shanedowling.com/manage-background-tasks-with-php-resque-and-supervisor-93d14234b703.html" rel="alternate"></link><published>2014-07-03T00:00:00+00:00</published><updated>2014-07-03T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-07-03:/manage-background-tasks-with-php-resque-and-supervisor-93d14234b703.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__DDS7CsAlPK7wTEEbPFLRAQ.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/chrisboulton/php-resque"&gt;PHP-Resque&lt;/a&gt;, the PHP equivalent to Ruby's really nice background process runner is a great way to execute long running PHP processes. &lt;a href="http://supervisord.org/"&gt;Supervisor&lt;/a&gt; is a python-based process control system, essentially it's a convenient way to manage custom system processes you need to handle. Combining the two to manage long running PHP …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__DDS7CsAlPK7wTEEbPFLRAQ.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/chrisboulton/php-resque"&gt;PHP-Resque&lt;/a&gt;, the PHP equivalent to Ruby's really nice background process runner is a great way to execute long running PHP processes. &lt;a href="http://supervisord.org/"&gt;Supervisor&lt;/a&gt; is a python-based process control system, essentially it's a convenient way to manage custom system processes you need to handle. Combining the two to manage long running PHP jobs makes a lot of sense but it takes a little bit of work to get them talking.&lt;/p&gt;
&lt;p&gt;Once you've gotten PHP-Resque &lt;a href="https://github.com/chrisboulton/php-resque#getting-started"&gt;installed on your project&lt;/a&gt;,
you've &lt;a href="https://github.com/chrisboulton/php-resque#queueing-jobs"&gt;added items to your queue&lt;/a&gt; and &lt;a href="https://github.com/chrisboulton/php-resque#defining-jobs"&gt;written the workers to handle the background tasks&lt;/a&gt;.
You'll need to plug PHP-Resque into supervisor. Here's a sample config
file I used to manage php resque queues within Yii projects but it
should work with anything that's using php-resque.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[program:my_resque]
 directory=/var/www/website
 command=php vendor/chrisboulton/php-resque/bin/resque
 numprocs=2
 environment=QUEUE=&amp;#39;myresquequeue&amp;#39;,BLOCKING=1,COUNT=1,APP_INCLUDE=&amp;#39;models/UsefulClasses.php&amp;#39;
 autostart=true
 autorestart=true
 stopsignal=QUIT
 process_name = %(program_name)s-%(process_num)s
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A few things to note.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Firstly the APP_INCLUDE should include the set of classes you intent to use to handle the worker jobs. Meaning something that has a perform action that does something, as described &lt;a href="https://github.com/chrisboulton/php-resque#defining-jobs"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You'll notice the COUNT=1 argument being set in the resque environment. This is essential, if you fork more than one job using php-resque it'll background both and supervisor will not be able to manage that process(and will continually try to spawn more processes till it gives up). If you wish to have multiple workers, &lt;strong&gt;use the numprocs argument&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And that's it really.&lt;/p&gt;
&lt;p&gt;Happy forking!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Simple API Mocking with Guzzle and Charles</title><link href="https://shanedowling.com/simple-api-mocking-with-guzzle-and-charles-e5fdabe8b9fd.html" rel="alternate"></link><published>2014-06-26T00:00:00+00:00</published><updated>2014-06-26T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-06-26:/simple-api-mocking-with-guzzle-and-charles-e5fdabe8b9fd.html</id><summary type="html">&lt;p&gt;If you've ever had to try unit test code that's dependent on external
services, you'll know the pain of trying to mock-up fake API requests by
hand. It's painful to setup and painful to maintain, this little
tutorial attempts to make the whole process as easy as possible.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Step 1 …&lt;/strong&gt;&lt;/h3&gt;</summary><content type="html">&lt;p&gt;If you've ever had to try unit test code that's dependent on external
services, you'll know the pain of trying to mock-up fake API requests by
hand. It's painful to setup and painful to maintain, this little
tutorial attempts to make the whole process as easy as possible.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Capturing a live set of API requests.&lt;/h3&gt;
&lt;p&gt;So firstly download and install &lt;a href="http://www.charlesproxy.com/"&gt;Charles Web Proxy&lt;/a&gt;. Here's a good description of what Charles can do from their site.&lt;/p&gt;
&lt;p&gt;Charles is an HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet. This includes requests, responses and the HTTP headers (which contain the cookies and caching information).&lt;/p&gt;
&lt;p&gt;We're going to use Charles to capture an initial set of tests, then save
the RAW responses as files that will then be used to supply our mock
data to guzzle. So once you got Charles running with a proxy running on
port 8888, run an api call like so.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;require &amp;#39;vendor/autoload.php&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; use GuzzleHttp\\Client;&lt;/span&gt;
&lt;span class="x"&gt; use GuzzleHttp\\Subscriber\\Mock;&lt;/span&gt;

&lt;span class="x"&gt;$client = new Client([&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;base_url&amp;#39; =&amp;gt; [&amp;#39;https://api.github.com/repos/guzzle/guzzle/commits?per_page=5&amp;#39;, []],&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;defaults&amp;#39; =&amp;gt; [&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;proxy&amp;#39; =&amp;gt; &amp;#39;http://localhost:8888&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt; ]&lt;/span&gt;
&lt;span class="x"&gt; ]);&lt;/span&gt;
&lt;span class="x"&gt; $req = $client-&amp;gt;get();&lt;/span&gt;

&lt;span class="x"&gt;echo $req-&amp;gt;getBody();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When you get a response from this call, view it in Charles under Raw and&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__V4RK2MMCaBvV__euQFzoZvw.png"&gt;&lt;/p&gt;
&lt;p&gt;Save this text(including the http headers) as a new file. This is going
to be your new mock response that's going to override Guzzle's regular
response.&lt;/p&gt;
&lt;h3&gt;Step 2: Injecting Mock Objects into Guzzle.&lt;/h3&gt;
&lt;p&gt;This is some sample code to do the injection.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;require &amp;#39;vendor/autoload.php&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; use GuzzleHttp\\Client;&lt;/span&gt;
&lt;span class="x"&gt; use GuzzleHttp\\Subscriber\\Mock;&lt;/span&gt;

&lt;span class="x"&gt;$client = new Client();&lt;/span&gt;

&lt;span class="x"&gt;$mock = new Mock();&lt;/span&gt;
&lt;span class="x"&gt; $mock-&amp;gt;addResponse(__DIR__.&amp;#39;/mockresponses/your_raw_file&amp;#39;);&lt;/span&gt;

&lt;span class="x"&gt;$client-&amp;gt;getEmitter()-&amp;gt;attach($mock); // This is the key line, attaching the mock file response to your client.&lt;/span&gt;
&lt;span class="x"&gt; $response = $client-&amp;gt;get();&lt;/span&gt;
&lt;span class="x"&gt; echo $response-&amp;gt;getBody();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hopefully if you're using some sort of dependency injection to supply
the guzzle library to your client code, you can easily
over-ride the client calls with your mock responses by attaching the
emitter, then make stable assertions about the state of your client. All
of this without any reliance on external services.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM — Permissions Script</title><link href="https://shanedowling.com/sugarcrm-permissions-script-6b7031eb0eef.html" rel="alternate"></link><published>2014-06-21T00:00:00+00:00</published><updated>2014-06-21T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-06-21:/sugarcrm-permissions-script-6b7031eb0eef.html</id><summary type="html">&lt;p&gt;I use &lt;a href="http://www.saltstack.com/"&gt;salt&lt;/a&gt; quite extensively to deploy SugarCRM installs and I wanted a scriptable way to setup the correct permissions for Sugar running on a linux box. This script is based on the &lt;a href="http://support.sugarcrm.com/04_Find_Answers/02KB/02Administration/100Install/Required_File_System_Permissions_on_Linux/"&gt;Sugar documentation&lt;/a&gt; and this handy post &lt;a href="http://developer.sugarcrm.com/2012/07/19/a-newbies-guide-to-getting-your-sugarcrm-instances-permissions-right/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Simply fill in your apache user details and the path …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I use &lt;a href="http://www.saltstack.com/"&gt;salt&lt;/a&gt; quite extensively to deploy SugarCRM installs and I wanted a scriptable way to setup the correct permissions for Sugar running on a linux box. This script is based on the &lt;a href="http://support.sugarcrm.com/04_Find_Answers/02KB/02Administration/100Install/Required_File_System_Permissions_on_Linux/"&gt;Sugar documentation&lt;/a&gt; and this handy post &lt;a href="http://developer.sugarcrm.com/2012/07/19/a-newbies-guide-to-getting-your-sugarcrm-instances-permissions-right/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Simply fill in your apache user details and the path to the Sugar
install and you're away.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;APACHEUSER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;www-data:www-data&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;SUGARPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/var/www/sugarcrm&amp;#39;&lt;/span&gt;

find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/ -type d -exec chmod &lt;span class="m"&gt;755&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/ -type f -exec chmod &lt;span class="m"&gt;644&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/ -name *.js -exec chmod &lt;span class="m"&gt;755&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

chmod &lt;span class="m"&gt;664&lt;/span&gt; &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/config.php
chmod &lt;span class="m"&gt;664&lt;/span&gt; &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/config_override.php
chmod &lt;span class="m"&gt;664&lt;/span&gt; &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/sugarcrm.log

find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/cache -type d -exec chmod &lt;span class="m"&gt;775&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/custom -type d -exec chmod &lt;span class="m"&gt;775&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/data -type d -exec chmod &lt;span class="m"&gt;775&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/modules -type d -exec chmod &lt;span class="m"&gt;775&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/include -type d -exec chmod &lt;span class="m"&gt;775&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/upload -type d -exec chmod &lt;span class="m"&gt;775&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/cache -type f -exec chmod &lt;span class="m"&gt;664&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/custom -type f -exec chmod &lt;span class="m"&gt;664&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/data -type f -exec chmod &lt;span class="m"&gt;664&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/modules -type f -exec chmod &lt;span class="m"&gt;664&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/include -type f -exec chmod &lt;span class="m"&gt;664&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
find -P &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;/upload -type f -exec chmod &lt;span class="m"&gt;664&lt;/span&gt; &lt;span class="o"&gt;{}&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

chown -R &lt;span class="nv"&gt;$APACHEUSER&lt;/span&gt; &lt;span class="nv"&gt;$SUGARPATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the salt config to get this running.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;sugar_permissions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

  &lt;span class="nt"&gt;cmd.script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;salt://deploy/dev/sugar/permissions.sh&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;root&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;group&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;root&lt;/span&gt;
    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/bin/bash&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you see any issues with the script/salt config please let me know.&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Quick Salt Minion Setup</title><link href="https://shanedowling.com/quick-salt-minion-setup-354516c0ff63.html" rel="alternate"></link><published>2014-06-12T00:00:00+00:00</published><updated>2014-06-12T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-06-12:/quick-salt-minion-setup-354516c0ff63.html</id><summary type="html">&lt;p&gt;I find myself setting up salt minions a LOT. So I figured I'd write down
the steps in this concise format.&lt;/p&gt;
&lt;h3&gt;On the minion&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo add-apt-repository ppa:saltstack/salt
sudo apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install salt-minion
sudo &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; salt&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/hosts //Or whatever the salt master is
sudo salt-call -l …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I find myself setting up salt minions a LOT. So I figured I'd write down
the steps in this concise format.&lt;/p&gt;
&lt;h3&gt;On the minion&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo add-apt-repository ppa:saltstack/salt
sudo apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install salt-minion
sudo &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; salt&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /etc/hosts //Or whatever the salt master is
sudo salt-call -l debug state.highstate
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Then on the master&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo salt-key -L
sudo salt-key -a
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Then back on the minion&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;sudo salt-call -l debug state.highstate&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It also shows just how fast it is to get a box up and running with salt!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Hiding subpanels based on specific criteria</title><link href="https://shanedowling.com/sugarcrm-7-hiding-subpanels-based-on-specific-criteria-eee6aacb95e1.html" rel="alternate"></link><published>2014-06-12T00:00:00+00:00</published><updated>2014-06-12T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-06-12:/sugarcrm-7-hiding-subpanels-based-on-specific-criteria-eee6aacb95e1.html</id><summary type="html">&lt;p&gt;The new Sugar subpanels look great but they do take up quite a lot
space, without any ability to remove Subpanels via studio I've had to
come up with a few ways to hide them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: Original Props go to Robin Larsson who wrote the&lt;/strong&gt; &lt;a href="https://community.sugarcrm.com/sugarcrm/topics/dynamically_hiding_showing_subpanels_based_on_record_values_in_sugar_7"&gt;&lt;strong&gt;original&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;on the Sugar Community …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;The new Sugar subpanels look great but they do take up quite a lot
space, without any ability to remove Subpanels via studio I've had to
come up with a few ways to hide them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: Original Props go to Robin Larsson who wrote the&lt;/strong&gt; &lt;a href="https://community.sugarcrm.com/sugarcrm/topics/dynamically_hiding_showing_subpanels_based_on_record_values_in_sugar_7"&gt;&lt;strong&gt;original&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;on the Sugar Community.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;What Robin's code does is essentially hide fields based on a specific
value within a record, I didn't really need that ability much so I've
altered his code based on use cases I've come across.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The related type, meaning hide all subpanels of say type Account or Contact&lt;/li&gt;
&lt;li&gt;The relationship name, so if you want to hide a related module by a specific relationship. For example accounts_contacts&lt;/li&gt;
&lt;li&gt;If a specific relationship has no related records. So say if an account has no contacts, hide that subpanel.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Place this code in
custom/modules/&lt;YOUR_MODULE&gt;/clients/base/layouts/subpanels/subpanels.js and
simply populate the hide_variables with whatever you wish to hide!
```javascript
({&lt;/p&gt;
&lt;p&gt;},
 /*&lt;em&gt;
 * Show the subpanel for the given linkName and hide all others
 * @param {String} linkName name of subpanel link
 &lt;/em&gt;/
 var self = this,
 //this.layout is the filter layout which subpanels is child of; we
 //use it here as it has a last_state key in its meta
 cacheKey = app.user.lastState.key('subpanels-last', this.layout);&lt;/p&gt;
&lt;p&gt;// wait for the model to load
 self.model.on("change", function () {&lt;/p&gt;
&lt;p&gt;if (linkName) {
 app.user.lastState.set(cacheKey, linkName);
 }&lt;/p&gt;
&lt;p&gt;_.each(self._components, function (component) {
 var hide_subpanel = self._checkIfHideSubpanel(component.module.toLowerCase(), component.collection);&lt;/p&gt;
&lt;p&gt;var link = component.context.get('link');
 if (!hide_subpanel &amp;amp;&amp;amp;
 ( !linkName || linkName === link )) {
 component.context.set("hidden", false);
 component.show();
 }
 else {
 component.context.set("hidden", true);
 component.hide();
 }
 });
 });
 },&lt;/p&gt;
&lt;p&gt;/*&lt;em&gt;
 * Check if the subpanel is on the hiding list and if the watched field has a specific value.
 * @param {Boolean} subpanel name of the module for the subpanel
 &lt;/em&gt;/
 var relationship = field_collection.link.name;
 var self = this;
 var hide_subpanel = false;
 if (( jQuery.inArray(type, self.hide_subpanel_by_type) !== -1 )) {
 hide_subpanel = true;
 }
 if (( jQuery.inArray(relationship, self.hide_subpanel_by_empty) !== -1 )
 &amp;amp;&amp;amp; (field_collection.models.length === 0)) {
 hide_subpanel = true;
 }
 if (( jQuery.inArray(relationship, self.hide_subpanel_by_relationship) !== -1 )) {
 hide_subpanel = true;
 }&lt;/p&gt;
&lt;p&gt;return hide_subpanel;
 },
 })
 ```&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Super simple folder backup one-liner</title><link href="https://shanedowling.com/super-simple-folder-backup-one-liner-de43a969cb0d.html" rel="alternate"></link><published>2014-06-06T00:00:00+00:00</published><updated>2014-06-06T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-06-06:/super-simple-folder-backup-one-liner-de43a969cb0d.html</id><summary type="html">&lt;p&gt;I needed a simple cron job, that just took backups of my project
folders, should the worst happen to my laptop. Google brought up nothing
obvious, so I figured I'd share it here.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar zcvf /tmp/snap.tgz ~/Projects &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rsync /tmp/snap.tgz user@remotebox:/home/backups/snap_&lt;span class="sb"&gt;`&lt;/span&gt;date +%F …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I needed a simple cron job, that just took backups of my project
folders, should the worst happen to my laptop. Google brought up nothing
obvious, so I figured I'd share it here.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar zcvf /tmp/snap.tgz ~/Projects &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rsync /tmp/snap.tgz user@remotebox:/home/backups/snap_&lt;span class="sb"&gt;`&lt;/span&gt;date +%F_%T&lt;span class="sb"&gt;`&lt;/span&gt;.tgz &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm /tmp/snap.tgz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Okay, I'll admit it's a bit of a long one-liner.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Adding a custom column to a list</title><link href="https://shanedowling.com/sugarcrm-7-adding-a-custom-column-to-a-list-1370ce1fbdb2.html" rel="alternate"></link><published>2014-05-22T00:00:00+00:00</published><updated>2014-05-22T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-05-22:/sugarcrm-7-adding-a-custom-column-to-a-list-1370ce1fbdb2.html</id><summary type="html">&lt;p&gt;This is the SugarCRM 7 equivalent to this post &lt;a href="https://shanedowling.com/sugarcrm-add-a-code-driven-column-to-a-list-4e9f4eb672b1"&gt;here&lt;/a&gt;, because Sugar has dropped the process record logic hook, we need to come up with a new solution.&lt;/p&gt;
&lt;p&gt;Here's how you can add a new column to a list view, I have to admit this
is one of the really …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the SugarCRM 7 equivalent to this post &lt;a href="https://shanedowling.com/sugarcrm-add-a-code-driven-column-to-a-list-4e9f4eb672b1"&gt;here&lt;/a&gt;, because Sugar has dropped the process record logic hook, we need to come up with a new solution.&lt;/p&gt;
&lt;p&gt;Here's how you can add a new column to a list view, I have to admit this
is one of the really powerful additions to SugarCRM 7, no more crazy
config files or hacks to try cheat your data in. By leveraging
javascript events with a decent restful API you can come up with some
really nice solutions, with lots of hooks to do custom things. Once you
see the difference in implementation you'll see why I'm so pleased.&lt;/p&gt;
&lt;p&gt;So anyway, back to the customisations.&lt;/p&gt;
&lt;h3&gt;1. Add the placeholder column&lt;/h3&gt;
&lt;p&gt;You need to do this by adding a new column into your custom modules
list.php file, which is generally located at
custom/modules/YOUR_CUSTOM_MODULE/clients/base/views/list/list.php,
add your new column in under&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$viewdefs[$modulename][&amp;#39;base&amp;#39;][&amp;#39;view&amp;#39;][&amp;#39;list&amp;#39;][&amp;#39;panels&amp;#39;][0][&amp;#39;fields&amp;#39;]&lt;/span&gt;

&lt;span class="x"&gt;array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;custom_fieldname&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_CUSTOM_RECORD&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;enabled&amp;#39; =&amp;gt; true,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;width&amp;#39; =&amp;gt; &amp;#39;10%&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;default&amp;#39; =&amp;gt; true,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; ```&lt;/span&gt;

&lt;span class="x"&gt;### 2. Add the JS action&lt;/span&gt;

&lt;span class="x"&gt;This should go into&lt;/span&gt;
&lt;span class="x"&gt;custom/modules/YOUR_CUSTOM_MODULE/clients/base/views/recordlist/recordlist.js&lt;/span&gt;
&lt;span class="x"&gt;```javascript&lt;/span&gt;
&lt;span class="x"&gt;({&lt;/span&gt;

&lt;span class="x"&gt;this.before(&amp;#39;render&amp;#39;, function() {&lt;/span&gt;
&lt;span class="x"&gt; return this.beforeRenderCallback()&lt;/span&gt;
&lt;span class="x"&gt; }, this);&lt;/span&gt;
&lt;span class="x"&gt; this.on(&amp;#39;render&amp;#39;, function() {&lt;/span&gt;
&lt;span class="x"&gt; this.renderCallback();&lt;/span&gt;
&lt;span class="x"&gt; if (this.previewVisible) {&lt;/span&gt;
&lt;span class="x"&gt; this.decorateRow(this.previewModel);&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;span class="x"&gt; }, this);&lt;/span&gt;
&lt;span class="x"&gt; this._super(&amp;quot;bindDataChange&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt; },&lt;/span&gt;
&lt;span class="x"&gt; /**&lt;/span&gt;
&lt;span class="x"&gt; * Callback for before on(&amp;#39;render&amp;#39;) event&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; this.collection.each(function(model) {&lt;/span&gt;
&lt;span class="x"&gt; app.api.call(&amp;#39;GET&amp;#39;, app.api.buildURL(&amp;#39;YOUR_CUSTOM_MODULE/YOUR_CUSTOM_FUNCTION/&amp;#39;+model.id), null, {&lt;/span&gt;
&lt;span class="x"&gt; model.set({&lt;/span&gt;
&lt;span class="x"&gt; your_custom_field : data&lt;/span&gt;
&lt;span class="x"&gt; });&lt;/span&gt;
&lt;span class="x"&gt; }, this)&lt;/span&gt;
&lt;span class="x"&gt; });&lt;/span&gt;
&lt;span class="x"&gt; }, this);&lt;/span&gt;
&lt;span class="x"&gt; },&lt;/span&gt;
&lt;span class="x"&gt; })&lt;/span&gt;
&lt;span class="x"&gt; ```&lt;/span&gt;

&lt;span class="x"&gt;### 3. Add the API end point&lt;/span&gt;

&lt;span class="x"&gt;The documentation here is really straightforward but as an example for&lt;/span&gt;
&lt;span class="x"&gt;completeness this should return a json response with the data needed.&lt;/span&gt;

&lt;span class="x"&gt;This code would go into&lt;/span&gt;
&lt;span class="x"&gt;custom/modules/YOUR_CUSTOM_MODULE/clients/base/api/YOUR_CUSTOM_FUNCTION.php&lt;/span&gt;

&lt;span class="x"&gt;```php&lt;/span&gt;
&lt;span class="x"&gt;if(!defined(&amp;#39;sugarEntry&amp;#39;) || !sugarEntry) die(&amp;#39;Not A Valid Entry Point&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; require_once(&amp;#39;custom/modules/YOUR_CUSTOM_MODULE/Custom_Bean.php&amp;#39;);&lt;/span&gt;

&lt;span class="x"&gt;class YOUR_CUSTOM_FUNCTION extends SugarApi&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; public function registerApiRest()&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; return array(&lt;/span&gt;
&lt;span class="x"&gt; //GET&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;MyGetEndpoint&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; //request type&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;reqType&amp;#39; =&amp;gt; &amp;#39;GET&amp;#39;,&lt;/span&gt;

&lt;span class="x"&gt;//endpoint path&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;path&amp;#39; =&amp;gt; array(&amp;#39;YOUR_CUSTOM_MODULE&amp;#39;, &amp;#39;YOUR_CUSTOM_FUNCTION&amp;#39;, &amp;#39;?&amp;#39;),&lt;/span&gt;

&lt;span class="x"&gt;//endpoint variables&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;pathVars&amp;#39; =&amp;gt; array(&amp;#39;&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;data&amp;#39;),&lt;/span&gt;

&lt;span class="x"&gt;//method to call&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;method&amp;#39; =&amp;gt; &amp;#39;MyGetMethod&amp;#39;,&lt;/span&gt;

&lt;span class="x"&gt;//short help string to be displayed in the help documentation&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;shortHelp&amp;#39; =&amp;gt; &amp;#39;Some help text&amp;#39;,&lt;/span&gt;

&lt;span class="x"&gt;//long help to be displayed in the help documentation&lt;/span&gt;
&lt;span class="x"&gt; //&amp;#39;longHelp&amp;#39; =&amp;gt; &amp;#39;&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; );&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Method to be used for my MyEndpoint/GetExample endpoint&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public function MyGetMethod($api, $args)&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; $id = $args;&lt;/span&gt;

&lt;span class="x"&gt;$custom_bean = new Custom_Bean();&lt;/span&gt;
&lt;span class="x"&gt; $custom_bean-&amp;gt;retrieve($id);&lt;/span&gt;

&lt;span class="x"&gt;return $custom_bean-&amp;gt;getCustomColumnData();&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4. Add to column to the dictionary&lt;/h3&gt;
&lt;p&gt;custom/Extension/modules/YOUR_CUSTOM_MODULE/Ext/Vardefs/sugarfield_custom_fieldname.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$dictionary[&amp;#39;YOUR_CUSTOM_MODULE&amp;#39;][&amp;#39;fields&amp;#39;][&amp;#39;custom_fieldname&amp;#39;][&amp;#39;labelValue&amp;#39;]=&amp;#39;Custom Row &amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; $dictionary[&amp;#39;YOUR_CUSTOM_MODULE&amp;#39;][&amp;#39;fields&amp;#39;][&amp;#39;custom_fieldname&amp;#39;][&amp;#39;full_text_search&amp;#39;]=array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;boost&amp;#39; =&amp;gt; &amp;#39;0&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;enabled&amp;#39; =&amp;gt; false,&lt;/span&gt;
&lt;span class="x"&gt; );&lt;/span&gt;
&lt;span class="x"&gt; $dictionary[&amp;#39;YOUR_CUSTOM_MODULE&amp;#39;][&amp;#39;fields&amp;#39;][&amp;#39;custom_fieldname&amp;#39;][&amp;#39;enforced&amp;#39;]=&amp;#39;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; $dictionary[&amp;#39;YOUR_CUSTOM_MODULE&amp;#39;][&amp;#39;fields&amp;#39;][&amp;#39;custom_fieldname&amp;#39;][&amp;#39;dependency&amp;#39;]=&amp;#39;&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; ?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On quick repair/rebuild this will get merged into
custom/modules/YOUR_CUSTOM_MODULES/Ext/Vardefs/vardefs.ext.php&lt;/p&gt;
&lt;h3&gt;5. No need to even guess, do a quick repair/rebuild.&lt;/h3&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM 7 — Adding an action to the listview</title><link href="https://shanedowling.com/sugarcrm-7-adding-an-action-to-the-listview-436f18c039e6.html" rel="alternate"></link><published>2014-05-18T00:00:00+00:00</published><updated>2014-05-18T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-05-18:/sugarcrm-7-adding-an-action-to-the-listview-436f18c039e6.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__O0TIZQumvouoJ6ZCn8__s3g.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;There doesn't appear to be a documented way to do this but in SugarCRM 7
this is how I've added actions to the listview. For this example it's
showing how to add a button to an animal module, which adds the animal
to a related circus event.&lt;/p&gt;
&lt;h3&gt;1. Adding thebutton …&lt;/h3&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__O0TIZQumvouoJ6ZCn8__s3g.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;There doesn't appear to be a documented way to do this but in SugarCRM 7
this is how I've added actions to the listview. For this example it's
showing how to add a button to an animal module, which adds the animal
to a related circus event.&lt;/p&gt;
&lt;h3&gt;1. Adding thebutton&lt;/h3&gt;
&lt;p&gt;This first thing you need to do is copy the global recordlist.php file
into your module and create a custom recordlist.php which overrides the
existing one. You can copy the base one SugarCRM has or simply take this
file below and alter the add_to_circus button. Note the
addtocirus:fire action, we will create javascript code that is called
when this event is fired. This code should go into
custom/module/animals/clients/base/views/recordlist/recordlist.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;if (!defined(&amp;#39;sugarEntry&amp;#39;) || !sugarEntry) {&lt;/span&gt;
&lt;span class="x"&gt; die(&amp;#39;Not A Valid Entry Point&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/*********************************************************************************&lt;/span&gt;
&lt;span class="x"&gt; * By installing or using this file, you are confirming on behalf of the entity&lt;/span&gt;
&lt;span class="x"&gt; * subscribed to the SugarCRM Inc. product (&amp;quot;Company&amp;quot;) that Company is bound by&lt;/span&gt;
&lt;span class="x"&gt; * [http://www.sugarcrm.com/master-subscription-agreement](http://www.sugarcrm.com/master-subscription-agreement)&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * If Company is not bound by the MSA, then by installing or using this file&lt;/span&gt;
&lt;span class="x"&gt; * you are agreeing unconditionally that Company will be bound by the MSA and&lt;/span&gt;
&lt;span class="x"&gt; * certifying that you have authority to bind Company accordingly.&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * Copyright © 2004–2014 SugarCRM Inc. All rights reserved.&lt;/span&gt;
&lt;span class="x"&gt; ********************************************************************************/&lt;/span&gt;

&lt;span class="x"&gt;$viewdefs[&amp;#39;CSTM_ANIMALS&amp;#39;][&amp;#39;base&amp;#39;][&amp;#39;view&amp;#39;][&amp;#39;recordlist&amp;#39;] = array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;selection&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;multi&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;actions&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;edit_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_MASS_UPDATE&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;primary&amp;#39; =&amp;gt; true,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;events&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;click&amp;#39; =&amp;gt; &amp;#39;list:massupdate:fire&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;massupdate&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;merge_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_MERGE&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;primary&amp;#39; =&amp;gt; true,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;events&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;click&amp;#39; =&amp;gt; &amp;#39;list:mergeduplicates:fire&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;edit&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;calc_field_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_UPDATE_CALC_FIELDS&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;events&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;click&amp;#39; =&amp;gt; &amp;#39;list:updatecalcfields:fire&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;massupdate&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;addtolist_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_ADD_TO_PROSPECT_LIST_BUTTON_LABEL&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;primary&amp;#39; =&amp;gt; true,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;events&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;click&amp;#39; =&amp;gt; &amp;#39;list:massaddtolist:fire&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_module&amp;#39; =&amp;gt; &amp;#39;ProspectLists&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;edit&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;delete_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_DELETE&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;delete&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;primary&amp;#39; =&amp;gt; true,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;events&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;click&amp;#39; =&amp;gt; &amp;#39;list:massdelete:fire&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;export_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_EXPORT&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;export&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;primary&amp;#39; =&amp;gt; true,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;events&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;click&amp;#39; =&amp;gt; &amp;#39;list:massexport:fire&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;add_to_circus_button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;button&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;LBL_ADD_TO_FAIR&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;acl_action&amp;#39; =&amp;gt; &amp;#39;edit&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;primary&amp;#39; =&amp;gt; true,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;events&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;click&amp;#39; =&amp;gt; &amp;#39;list:addtocircus:fire&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. Adding theaction&lt;/h3&gt;
&lt;p&gt;This is an example of the JS code you could call when the event has
custom/modules/animals/clients/base/views/recordlist/recordlist.js. On
initialise we simply set a new context.on that calls your js modules
function.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;

&lt;span class="c1"&gt;//add listener for custom button&lt;/span&gt;
 &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;list:addtocircus:fire&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add_to_circus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="nx"&gt;add_to_circus&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;idCSV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;selector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CSTM_ANIMALS_&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="c1"&gt;// I&amp;#39;m sure there&amp;#39;s a better way to do this, but not documented or found anywhere.&lt;/span&gt;
 &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;input[type=checkbox]:checked&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;closest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[name^=&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
 &lt;span class="nx"&gt;idCSV&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;substring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errorResponse&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bad-add-to-circus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now there's a few caveats with this code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I couldn't find a documented way to get the selected backbone items from SugarCRMs listview collection. So I had to write a jQuery selector, simply replace CSTM_ANIMAL with your module name and the selector should get you the list of ids that have been selected by the user, package them to a CSV then pass them to the ajax call.&lt;/li&gt;
&lt;li&gt;The keen eyed observers might have noticed I'm using the old way of directly calling a controller action, this is because this code was implemented to support a migration project from SugarCRM 6 -&amp;gt; SugarCRM 7 and it was faster than re-implementing the PHP code. However if starting anew, I would strongly recommend instead adding a new rest endpoint to your module and calling that via AJAX. There's some great documentation &lt;a href="http://developer.sugarcrm.com/2014/03/10/sugarcrm-cookbook-adding-a-rest-endpoint-2/"&gt;here&lt;/a&gt; on that topic, which should help show you how to implement the code to add the animal to a circus. I'll do another post on this in the future.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3. Quick Repair and Rebuilt(as always)&lt;/h3&gt;
&lt;p&gt;Any questions feel free to ask!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Find My Run — My first iPhone app</title><link href="https://shanedowling.com/find-my-run-my-first-iphone-app-4e1ec62b32b3.html" rel="alternate"></link><published>2014-05-17T00:00:00+00:00</published><updated>2014-05-17T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-05-17:/find-my-run-my-first-iphone-app-4e1ec62b32b3.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__x40lnN3JZF6V7gOMbo3Imw.png"&gt;&lt;/p&gt;
&lt;p&gt;It's a pretty basic app that lists the ten nearest running events in
your area. There was a few new pieces of tech(for me) involved. The app
was built with &lt;a href="http://www.appcelerator.com/platform/alloy/"&gt;Appcelerator's Alloy framework&lt;/a&gt;, which I must
admit I quite like for rapid development of cross platform mobile
apps(hopefully …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__x40lnN3JZF6V7gOMbo3Imw.png"&gt;&lt;/p&gt;
&lt;p&gt;It's a pretty basic app that lists the ten nearest running events in
your area. There was a few new pieces of tech(for me) involved. The app
was built with &lt;a href="http://www.appcelerator.com/platform/alloy/"&gt;Appcelerator's Alloy framework&lt;/a&gt;, which I must
admit I quite like for rapid development of cross platform mobile
apps(hopefully an Android version shouldn't be too far behind).&lt;/p&gt;
&lt;p&gt;The API that drives it was build with Python, Flask, MongoDB and hosted
with Heroku, also great tech for getting something out quickly. I'm
hoping to improve the app as time goes on, but I have another idea I'm
due to implement first…&lt;/p&gt;
&lt;p&gt;Oh you can find it &lt;a href="https://itunes.apple.com/us/app/find-my-run/id870132034?ls=1&amp;amp;mt=8"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Owning Your Data — Replacing Dropbox</title><link href="https://shanedowling.com/owning-your-data-replacing-dropbox-fdaa13df41ad.html" rel="alternate"></link><published>2014-04-24T00:00:00+00:00</published><updated>2014-04-24T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-04-24:/owning-your-data-replacing-dropbox-fdaa13df41ad.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__rUmmXptV__9zX6WkBjTLJEw.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Dropbox as late has come under a fair bit of fire. They've added DMCA
takedowns to personal folders, scan/open personal files and have appointed Condelleza Rice as a member of their board of directors. Which has kicked off quite a bit of backlash including a #dropdropbox tag that's gaining …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__rUmmXptV__9zX6WkBjTLJEw.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Dropbox as late has come under a fair bit of fire. They've added DMCA
takedowns to personal folders, scan/open personal files and have appointed Condelleza Rice as a member of their board of directors. Which has kicked off quite a bit of backlash including a #dropdropbox tag that's gaining popularity.&lt;/p&gt;
&lt;p&gt;Seems like an ideal time to start owning your data, dropping Dropbox and
moving to your own hosted alternative. What I'm suggesting is up for a
bit of debate, instead of using a hosted service like Dropbox, I use a
tool called BitTorrent Sync to sync my documents for my laptops/tablets
to my own personal server that acts as my file storage. This means that
no files are transmitted to server I don't have full root control of.
There is, however a downside. Bit-Torrent Sync isn't open source, which is why it won't be recommended on Prism Break and understandably so. The team are looking at open sourcing it, but that could be some time before it's decided.&lt;/p&gt;
&lt;p&gt;However, personally I'm happy to take the risk they're not hosting your data and the setup is as simple as it gets. Bear in mind there's also open source alternatives that could do the job quite easily, I just haven't had time to test them.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/1__cBAbOvAvxh9orhMKkbYMgg.jpeg"&gt;&lt;/p&gt;
&lt;h3&gt;Requirements&lt;/h3&gt;
&lt;p&gt;Just a server really. You can use &lt;a href="https://shanedowling.com/owning-your-data-initial-server-setup-afa33394b94"&gt;this guide&lt;/a&gt; if you wish but any server should do, you don't necessarily even need a server. Just two devices to sync across. If you had a work/home laptop you could create a synced folder across both.&lt;/p&gt;
&lt;h3&gt;Setup&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;It's so simple really, just download btsync to your server here and run ./btsync.&lt;/li&gt;
&lt;li&gt;You should then be able to access it via your web browser via &lt;a href="http://your%5C_servers%5C_ip:8888"&gt;http://your_servers_ip:8888&lt;/a&gt; and you're free to configure as you wish. Add an empty folder on your server to act as the sync location.&lt;/li&gt;
&lt;li&gt;Then simply download the client on your desktops/tablets and have it sync the newly created sync folder on your server.&lt;/li&gt;
&lt;li&gt;That's it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If I find the time, I'll take a test drive with the open source
alternative and update this accordingly but BitTorrent Sync seems safe
enough, if they go down your data is still on your own server and not on
a service that feels as dodgy as Dropbox does right now.&lt;/p&gt;
&lt;h3&gt;Note&lt;/h3&gt;
&lt;p&gt;I did try owncloud another alternative quite some time ago and found the sync process to be very unreliable and slow. The clients also left a lot of be desired. They didn't run a daemon on the server and your clients merely pushed files to a bunch of PHP scripts, which might explain the unreliability. However things may have improved since then.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM — Search for records related to the current record</title><link href="https://shanedowling.com/sugarcrm-search-for-records-related-to-the-current-record-4c0086341c14.html" rel="alternate"></link><published>2014-04-20T00:00:00+00:00</published><updated>2014-04-20T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-04-20:/sugarcrm-search-for-records-related-to-the-current-record-4c0086341c14.html</id><summary type="html">&lt;p&gt;Say you have two modules in Sugar: Animals and Ringmasters and they aren't directly related via a standard relationship but they are related through some convoluted means. Now, imagine if you want to override the SugarCRM search to allow you to search for all Animals indirectly related to a Ringmaster …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Say you have two modules in Sugar: Animals and Ringmasters and they aren't directly related via a standard relationship but they are related through some convoluted means. Now, imagine if you want to override the SugarCRM search to allow you to search for all Animals indirectly related to a Ringmaster, I've written about how to do something &lt;a href="http://shanedowling.com/sugarcrm-searches-data-indirectly-related-modules/"&gt;similar recently&lt;/a&gt;. Conversely, you want to search for all Animals related to a Ringmaster you're currently viewing. It's not a link that exists in Sugar so you can directly see a Dashlet and you don't want to build anything from scratch so that's going to take effort.&lt;/p&gt;
&lt;p&gt;What you could do, is create a link on the action drop-down while viewing the Ringmaster that linked you to a search that would call animals supplying the Ringmaster's id as the argument.&lt;/p&gt;
&lt;p&gt;This is based on the previous tutorial I've shared.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Firstly add a new logic hook in custom/modules/RingMasterModule/logic_hooks.php&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;php
$hook_array['after_ui_frame'][] = Array(2, 'Custom Ring Master Buttons', 'custom/modules/RingMasterModule/CustomButtons.php
 ','RingMasterButtons', 'add');&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Then add the custom buttons class in custom/modules/RingMasterModule/CustomButtons.php&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;```php
class RingMasterButtons {
 function add($bean)
 {
 echo $bean;
 $ringMasterID = $_GET['record'];
 if(!$ringMasterID) return;
 // Based on what action we're in, add some buttons!
 switch ($GLOBALS['app']-&amp;gt;controller-&amp;gt;action)
 {
 case "DetailView": // Add buttons to Detail View&lt;/p&gt;
&lt;p&gt;$button_code = &amp;lt;&amp;lt;&lt;/p&gt;
&lt;p&gt;EOQ;
 echo $button_code;
 break;
 }
 }
 }
 ```&lt;/p&gt;
&lt;p&gt;Quick Repair and Rebuild for good measure. This should add a hidden form
that will be called when the user clicks the Ring Master Animals.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM — Searches with data from indirectly related modules</title><link href="https://shanedowling.com/sugarcrm-searches-with-data-from-indirectly-related-modules-ec204005f7b3.html" rel="alternate"></link><published>2014-04-17T00:00:00+00:00</published><updated>2014-04-17T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-04-17:/sugarcrm-searches-with-data-from-indirectly-related-modules-ec204005f7b3.html</id><summary type="html">&lt;p&gt;Building modules in SugarCRM can cause you to create a boatload of
unnecessary relationships, simply because it's convenient to do so.
Maybe you'd have a relationship where A relates to B and B to C but
you'd like to search for all A module records that relate to C. One …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Building modules in SugarCRM can cause you to create a boatload of
unnecessary relationships, simply because it's convenient to do so.
Maybe you'd have a relationship where A relates to B and B to C but
you'd like to search for all A module records that relate to C. One
option is to maybe related A to C and maintain the relationships by
using hooks on save to preserve the A-C relationship. That way you could
leverage Sugar relate fields and indirect searching, but that can be a
messy choice that adds a lot of complexity if overused.&lt;/p&gt;
&lt;p&gt;The alternative is to keep the relationship structure as it is and add a
new field to the search and build a custom subselect statement. For this
example we're adding a Drop-Down to Accounts to allow a user to search
which Accounts are indirectly related to Performers via Events. Say we
wish to present a drop-down on Accounts of all performers and if you
search, it will return all Accounts attached to the specified Performer.&lt;/p&gt;
&lt;h3&gt;Get the data for the drop-down&lt;/h3&gt;
&lt;p&gt;In custom/modules/Accounts/getCustomDropDown.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;require_once(&amp;quot;modules/Performers/Performers.php&amp;quot;);&lt;/span&gt;

&lt;span class="x"&gt;function galleryPerformers($focus, $field, $value, $view, $tabindex=&amp;#39;0&amp;#39;) {&lt;/span&gt;
&lt;span class="x"&gt; $performersBean = BeanFactory::getBean(&amp;#39;Performers&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; $performers = $performersBean-&amp;gt;get_full_list();&lt;/span&gt;
&lt;span class="x"&gt; $html = &amp;quot; — &amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; $selected_performer = $_REQUEST[&amp;#39;performer_type_search&amp;#39;]; // Or whatever dom id your drop-down has&lt;/span&gt;
&lt;span class="x"&gt; foreach($performers as $performer) {&lt;/span&gt;
&lt;span class="x"&gt; $html .= &amp;quot; if($selected_performer == $performer-&amp;gt;id) { // Props to Igor who flagged this in the comments!&lt;/span&gt;
&lt;span class="x"&gt; $html .= &amp;quot;selected&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;span class="x"&gt; $html .=&amp;quot; value=&amp;#39;{$performer-&amp;gt;id}&amp;#39;&amp;gt;{$performer-&amp;gt;name}&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;span class="x"&gt; return $html;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;span class="x"&gt; ```&lt;/span&gt;

&lt;span class="x"&gt;### Present the drop-down on the accounts search&lt;/span&gt;

&lt;span class="x"&gt;Note This has to go into modules/Accounts(I know, I know), but this had&lt;/span&gt;
&lt;span class="x"&gt;to break updatability to work otherwise this will wipe with a quick&lt;/span&gt;
&lt;span class="x"&gt;repair/rebuild(if you put it in custom). If you find an alternative&lt;/span&gt;
&lt;span class="x"&gt;solution put it here.&lt;/span&gt;

&lt;span class="x"&gt;So in modules/Accounts/metadata/vardefs.php&lt;/span&gt;
&lt;span class="x"&gt;```php&lt;/span&gt;
&lt;span class="x"&gt;$dictionary[&amp;quot;Account&amp;quot;][&amp;quot;fields&amp;quot;][&amp;quot;performer_type_search&amp;quot;] = array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;test&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;vname&amp;#39; =&amp;gt; &amp;#39;test&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;varchar&amp;#39;, // function to call that will return html that will be inserted&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;function&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;galleryPerformer&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;returns&amp;#39; =&amp;gt; &amp;#39;html&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;include&amp;#39; =&amp;gt; &amp;#39;custom/modules/Accounts/getCustomDropDown.php&amp;#39;),&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;required&amp;#39; =&amp;gt; false,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;do_report&amp;#39; =&amp;gt; false,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;reportable&amp;#39; =&amp;gt; false,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;comment&amp;#39; =&amp;gt; &amp;#39;Performer Searching&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;source&amp;#39; =&amp;gt; &amp;#39;non-db&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt; );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Extend the search&lt;/h3&gt;
&lt;p&gt;Now that you have your drop-down working you need to extend the search
to do what you need.&lt;/p&gt;
&lt;p&gt;custom/modules/Accounts/metadata/SearchFields.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;performer_search&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;query_type&amp;#39; =&amp;gt; &amp;#39;default&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;operator&amp;#39; =&amp;gt; &amp;#39;subquery&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;subquery&amp;#39; =&amp;gt; &amp;#39;SELECT accounts.id FROM accounts LEFT JOIN account_event acc_evt ON acc_evt.\`account_ida\` = accounts.id LEFT JOIN performers_event per_evt ON pvt_evt.\`event_idb\` = acc_evt.\`performers_idb\` WHERE acc_evt.deleted = 0 AND pvt_evt.deleted = 0 AND accounts.deleted = 0 AND pvt_evt.\`fair_ida\` LIKE&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;db_field&amp;#39; =&amp;gt; array(&amp;#39;id&amp;#39;),&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;enum&amp;#39;, ),&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now this query probably looks a little weird, but basically it's an
almost pseudocode type query that simply connected the two lookup tables
between Accounts and Events then Events and Performers and does the
where on the performers id.&lt;/p&gt;
&lt;p&gt;Note the LIKE in the query. Even if you're querying IDs, Sugar stupidly
passes in the value with a % at the end. So make sure this is LIKE
statement.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Build Yii 1.* with composer</title><link href="https://shanedowling.com/build-yii-1-with-composer-d8ee634e3f3e.html" rel="alternate"></link><published>2014-04-08T00:00:00+00:00</published><updated>2014-04-08T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-04-08:/build-yii-1-with-composer-d8ee634e3f3e.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__l9C5aZ3qEUjpuOr__ZRZtbw.png"&gt;&lt;/p&gt;
&lt;p&gt;While we're looking forward to Yii 2 coming alive, all of the posts on
please do not use it for production**. So it might be a little while
before we have in-built composer awesomeness with Yii. &lt;a href="http://www.yiiframework.com/wiki/392/creating-yii-applications-with-composer/"&gt;The guide
online&lt;/a&gt; on integrating composer with yii does not seem particularly
straight-forward and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__l9C5aZ3qEUjpuOr__ZRZtbw.png"&gt;&lt;/p&gt;
&lt;p&gt;While we're looking forward to Yii 2 coming alive, all of the posts on
please do not use it for production**. So it might be a little while
before we have in-built composer awesomeness with Yii. &lt;a href="http://www.yiiframework.com/wiki/392/creating-yii-applications-with-composer/"&gt;The guide
online&lt;/a&gt; on integrating composer with yii does not seem particularly
straight-forward and misses out on a lot of steps, hence this post. You
basically need to have the right folder structure or things will start
to break. This guide relies on some of phundaments packages to get
things up and running, as the official yii composer project doesn't work
anymore.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create the root folder my_yii_install.&lt;/li&gt;
&lt;li&gt;mkdir -p my_yii_install/protected/config&lt;/li&gt;
&lt;li&gt;In my_yii_install/protected/ &lt;a href="https://getcomposer.org/download/"&gt;download the composer.phar&lt;/a&gt; and create a composer.json like so.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;repositories&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
 &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;composer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;http://packages.phundament.com&amp;quot;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;],&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;require&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;php&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;gt;=5.3.2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;yiisoft/yii&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1.1.*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;yiiext/migrate-command&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.7.*&amp;quot;&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;config&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;bin-dir&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bin/&amp;quot;&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;autoload&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;psr-0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;config&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;./&amp;quot;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;pre-install-cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::preInstall&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;post-install-cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::postInstall&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;pre-update-cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::preUpdate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;post-update-cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::postUpdate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;post-package-install&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::postPackageInstall&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;post-package-update&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::postPackageUpdate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;In my_yii_install/config add console.php&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;return array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;aliases&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;vendor&amp;#39; =&amp;gt; &amp;#39;application.vendor&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;basePath&amp;#39; =&amp;gt; dirname(__FILE__) . DIRECTORY_SEPARATOR .&amp;#39;..&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;My Awesome Yii Site&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;components&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;db&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; // MySQL&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;connectionString&amp;#39; =&amp;gt; &amp;#39;mysql:host=localhost;dbname=my_yii_database&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;emulatePrepare&amp;#39; =&amp;gt; true,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;username&amp;#39; =&amp;gt; &amp;#39;root&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;password&amp;#39; =&amp;gt; &amp;#39;root&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;charset&amp;#39; =&amp;gt; &amp;#39;utf8&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;params&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;composer.callbacks&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; // args for Yii command runner&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;yiisoft/yii-install&amp;#39; =&amp;gt; array(&amp;#39;yiic&amp;#39;, &amp;#39;webapp&amp;#39;, dirname(__FILE__).DIRECTORY_SEPARATOR.&amp;#39;..&amp;#39;.DIRECTORY_SEPARATOR.&amp;#39;..&amp;#39;),&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;post-update&amp;#39; =&amp;gt; array(&amp;#39;yiic&amp;#39;, &amp;#39;migrate&amp;#39;),&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;post-install&amp;#39; =&amp;gt; array(&amp;#39;yiic&amp;#39;, &amp;#39;migrate&amp;#39;),&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now you'll need to add a file like the below to actually handle the new composer hooks you've created. This will basically run migrations once your dependencies have installed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is blantantly taken from phundaments &lt;a href="https://github.com/phundament/app/blob/yii-webapp/protected/config/ComposerCallback.php"&gt;ComposerCallback&lt;/a&gt;.
I just thought I'd copy it here for completeness.&lt;/p&gt;
&lt;p&gt;ComposerCallback.php&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Class file&lt;/span&gt;
&lt;span class="x"&gt; *“&lt;/span&gt;
&lt;span class="x"&gt; * @author Tobias Munk&lt;/span&gt;
&lt;span class="x"&gt; * @link [http://www.phundament.com/](http://www.phundament.com/)&lt;/span&gt;
&lt;span class="x"&gt; * @copyright Copyright © 2012 diemeisterei GmbH&lt;/span&gt;
&lt;span class="x"&gt; * @license [http://www.phundament.com/license](http://www.phundament.com/license)&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;

&lt;span class="x"&gt;namespace config;&lt;/span&gt;
&lt;span class="x"&gt; use Composer\\Script\\Event;&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * ComposerCallback provides composer hooks&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * This setup class triggers \`./yiic migrate\` at post-install and post-update.&lt;/span&gt;
&lt;span class="x"&gt; * For a package the class triggers \`./yiic -\` at post-package-install and&lt;/span&gt;
&lt;span class="x"&gt; * post-package-update.&lt;/span&gt;
&lt;span class="x"&gt; * See composer manual (http://getcomposer.org/doc/articles/scripts.md)&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * Usage example&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * config.php&lt;/span&gt;
&lt;span class="x"&gt; * &amp;#39;params&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; * &amp;#39;composer.callbacks&amp;#39; =&amp;gt; array(&lt;/span&gt;
&lt;span class="x"&gt; * &amp;#39;post-update&amp;#39; =&amp;gt; array(&amp;#39;yiic&amp;#39;, &amp;#39;migrate&amp;#39;),&lt;/span&gt;
&lt;span class="x"&gt; * &amp;#39;post-install&amp;#39; =&amp;gt; array(&amp;#39;yiic&amp;#39;, &amp;#39;migrate&amp;#39;),&lt;/span&gt;
&lt;span class="x"&gt; * &amp;#39;yiisoft/yii-install&amp;#39; =&amp;gt; array(&amp;#39;yiic&amp;#39;, &amp;#39;webapp&amp;#39;, realpath(dirname(__FILE__))),&lt;/span&gt;
&lt;span class="x"&gt; * ),&lt;/span&gt;
&lt;span class="x"&gt; * )&lt;/span&gt;
&lt;span class="x"&gt; * );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;composer.json&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;pre-install-cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::preInstall&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;post-install-cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::postInstall&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;pre-update-cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::preUpdate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;post-update-cmd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::postUpdate&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;post-package-install&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
 &lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::postPackageInstall&amp;quot;&lt;/span&gt;
 &lt;span class="p"&gt;],&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;quot;post-package-update&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
 &lt;span class="s2"&gt;&amp;quot;config\\\\ComposerCallback::postPackageUpdate&amp;quot;&lt;/span&gt;
 &lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;*&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * @author Tobias Munk&lt;/span&gt;
&lt;span class="x"&gt; * @package phundament.app&lt;/span&gt;
&lt;span class="x"&gt; * @since 0.7.1&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;

&lt;span class="x"&gt;defined(&amp;#39;YII_PATH&amp;#39;) or define(&amp;#39;YII_PATH&amp;#39;, dirname(__FILE__).&amp;#39;/../vendor/yiisoft/yii/framework&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; defined(&amp;#39;CONSOLE_CONFIG&amp;#39;) or define(&amp;#39;CONSOLE_CONFIG&amp;#39;, dirname(__FILE__).&amp;#39;/console.php&amp;#39;);&lt;/span&gt;

&lt;span class="x"&gt;class ComposerCallback&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; /**&lt;/span&gt;
&lt;span class="x"&gt; * Displays welcome message&lt;/span&gt;
&lt;span class="x"&gt; * @static&lt;/span&gt;
&lt;span class="x"&gt; * @param ComposerScriptEvent $event&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public static function preInstall(Event $event)&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; $composer = $event-&amp;gt;getComposer();&lt;/span&gt;
&lt;span class="x"&gt; // do stuff&lt;/span&gt;
&lt;span class="x"&gt; echo &amp;quot;Phundament 3 Installernn&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; echo &amp;quot; * download packages specified in composer.json&lt;/span&gt;
&lt;span class="x"&gt; * trigger composer callbacksnn&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; if (self::confirm(&amp;quot;Start Installation?&amp;quot;)) {&lt;/span&gt;
&lt;span class="x"&gt; self::runHook(&amp;#39;pre-install&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; } else {&lt;/span&gt;
&lt;span class="x"&gt; exit(&amp;quot;Installation aborted.n&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Executes ./yiic migrate&lt;/span&gt;
&lt;span class="x"&gt; * @static&lt;/span&gt;
&lt;span class="x"&gt; * @param ComposerScriptEvent $event&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public static function postInstall(Event $event)&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; self::runHook(&amp;#39;post-install&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; echo &amp;quot;nnInstallation completed.nnThank you for choosing Phundament 3!nn&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Displays welcome message&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * @static&lt;/span&gt;
&lt;span class="x"&gt; * @param ComposerScriptEvent $event&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public static function preUpdate(Event $event)&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; echo &amp;quot;Welcome to Phundament Installation 3 via composernnUpdating your application to the lastest available packages…n&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; self::runHook(&amp;#39;pre-update&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Executes ./yiic migrate&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * @static&lt;/span&gt;
&lt;span class="x"&gt; * @param ComposerScriptEvent $event&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public static function postUpdate(Event $event)&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; self::runHook(&amp;#39;post-update&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; echo &amp;quot;nnUpdate completed.nn&amp;quot;;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Executes ./yiic -&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * @static&lt;/span&gt;
&lt;span class="x"&gt; * @param ComposerScriptEvent $event&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public static function postPackageInstall(Event $event)&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; $installedPackage = $event-&amp;gt;getOperation()-&amp;gt;getPackage();&lt;/span&gt;
&lt;span class="x"&gt; $hookName = $installedPackage-&amp;gt;getPrettyName().&amp;#39;-install&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; self::runHook($hookName);&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Executes ./yiic -&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * @static&lt;/span&gt;
&lt;span class="x"&gt; * @param ComposerScriptEvent $event&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public static function postPackageUpdate(Event $event)&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; $installedPackage = $event-&amp;gt;getOperation()-&amp;gt;getTargetPackage();&lt;/span&gt;
&lt;span class="x"&gt; $commandName = $installedPackage-&amp;gt;getPrettyName().&amp;#39;-update&amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; self::runHook($commandName);&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Asks user to confirm by typing y or n.&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * Credits to Yii CConsoleCommand&lt;/span&gt;
&lt;span class="x"&gt; *&lt;/span&gt;
&lt;span class="x"&gt; * @param string $message to echo out before waiting for user input&lt;/span&gt;
&lt;span class="x"&gt; * @return bool if user confirmed&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public static function confirm($message)&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; echo $message . &amp;#39; [yes|no] &amp;#39;;&lt;/span&gt;
&lt;span class="x"&gt; return !strncasecmp(trim(fgets(STDIN)), &amp;#39;y&amp;#39;, 1);&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Runs Yii command, if available (defined in config/console.php)&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; private static function runHook($name){&lt;/span&gt;
&lt;span class="x"&gt; $app = self::getYiiApplication();&lt;/span&gt;
&lt;span class="x"&gt; if ($app === null) return;&lt;/span&gt;

&lt;span class="x"&gt;if (isset($app-&amp;gt;params[&amp;#39;composer.callbacks&amp;#39;][$name])) {&lt;/span&gt;
&lt;span class="x"&gt; $args = $app-&amp;gt;params[&amp;#39;composer.callbacks&amp;#39;][$name];&lt;/span&gt;
&lt;span class="x"&gt; $app-&amp;gt;commandRunner-&amp;gt;addCommands(Yii::getPathOfAlias(&amp;#39;system.cli.commands&amp;#39;));&lt;/span&gt;
&lt;span class="x"&gt; $app-&amp;gt;commandRunner-&amp;gt;run($args);&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Creates console application, if Yii is available&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; private static function getYiiApplication()&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; if (!is_file(YII_PATH.&amp;#39;/yii.php&amp;#39;))&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; return null;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;require_once(YII_PATH.&amp;#39;/yii.php&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; spl_autoload_register(array(&amp;#39;YiiBase&amp;#39;, &amp;#39;autoload&amp;#39;));&lt;/span&gt;

&lt;span class="x"&gt;if (Yii::app() === null) {&lt;/span&gt;
&lt;span class="x"&gt; if (is_file(CONSOLE_CONFIG)) {&lt;/span&gt;
&lt;span class="x"&gt; $app = Yii::createConsoleApplication(CONSOLE_CONFIG);&lt;/span&gt;
&lt;span class="x"&gt; } else {&lt;/span&gt;
&lt;span class="x"&gt; throw new Exception(&amp;quot;File from CONSOLE_CONFIG not found&amp;quot;);&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;span class="x"&gt; } else {&lt;/span&gt;
&lt;span class="x"&gt; $app = Yii::app();&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;
&lt;span class="x"&gt; return $app;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now you should be able to run&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;php composer.phar install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and it should ask do you want to setup your yii project and all of the
required folders, which is pretty awesome. The only other thing you
might want to do is add more dependencies. Say you have a library you
wish to add. Add the entry into composer.json run the update(which
should call any migrations needed automatically), then you need to add
this line to your index.php.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;require_once(dirname(__FILE__).&amp;#39;/protected/vendor/autoload.php&amp;#39;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And should be be good to access composers namespaces libraries. Very
cool!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>SugarCRM — Add a code-driven column to a list</title><link href="https://shanedowling.com/sugarcrm-add-a-code-driven-column-to-a-list-4e9f4eb672b1.html" rel="alternate"></link><published>2014-04-05T00:00:00+00:00</published><updated>2014-04-05T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-04-05:/sugarcrm-add-a-code-driven-column-to-a-list-4e9f4eb672b1.html</id><summary type="html">&lt;p&gt;Sometimes you might find that you want your users to make decisions based on ListViews and you need to pull in relational data beyond the immediately related objects. Example&lt;/p&gt;
&lt;p&gt;So using the circus example say you have performers who are performing for a specific show. You might want to see …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometimes you might find that you want your users to make decisions based on ListViews and you need to pull in relational data beyond the immediately related objects. Example&lt;/p&gt;
&lt;p&gt;So using the circus example say you have performers who are performing for a specific show. You might want to see what other shows those performers are also attached to. If it's typically only one or two shows per event, you can probably make another column in the ListView that displays all shows related to that performer. Lets call this field 'Other Shows'.&lt;/p&gt;
&lt;p&gt;What to do
-—-— —&lt;/p&gt;
&lt;p&gt;Add your new field in studio before you do anything. So fire up Studio
and create an 'Other Shows' field, create this as a text field.&lt;/p&gt;
&lt;p&gt;Alter the newly created fields vardef and set it to non-db.&lt;/p&gt;
&lt;p&gt;You can typically find it in
custom/Extension/modules/Performers/Ext/Vardefs/other_shows_c.php.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;$dictionary[&amp;#39;Performers&amp;#39;][&amp;#39;fields&amp;#39;][&amp;#39;other_shows_c&amp;#39;] = array(&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;other_shows_c&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;vname&amp;#39; =&amp;gt; &amp;#39;LBL_OTHER_SHOWS_C&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;varchar&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;len&amp;#39; =&amp;gt; &amp;#39;255&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;source&amp;#39; =&amp;gt; &amp;#39;non-db&amp;#39;&lt;/span&gt;
&lt;span class="x"&gt; );&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ensure the field isn't sortable..&lt;/p&gt;
&lt;p&gt;Trying to sort a db/non-db field will cause a bit of trouble and
ListViews don't support it, so just disable it.&lt;/p&gt;
&lt;p&gt;Under custom/modules/Performers/metadata/listviewdefs.php change your
newly created fields definition.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;&amp;#39;OTHER_SHOWS_C&amp;#39; =&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt; array (&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;label&amp;#39; =&amp;gt; &amp;#39;Other Shows&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;width&amp;#39; =&amp;gt; &amp;#39;10%&amp;#39;,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;default&amp;#39; =&amp;gt; true,&lt;/span&gt;
&lt;span class="x"&gt; &amp;#39;sortable&amp;#39; =&amp;gt; false,&lt;/span&gt;
&lt;span class="x"&gt; ),&lt;/span&gt;
&lt;span class="x"&gt; ```&lt;/span&gt;

&lt;span class="x"&gt;Adding the actual code to run.&lt;/span&gt;

&lt;span class="x"&gt;For this we&amp;#39;re going to leverage SugarCRM&amp;#39;s logic hooks. If you haven&amp;#39;t&lt;/span&gt;
&lt;span class="x"&gt;already create a logic_hooks.php under custom/modules/Performers/ with&lt;/span&gt;
&lt;span class="x"&gt;contents like this.&lt;/span&gt;

&lt;span class="x"&gt;This file essentially defines the hooks you&amp;#39;re going to call. The hook&lt;/span&gt;
&lt;span class="x"&gt;process_record means it&amp;#39;ll be called for every row that&amp;#39;s displayed on&lt;/span&gt;
&lt;span class="x"&gt;the ListView.&lt;/span&gt;

&lt;span class="x"&gt;The performers_logic_hooks_class.php file will be included,&lt;/span&gt;
&lt;span class="x"&gt;performers_logic_hooks is the class that it will look for and&lt;/span&gt;
&lt;span class="x"&gt;list_record_process is the function within that class that it will&lt;/span&gt;
&lt;span class="x"&gt;call.&lt;/span&gt;
&lt;span class="x"&gt;```php&lt;/span&gt;
&lt;span class="x"&gt;// Do not store anything in this file that is not part of the array or the hook version. This file will&lt;/span&gt;
&lt;span class="x"&gt; // be automatically rebuilt in the future.&lt;/span&gt;
&lt;span class="x"&gt; $hook_version = 1;&lt;/span&gt;
&lt;span class="x"&gt; $hook_array = Array();&lt;/span&gt;
&lt;span class="x"&gt; // position, file, function&lt;/span&gt;
&lt;span class="x"&gt; $hook_array[&amp;#39;before_save&amp;#39;] = Array();&lt;/span&gt;
&lt;span class="x"&gt; $hook_array[&amp;#39;before_save&amp;#39;][] = Array(1, &amp;#39;workflow&amp;#39;, &amp;#39;include/workflow/WorkFlowHandler.php&amp;#39;,&amp;#39;WorkFlowHandler&amp;#39;, &amp;#39;WorkFlowHandler&amp;#39;);&lt;/span&gt;
&lt;span class="x"&gt; $hook_array[&amp;#39;process_record&amp;#39;][] = Array(1, &amp;#39;Other_Shows&amp;#39;, &amp;#39;custom/modules/Performers/performers_logic_hooks.php&amp;#39;,&amp;#39;performers_logic_hooks&amp;#39;, &amp;#39;list_record_process&amp;#39;);&lt;/span&gt;

&lt;span class="x"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Define the class.&lt;/p&gt;
&lt;p&gt;Don't name the class something generic, like logic_hook_class and use
that class name everywhere. It'll cause a bunch of conflicts when it
comes to saving related data, hence the name performers_logic_hooks.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;class performers_logic_hooks&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;

&lt;span class="x"&gt;/**&lt;/span&gt;
&lt;span class="x"&gt; * Called as process_record logic hook on the Performers module&lt;/span&gt;
&lt;span class="x"&gt; */&lt;/span&gt;
&lt;span class="x"&gt; public function list_record_process($bean, $event, $arguments)&lt;/span&gt;
&lt;span class="x"&gt; {&lt;/span&gt;
&lt;span class="x"&gt; //Do some code to get the related shows for the performer and store in the $other_shows variable&lt;/span&gt;

&lt;span class="x"&gt;$this-&amp;gt;other_shows_c = $other_shows;&lt;/span&gt;
&lt;span class="x"&gt; }&lt;/span&gt;

&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the field to your listview via studio and do a quick repair/rebuild.
That should hopefully be it.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Yii issues with Homebrew PHP 5.3</title><link href="https://shanedowling.com/yii-issues-with-homebrew-php-5-3-8d759e748a92.html" rel="alternate"></link><published>2014-04-04T00:00:00+00:00</published><updated>2014-04-04T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-04-04:/yii-issues-with-homebrew-php-5-3-8d759e748a92.html</id><summary type="html">&lt;p&gt;When running yii with a homebrewed install of PHP 5.3, PHP code embedded
in HTML wouldn't work. This is because for some inexplicable reason
Homebrew's PHP install disables short-tag support. Simply edit
&lt;code&gt;/usr/local/etc/php/5.3/php.ini&lt;/code&gt; and change short-tags to On.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;short_open_tag = On …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;When running yii with a homebrewed install of PHP 5.3, PHP code embedded
in HTML wouldn't work. This is because for some inexplicable reason
Homebrew's PHP install disables short-tag support. Simply edit
&lt;code&gt;/usr/local/etc/php/5.3/php.ini&lt;/code&gt; and change short-tags to On.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;short_open_tag = On&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Also ensure you're using the homebrewed installation of PHP.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LoadModule php5_module /usr/local/Cellar/php53/5.3.28/libexec/apache2/libphp5.so&lt;/code&gt;&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Owning Your Data — Replacing Gmail</title><link href="https://shanedowling.com/owning-your-data-replacing-gmail-20e9e2259fa2.html" rel="alternate"></link><published>2014-03-29T00:00:00+00:00</published><updated>2014-03-29T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-03-29:/owning-your-data-replacing-gmail-20e9e2259fa2.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__jrj__wnQecgnTwBXPZsg05w.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Gmail isn't secure or private, Google have admitted this. You simply cannot expect privacy from any service that you don't have
control of. Thankfully your email doesn't have to be tied a mail service
like Gmail, Yahoo or Microsoft. You can simply roll your own email
server with your own …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__jrj__wnQecgnTwBXPZsg05w.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Gmail isn't secure or private, Google have admitted this. You simply cannot expect privacy from any service that you don't have
control of. Thankfully your email doesn't have to be tied a mail service
like Gmail, Yahoo or Microsoft. You can simply roll your own email
server with your own domain name and easily create an (admittedly
minimalist) Gmail equivalent.&lt;/p&gt;
&lt;h3&gt;Before you start&lt;/h3&gt;
&lt;p&gt;If you think this guide is too complex, that's totally understandable.
Running your own mail server requires a reasonable amount of technical
experience. If you're interesting in getting away from a service like
Gmail and want a good alternative check-out &lt;a href="https://mykolab.com/."&gt;https://mykolab.com/.&lt;/a&gt; It
costs around 10 bucks a month for 2GB of storage, which isn't too bad.
If you think this isn't enough space, you could either pay for more or
have a mail client like thunderbird offline all non-essential email to
your desktop.&lt;/p&gt;
&lt;h3&gt;What you're not getting&lt;/h3&gt;
&lt;p&gt;This is very minimal email setup. You won't be getting a web-accessible
email client. If you want your email accessible everywhere, this simply
isn't a guide for you. If you do want web-accesible email setup you
could use something like `iRedmail `__\ to do
all of your configuration for you. I find that because iRedmail
configures everything automatically, I'm less in control of how my
server works. Plus the extra requirements iRedmail needs reduce the
security of my server, which I'm not too happy about. This guide is to
get the bare minimum for email to work.
Also, to decrease the amount of time my emails sit on my server, I store
all of emails on my local machine and back that machine up locally. This
is simply to minimise data leakage should my server become compromised.
So you will need to point a mail client(thunderbird, k9 for Android etc)
to download your email locally for search indexing. Sadly, there are a
few usability prices to pay to stay out of another companies pocket.&lt;/p&gt;
&lt;h3&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ensure you have a server setup with salt. See &lt;a href="https://shanedowling.com/owning-your-data-initial-server-setup-afa33394b94"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A domain name you wish to send email from. So instead of you@gmail.com it's you@mynewdomain.com. I use &lt;a href="https://www.namecheap.com"&gt;namecheap&lt;/a&gt;. They accept bitcoin and will allow you to buy &lt;a href="https://www.namecheap.com/security/whoisguard.aspx"&gt;whoisguard&lt;/a&gt; for your domain name. So fake all the details on here and make sure you buy whoisguard just to keep things quiet.&lt;/li&gt;
&lt;li&gt;Once you have bought your domain name, you will need to point your domain mail records to your new server. Namecheap has a guide here. Generally, I create an A record on my domain mx.mynewdomain.com to the ip of my server. I then setup multiple mx records that point to mx.mynewdomain.com. I also use backup DNS suppliers for my low priority mx records (say priority 40/50), take a look at https://freedns.afraid.org/ to get yourself some free domain names.&lt;/li&gt;
&lt;li&gt;Install git&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get install git
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Setup a user on the server who you wish to send/recieve email as. So adduser jim and enter the password you wish to authenticate with on your mail client.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Setting up the server&lt;/h3&gt;
&lt;p&gt;The first thing you're going to need to do is, using salt, grab my &lt;a href="https://github.com/shano/salty-mailer"&gt;salty-mailer setup&lt;/a&gt;. This leverages salt stack and will install everything you need to get your
mail server up and running. You don't need to worry too much about what
git does, it simply downloads the files required from github. Copy and
paste this line into the terminal and it should get things started.&lt;/p&gt;
&lt;p&gt;sudo mkdir /srv/salt/mail &amp;amp;&amp;amp; sudo git clone
 &lt;a href="https://github.com/shano/salty-mailer"&gt;https://github.com/shano/salty-mailer&lt;/a&gt; /srv/salt/mail&lt;/p&gt;
&lt;p&gt;Now you'll need to configure a few files, with your own settings.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In /srv/salt/mail/init.sls change all entries from to the username you wish to send email as. So for example change it from to jim.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In /srv/salt/mail/postfix/main.cf you need to change &amp;lt;&lt;code&gt;domain.com&lt;/code&gt;&amp;gt; to &lt;code&gt;mynewdomain.com&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Under /srv/salt/top.sls ensure you have lines that look like this:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;— mail&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Done? Great you've finished configuration and you're ready to install
everything. This command tells salt to read these configuration files
and install enough to get basic mail server up and running.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo salt-call -l debug state.highstate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This should provide a ton of output, but as long as there's no errors,
you're good to go.&lt;/p&gt;
&lt;h3&gt;Testing your mail-server&lt;/h3&gt;
&lt;p&gt;You should now be able to configure your email-client to talk to your
email server. So fire up your preferred mail client and use these
settings to connect.
Inbound:&lt;/p&gt;
&lt;p&gt;Server Type:IMAP
 Username:jim
 Password:&lt;/p&gt;
&lt;p&gt;Outbound:&lt;/p&gt;
&lt;p&gt;Server Type:SMTP
 Password:&lt;/p&gt;
&lt;p&gt;Now try connect your email client to your server and see what happens.
If you have trouble connecting try run sudo tail -f /var/log/mail.log
and reconnect. See if anything appears in the output. If there is
something wrong, checkout google(duh) or tryout The Comms
Room on ServerFault and see if someone can point you in the right direction. Or of course add something in the comments here.&lt;/p&gt;
&lt;h3&gt;Make your emails more reliable&lt;/h3&gt;
&lt;p&gt;Now that you have your mail server up and running, you're going to need
to ensure the major email suppliers are willing to accept your email.
People suggest adding SPFs and DKIMs to your email records but
personally I haven't found either much use. The best thing for you to do is to add yourself to a legitimate whitelist. Fill in &lt;a href="https://www.dnswl.org/selfservice/"&gt;this form&lt;/a&gt;, the guys there will come back if the find any issues with your server that would prevent them adding you to their whitelist, once accepted Presto! You look like a legimate email user on the interwebs!&lt;/p&gt;
&lt;h3&gt;What's next?&lt;/h3&gt;
&lt;p&gt;Now that you've done all that work, here's the kicker. Email isn't
secure. It was never meant to be the center of our digital lives, so
back when it was invented security really wasn't a big concern. But here
we are. With everything in plain-text all over the place you'd be wise
to reduce your email as much as possible. If you wish to improve the
security of any email communications you do make, take a look at using
GPG. I use &lt;a href="https://addons.mozilla.org/en-US/thunderbird/addon/enigmail/"&gt;Enigmail with Thunderbird&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Useful bit of SQL to update many records in SugarCRM</title><link href="https://shanedowling.com/useful-bit-of-sql-to-update-many-records-in-sugarcrm-3fae0ab47a4d.html" rel="alternate"></link><published>2014-03-27T00:00:00+00:00</published><updated>2014-03-27T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-03-27:/useful-bit-of-sql-to-update-many-records-in-sugarcrm-3fae0ab47a4d.html</id><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;clowns&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;deleted&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;IN&lt;/span&gt;
 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;clowns&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;deleted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;tmp&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>Owning Your Data — Initial Server Setup</title><link href="https://shanedowling.com/owning-your-data-initial-server-setup-afa33394b94.html" rel="alternate"></link><published>2014-03-06T00:00:00+00:00</published><updated>2014-03-06T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-03-06:/owning-your-data-initial-server-setup-afa33394b94.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__Frjg0ruGoXtEESBMek____Lw.png"&gt;&lt;/p&gt;
&lt;p&gt;So before you can move to your own self-hosted services, you'll need
your own hosting. This is a really basic tutorial/set of links on
getting a server up and running with Salt.&lt;/p&gt;
&lt;h3&gt;Hosting Provider&lt;/h3&gt;
&lt;p&gt;DigitalOcean is a terrific hosting company if you're want to play around with a few …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__Frjg0ruGoXtEESBMek____Lw.png"&gt;&lt;/p&gt;
&lt;p&gt;So before you can move to your own self-hosted services, you'll need
your own hosting. This is a really basic tutorial/set of links on
getting a server up and running with Salt.&lt;/p&gt;
&lt;h3&gt;Hosting Provider&lt;/h3&gt;
&lt;p&gt;DigitalOcean is a terrific hosting company if you're want to play around with a few personal servers. Here's the pro's list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's really cost effective.&lt;/li&gt;
&lt;li&gt;The UI is super basic.&lt;/li&gt;
&lt;li&gt;They have great tutorials for beginners.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;How safe is DigitalOcean?&lt;/h3&gt;
&lt;p&gt;Well, this is a call you'll need to make yourself. They are a New York
based hosting company so that's not so good. However, you can deploy
droplets(servers) in Amsterdam which CEO Ben Uretsky stated should make
snooping harder. It's hardly a ringing endorsement.&lt;/p&gt;
&lt;h3&gt;Safer alternatives&lt;/h3&gt;
&lt;p&gt;If you want to go a more untraceable route, look for a hosting provider
that'll take Bitcoin. Don't supply any personal information and if
possible only connect to the server through a VPN. Here's a few
examples.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;BitcoinWebHosting&lt;/li&gt;
&lt;li&gt;NameCheap&lt;/li&gt;
&lt;li&gt;Incloudibly Zurich based making it even safer, but also far more expensive.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Setting Up the Server&lt;/h3&gt;
&lt;p&gt;DigitalOcean themselves have agreat guide on setting up your first
server and do a great job of explaining what the settings mean and the effect
they have. Even if you don't go with DigitalOcean it's a recommended read.
In terms of settings I'd recommend using Ubuntu 12.04 LTS 32bit or 64bit
depending on how much RAM you give your machine. 12.04 LTS is the last
Long Term Support release of Ubuntu, so you will get updates till late
2017.&lt;/p&gt;
&lt;p&gt;If you're more comfortable with servers Debian is an alternative OS that
is admittedly a little safer. Ubuntu contains some proprietary software
and potentially unsafe opt-ins but that's mostly pertaining to the
desktop. DigitalOcean tends to provide more Ubuntu documentation to beginners so it makes a good starter OS, so you can get comfortable with Ubuntu now then transition to Debian later, with a little help from salt(which I'll go into later).&lt;/p&gt;
&lt;p&gt;I'd also recommend going with around 1GB of Ram if you intend to use the
server for multiple features, for example mail server, file server,
photo sharing etc. The tutorial also goes into how to connect to your box so by the end of the tutorial you should have a server up and running and be connected via the terminal prompt.&lt;/p&gt;
&lt;h3&gt;Setting up Salt&lt;/h3&gt;
&lt;p&gt;Salt is an infrastructure management software, but don't let that put
you off. We won't be using about 90% of what Salt does, just a few
features here and there to get you up to speed faster. To explain, these
guides rely on Salt to allow you to quickly configure your servers based
on configurations I've already made, there's no need to worry too much
about how Salt works. Generally you'll just need to copy certain files
and run a command or two, should be pretty straight-forward.
Anyway, yet again I'll leverage a DigitalOcean guide. Here's how to
install Salt on Ubuntu 12.04.&lt;/p&gt;
&lt;h3&gt;Done?&lt;/h3&gt;
&lt;p&gt;Excellent, you're on your way. Checkout here to choose what
service you want to swap across to your awesome new machine!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Owning Your Data</title><link href="https://shanedowling.com/owning-your-data-296ed1534643.html" rel="alternate"></link><published>2014-02-27T00:00:00+00:00</published><updated>2014-02-27T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-02-27:/owning-your-data-296ed1534643.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__onILu1exx9sSg4nwDK__CJw.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Governments are collecting data on you, that's a fairly accepted fact at this stage. Whether you're being "social", reading email, playing video games or even when you're writing a book on the NSA. If you want more details The Guardian has a great explanation as to what Snowden's files mean …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__onILu1exx9sSg4nwDK__CJw.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Governments are collecting data on you, that's a fairly accepted fact at this stage. Whether you're being "social", reading email, playing video games or even when you're writing a book on the NSA. If you want more details The Guardian has a great explanation as to what Snowden's files mean &lt;a href="https://www.theguardian.com/world/interactive/2013/nov/01/snowden-nsa-files-surveillance-revelations-decoded"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There's one critical flaw to the NSA's methods. Most of how the NSA collects data on you(via prism anyway) is through Google, Yahoo, Gmail, Facebook and Microsoft. These technologies are all just choices you've made. Thankfully, choices you can undo.&lt;/p&gt;
&lt;p&gt;I'm going to put up a running list of technologies I've used/still use
and how I've moved across from services that were out of my control onto ones that I can manage and run myself. Other sites have done something similar(links at the bottom), but I'm hoping to write or add in
comprehensive tutorials explaining how to set these things up in an
understandable way. I leveraging a tool called saltstack to share reusable configurations, so you can easily run a server then clone a lot of what I'm doing to circumvent surveillance.&lt;/p&gt;
&lt;p&gt;A lot of my tech involves using owncloud, it has a lot of addons and features that I've grown to rely on over the years. If you're not too technical and want to get up and running with owncloud, checkout Bitnami's owncloud stack, with a one-click installer, though I'd try avoid those hosting platforms and go for something based in Europe. I use ovh. I'll post up links each week on a new service or product that I've swapped across.&lt;/p&gt;
&lt;p&gt;Here's what I'm currently using in terms of functional products.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Facebook-Replaced by Ditching Facebook. Maybe use a blog instead? Try alternative communities?&lt;/li&gt;
&lt;li&gt;Tumblr-Wordpress for everything.&lt;/li&gt;
&lt;li&gt;Smartphone-I've now moved from a dumbphone to a Jolla Phone running Sailfish. It's mostly open source and developed in Finland, more for the tech oriented(still a lot of bugs) but a great community helping to define Sailfish. They're also looking to create a new Secure Sailfish operating system if you wanted to wait. Not perfect but sufficient.&lt;/li&gt;
&lt;li&gt;Twitter-Consider diaspora&lt;/li&gt;
&lt;li&gt;Gmail-Replace Gmail with your own mail server or fastmail is pretty nice.&lt;/li&gt;
&lt;li&gt;Google Calendar-Owncloud has a really nice calendar with caldav sync.&lt;/li&gt;
&lt;li&gt;Evernote/Google Keep-Personally I'm using the ownnotes plugin on owncloud but tagspaces looks really nice if you don't want to use owncloud.&lt;/li&gt;
&lt;li&gt;Whatsapp-Difficult-They own all the contacts right now and they've sold those contacts to Facebook. I'm now using Signal and am trying to convince my friends/family to use it instead.&lt;/li&gt;
&lt;li&gt;Dropbox-I now use owncloud.It's sync functionality is really nice. Highly recommended.&lt;/li&gt;
&lt;li&gt;Google Contacts-Owncloud again. The contacts app is decent has really nice carddav functionality.&lt;/li&gt;
&lt;li&gt;Skype-I'd suggest linphone with some like callwithus for VOIP services, they take bitcoin.&lt;/li&gt;
&lt;li&gt;Spotify-They require facebook to login which really isn't great. Plus you don't really own any of the content on there. Personally I think magnatune is a great alternative. Ogg formats you can download any time and half of all revenue goes to the artists. You could also host/stream your music purchases on your own server with ampache.&lt;/li&gt;
&lt;li&gt;Google Reader/Feedly-The ownnews plugin for owncloud.&lt;/li&gt;
&lt;li&gt;Pocket/Instapaper-Wallabag is a really nice self-hosted read it later webapp.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some good external links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://prism-break.org/en/"&gt;Prism-Break&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://guardianproject.info/"&gt;The Guardian Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Tech"></category></entry><entry><title>Rolling your own mail server with Salt</title><link href="https://shanedowling.com/rolling-your-own-mail-server-with-salt-159de9bec794.html" rel="alternate"></link><published>2014-02-16T00:00:00+00:00</published><updated>2014-02-16T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-02-16:/rolling-your-own-mail-server-with-salt-159de9bec794.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__eQD1Nfyf2Y7LLmCrROHrMA.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Recently I decided to migrate my mail server and I took this as an
opportunity to better get my head around setting the whole thing up.
I've used iRedmail in the past but the whole process seemed a little
like magic so I took a scouring around the internets for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__eQD1Nfyf2Y7LLmCrROHrMA.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Recently I decided to migrate my mail server and I took this as an
opportunity to better get my head around setting the whole thing up.
I've used iRedmail in the past but the whole process seemed a little
like magic so I took a scouring around the internets for a decent
tutorial and came across &lt;a href="http://dbpmail.net/essays/2013-06-29-hackers-replacement-for-gmail.html"&gt;A Hacker's Replacement for Gmail&lt;/a&gt; and figured it might be worth building up a salt-stack for people.&lt;/p&gt;
&lt;p&gt;There is a few differences between my salt-stack and the linked article.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Primarily, I didn't need notmuch or any fancy indexing on my server.&lt;/li&gt;
&lt;li&gt;Personally, for security I grab all of my mail on Thunderbird and keep it offline with backups. So my server is pretty thin.&lt;/li&gt;
&lt;li&gt;I completely ignored his exim4 guide and only went with postfix and dovecot for security.&lt;/li&gt;
&lt;li&gt;I needed to add in some more security settings to get postfix up and running nicely.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anyway the salt-stack is &lt;a href="https://github.com/shano/salty-mailer"&gt;here&lt;/a&gt; and there should be
very few changes in getting it up and running. Basically change with
your server's username and with the domain you wish to email out from.
I've only tested it with Debian 7 and Thunderbird as a client but it all
worked.&lt;/p&gt;
&lt;p&gt;If anyone has any improvements, just let me know.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>OfflineImap to Thunderbird</title><link href="https://shanedowling.com/offlineimap-to-thunderbird-152bb02286f.html" rel="alternate"></link><published>2014-02-08T00:00:00+00:00</published><updated>2014-02-08T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-02-08:/offlineimap-to-thunderbird-152bb02286f.html</id><summary type="html">&lt;p&gt;Last week I moved from Debian to Linux Mint and setup Thunderbird as my
new mail client(replacing mutt). Sadly for some reason Thunderbird
started tanking and wiped all the mails from my mailserver without
actually downloading anything.&lt;/p&gt;
&lt;p&gt;I could've restored the mails from a backup but instead I figured …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last week I moved from Debian to Linux Mint and setup Thunderbird as my
new mail client(replacing mutt). Sadly for some reason Thunderbird
started tanking and wiped all the mails from my mailserver without
actually downloading anything.&lt;/p&gt;
&lt;p&gt;I could've restored the mails from a backup but instead I figured I'd
take my emails offline and use Thunderbird as my primary mail client. I
had a backup of my mails from OfflineImap but the problem was that
OfflineImap uses the MailDir format and Thunderbird didn't support it.&lt;/p&gt;
&lt;p&gt;Luckily Thunderbird did support maildir and I modified an existing
MailDir to Mbox converter written in Python to work with Offlineimaps
potentially infinitely recursive folder format. Hopefully it helps
someone else.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
 &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt; Shane Dowling, 8 Feb 2013&lt;/span&gt;
&lt;span class="sd"&gt; Frédéric Grosshans, 19 January 2012&lt;/span&gt;
&lt;span class="sd"&gt; Nathan R. Yergler, 6 June 2010&lt;/span&gt;

&lt;span class="sd"&gt;This file does not contain sufficient creative expression to invoke&lt;/span&gt;
&lt;span class="sd"&gt; assertion of copyright. No warranty is expressed or implied; use at&lt;/span&gt;
&lt;span class="sd"&gt; your own risk.&lt;/span&gt;

&lt;span class="sd"&gt;— -&lt;/span&gt;

&lt;span class="sd"&gt;Uses Python&amp;#39;s included mailbox library to convert mail archives from&lt;/span&gt;
&lt;span class="sd"&gt; maildir [http://en.wikipedia.org/wiki/Maildir] to&lt;/span&gt;
&lt;span class="sd"&gt; mbox [http://en.wikipedia.org/wiki/Mbox] format, icluding subfolder.&lt;/span&gt;

&lt;span class="sd"&gt;See [http://docs.python.org/library/mailbox.html#mailbox.Mailbox](http://docs.python.org/library/mailbox.html#mailbox.Mailbox) for&lt;/span&gt;
&lt;span class="sd"&gt; full documentation on this library.&lt;/span&gt;

&lt;span class="sd"&gt;— -&lt;/span&gt;

&lt;span class="sd"&gt;$ python md2mb.py [maildir_path] [mbox_filename]&lt;/span&gt;

&lt;span class="sd"&gt;[maildir_path] should be the the path to the actual maildir (containing new,&lt;/span&gt;
&lt;span class="sd"&gt; cur, tmp, and the subfolders, which are hidden directories with names like&lt;/span&gt;
&lt;span class="sd"&gt; .subfolde.subsubfolder.subsubsbfolder);&lt;/span&gt;

&lt;span class="sd"&gt;[mbox_filename] will be newly created, as well as a [mbox_filename].sbd the&lt;/span&gt;
&lt;span class="sd"&gt; directory.&lt;/span&gt;
&lt;span class="sd"&gt; &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mailbox&lt;/span&gt;
 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;email&lt;/span&gt;
 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;maildir2mailbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maildirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mboxfilename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt; slightly adapted from maildir2mbox.py,&lt;/span&gt;
&lt;span class="sd"&gt; Nathan R. Yergler, 6 June 2010&lt;/span&gt;
&lt;span class="sd"&gt; [http://yergler.net/blog/2010/06/06/batteries-included-or-maildir-to-mbox-again/](http://yergler.net/blog/2010/06/06/batteries-included-or-maildir-to-mbox-again/)&lt;/span&gt;
&lt;span class="sd"&gt; and Frédéric Grosshans, 19 January 2012&lt;/span&gt;
&lt;span class="sd"&gt; [http://stackoverflow.com/questions/2501182/convert-maildir-to-mbox](http://stackoverflow.com/questions/2501182/convert-maildir-to-mbox)&lt;/span&gt;

&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
 &lt;span class="c1"&gt;# open the existing maildir and the target mbox file&lt;/span&gt;
 &lt;span class="n"&gt;maildir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mailbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Maildir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maildirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;message_from_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;mbox&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mailbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mboxfilename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# lock the mbox&lt;/span&gt;
 &lt;span class="n"&gt;mbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# iterate over messages in the maildir and add to the mbox&lt;/span&gt;
 &lt;span class="n"&gt;mbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# close and unlock&lt;/span&gt;
 &lt;span class="n"&gt;mbox&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="n"&gt;maildir&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;#Creates the main mailbox&lt;/span&gt;
 &lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="n"&gt;mboxname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="n"&gt;mboxdirname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mboxname&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.sbd&amp;#39;&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mboxdirname&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mboxdirname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Iterate over all folders&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;folder_iterate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mboxname&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &lt;span class="n"&gt;listofdirs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dn&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dn&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;walk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;dn&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;new&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cur&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tmp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
 &lt;span class="n"&gt;curlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mboxname&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;curfold&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;curpath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dn&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.sbd&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dn&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;curlist&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;dn&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curpath&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curpath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;maildir2mailbox&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;curfold&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;curpath&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
 &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;no maildir folders&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;folder_iterate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;curfold&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;mboxname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;folder_iterate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mboxname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Done&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>Make money mining a cryptocurrency</title><link href="https://shanedowling.com/make-money-mining-a-cryptocurrency-618d8f4727bf.html" rel="alternate"></link><published>2014-01-04T00:00:00+00:00</published><updated>2014-01-04T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2014-01-04:/make-money-mining-a-cryptocurrency-618d8f4727bf.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__gEF0IVFmJ4OZC__A9XrmnEA__2x.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;A while back I wrote a post on my tech blog about using a tool called
salt to configure your boxes to mine a crypto-currency. The currency I was mining was Anoncoin and I jokingly said it was a bit of fun that would make no money. Turns out, as …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__gEF0IVFmJ4OZC__A9XrmnEA__2x.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;A while back I wrote a post on my tech blog about using a tool called
salt to configure your boxes to mine a crypto-currency. The currency I was mining was Anoncoin and I jokingly said it was a bit of fun that would make no money. Turns out, as Anoncoin grew against Bitcoin which by itself was significantly increasing in value, I managed to make a nice little contribution towards the cost of my servers for the year.&lt;/p&gt;
&lt;p&gt;Anyway, while I wasn't really keeping an eye on things it looks like
alternative currencies seem to be doing quite well. So I figured I put
up a little guide here on things to help people get started with mining
your own coins. It might look like your making only small amounts over
time but you can't really anticipate how the coin's value might increase
over time. Plus you'll be contributing to one of the coolest aspects of
these crypto-currencies, decentralized mining
So here's the steps:&lt;/p&gt;
&lt;h3&gt;1. Get a server to run your miner.&lt;/h3&gt;
&lt;p&gt;Amazon has a free usage tier which gives you a free small instance for a year. So sign up and give it a go. I'd suggest just going with Ubuntu if you're new to things and make sure to use a 64 bit AMI.&lt;/p&gt;
&lt;h3&gt;2. Choose the right currency.&lt;/h3&gt;
&lt;p&gt;Do some research. Coins-e provides a lot of good information on the historical price of currency prices. Take a look at what the prospects are like for your currency and how they've performed against Bitcoin.&lt;/p&gt;
&lt;p&gt;Reddit CryptoCurrencies– There's a lot of disparate info here. I'd suggest deciding on a currency, then searching on this subreddit for related information.&lt;/p&gt;
&lt;p&gt;Also take a look at trading volume as an indicator of future prospects:
http://coinmarketcap.com/ or &lt;a href="https://www.cryptsy.com/"&gt;https://www.cryptsy.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You should also look at computational difficultly and what you'd earn
right now too. &lt;a href="http://dustcoin.com/mining"&gt;http://dustcoin.com/mining&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Basically the more established the currency, the harder it will be to
mine as you'll be competing with a lot of other miners. The sweet spot
is to mine a currency in it's infancy, while there's not a lot of mining
competition. Then win if it increases in value against Litecoin or
Bitcoin, but it's obviously a difficult one to predict. Two of the higher value currencies, Anoncoin and Protoshares might be a good starting point, but if you see any murmurings that another currency might make it big, go for that. For the purposes of this guide I'll show you how to start on those two.&lt;/p&gt;
&lt;h3&gt;3. Find a mining pool.&lt;/h3&gt;
&lt;p&gt;A mining pool is where multiple clients come together and contribute to
the mining of a currency. I won't go into details, but unless you have
serious hardware it's going to be computationally too difficult to mine
coins by yourself.&lt;/p&gt;
&lt;p&gt;For Anoncoin I use coinpool.in and for Protoshares I've used ypool.net. All you need to do is sign up for an account and create a worker for the mining software you'll run on your server to point to.&lt;/p&gt;
&lt;h3&gt;4. Set up the miner on your server.&lt;/h3&gt;
&lt;p&gt;Login to your server using ssh and run these commands. Replace
username.worker and password with the worker details you created &lt;strong&gt;not your login details for the mining pool&lt;/strong&gt;.
&lt;strong&gt;Note:&lt;/strong&gt; These are the details for using a cpuminer. If you're running
this on a server you should be using a cpu-based miner. GPU miners are
better equipped for crypto-currencies in general, but that's out of the
scope of this article. If you want to skip the server steps and run this
on your local machine, try out Guiminer for
windows or Asteriod for OSX.&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;Protoshare&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
wget [http://www.theopeneffect.com/jhprotominer-yvg1900-M7c-linux64-core2.tgz](http://www.theopeneffect.com/jhprotominer-yvg1900-M7c-linux64-core2.tgz)
 tar zxvf jhprotominer-yvg1900-M7c-linux64-core2.tgz
 cd jhprotominer-yvg1900-M7c-linux64-core2
 cd linux64-core2–256M
 ./jhprotominer -O \`ypool.net \`__ -u username.worker -p password -t 5&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Note, 256M is the amount of memory per thread and 5 is the amount of
threads that will run. So on these options you would need a box with
256*5 MBs of memory which is 1280Mbs. Change these figures accordingly with how much memory your server has free. You can check this with free -m.&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;Anoncoin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
sudo apt-get install build-essential libcurl4-openssl-dev
 wget [http://sourceforge.net/projects/cpuminer/files/pooler-cpuminer-2.3.2.tar.gz](http://sourceforge.net/projects/cpuminer/files/pooler-cpuminer-2.3.2.tar.gz)
 tar xzf pooler-cpuminer-*.tar.gz
 cd cpuminer-*
 ./configure CFLAGS="-O3"
 make
 ./minerd - url=stratum+tcp://anc.coinpool.in:3333 –userpass=username.worker:password&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Double check with your mining pool that your worker is connected and
running. It's also very similar steps for running many other crypto-currencies, I'm sure the mining pool you find will have better
steps than these too.&lt;/p&gt;
&lt;h3&gt;5. Leave it running for a few days/weeks/months/forever.&lt;/h3&gt;
&lt;h3&gt;6. Converting to Bitcoin.&lt;/h3&gt;
&lt;p&gt;Once you've mined a reasonable number of coins you can choose to cash
them out. Firstly, you'll need to convert the currency to Bitcoin. I
would use coins-e.com for this. Create an account and generate a deposit address to receive the funds from your mining pool.
Basically from your mining pools UI you should be able to Cash Out, enter the amount you've mined and the coins-e.com address. Wait a few minutes for the transfer to happen. Then on coin-e you easily be able to convert the deposited currency to Bitcoin. Don't worry, you're almost there.&lt;/p&gt;
&lt;h3&gt;7. Cashing out&lt;/h3&gt;
&lt;p&gt;Now that you have your Bitcoin it's time to turn it into cold, hard
cash. I use Bitstamp for this. You'll need to enter bank account details etc. Now using the bitcoin wallet address you'll get on Bitstamp, you should easily be able to trade the bitcoins for dollar cash monies. Then it's simply a case of withdrawing it to your bank account. As soon as the money is in dollars, withdraw it. I've found these Bitcoin exchanges are ALWAYS less reliable than bank accounts. Due to poor quality exchanges I have frozen money sitting in several countries that I'll probably never get back. Having dollars in these places isn't secure, so make your transactions as fast as possible.&lt;/p&gt;
&lt;p&gt;Anyway, that took longer than I'd hoped. If you happen to have any
questions or improvements you think I could add, feel free to comment.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Thrashing your networks download with dispatch and axel</title><link href="https://shanedowling.com/thrashing-your-networks-download-with-dispatch-and-axel-771526f193b7.html" rel="alternate"></link><published>2013-12-12T00:00:00+00:00</published><updated>2013-12-12T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-12-12:/thrashing-your-networks-download-with-dispatch-and-axel-771526f193b7.html</id><summary type="html">&lt;p&gt;Say you need to grab a file as fast as possible and you also happen to
have a few network connections knocking about. For example maybe a
separate network for your wireless and ethernet. Maybe you have a phone
with tethering or a 3g dongle. This little guide will get …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Say you need to grab a file as fast as possible and you also happen to
have a few network connections knocking about. For example maybe a
separate network for your wireless and ethernet. Maybe you have a phone
with tethering or a 3g dongle. This little guide will get your download
distributed across these connections and hopefully significantly speed
things up.&lt;/p&gt;
&lt;p&gt;Beforehand you'll need &lt;a href="http://nodejs.org/download/"&gt;npm&lt;/a&gt;, &lt;a href="https://github.com/Morhaus/dispatch-proxy"&gt;dispatch&lt;/a&gt; and &lt;a href="http://axel.alioth.debian.org/"&gt;axel download manager&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Connect all of your network connections and get the IPs they have been
allocated. I had some virtualbox connections appear as valid so make
sure dispatch is using the right ones. You can actually use dispatch
itself to list all potential connections.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dispatch list
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run dispatch with those IPs&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dispatch start — http &lt;span class="m"&gt;192&lt;/span&gt;.168.111.68 &lt;span class="m"&gt;192&lt;/span&gt;.168.111.223
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Configure axel to use dispatch&lt;/p&gt;
&lt;p&gt;~/.axelrc&lt;/p&gt;
&lt;p&gt;http_proxy=http://localhost:8080&lt;/p&gt;
&lt;p&gt;Download something&lt;/p&gt;
&lt;p&gt;axel &lt;a href="http://cdimage.debian.org/debian-cd/7.2.0/amd64/iso-cd/debian-7.2.0-amd64-netinst.iso"&gt;http://cdimage.debian.org/debian-cd/7.2.0/amd64/iso-cd/debian-7.2.0-amd64-netinst.iso&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now axel should download across all of your devices but using multiple
connections and a single file thread, so no slow file concatenation at
the end.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Fixing a broken vagrant box</title><link href="https://shanedowling.com/fixing-a-broken-vagrant-box-cd6f169a62eb.html" rel="alternate"></link><published>2013-10-17T00:00:00+00:00</published><updated>2013-10-17T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-10-17:/fixing-a-broken-vagrant-box-cd6f169a62eb.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__TalXSpVG5yo__Lucbr1Wm6w.png"&gt;&lt;/p&gt;
&lt;p&gt;The first time this happened I went into a cold sweat. My box with all
dev versions of my companies live databases had died. Of course I had
the box provisioned with salt so configuration wasn't a problem, but
grabbing all those databases, downloading, altering specific internal
values and inserting …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__TalXSpVG5yo__Lucbr1Wm6w.png"&gt;&lt;/p&gt;
&lt;p&gt;The first time this happened I went into a cold sweat. My box with all
dev versions of my companies live databases had died. Of course I had
the box provisioned with salt so configuration wasn't a problem, but
grabbing all those databases, downloading, altering specific internal
values and inserting them was going to cost me hours. These steps
should've been salted too but I hadn't gotten round to it yet.&lt;/p&gt;
&lt;p&gt;When I brought my vagrant box up, vagrant kept thinking that my original
box had gone and kept trying to re-create a new one and provisioning it.
Instead of starting from scratch I dug down and tried to figure out the
problem. This issue has happened on several occasions for me so I
figured I'd document the steps to fix it.
-&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Start up virtualbox and make sure the box is still there and working.&lt;/li&gt;
&lt;li&gt;Sometimes I find that the .vbox file can get corrupted. This sucks but go into the folder that contains the vbox file and see if there's a VM_NAME.vbox-prev and copy that back to VM_NAME.vbox and try to run it just via virtualbox to see if it picks back up. This was always my issue, I believe because my laptop sometimes ran out of space and virtualbox tries to write a new file it can't and simply writes something corrupted.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Make sure Vagrant points to your working VirtualMachine&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;While trying to get vagrant up and running again it may have create a bunch of similar boxes, get rid of those and retain the box you want to keep.&lt;/li&gt;
&lt;li&gt;Run this VBoxManage list vms and get the GUID of your newly fixed box.&lt;/li&gt;
&lt;li&gt;From the vagrant box directory go to .vagrant/machines/default/virtualbox and replace the contents of this file with just the GUID. &lt;strong&gt;Make sure no newline exists at the end of this file.&lt;/strong&gt; This is key. A lot of editors will automatically add a newline here and won't present it when you attempt to delete the newline. Try diffing this id file with the id file from another vagrant box to see if the newline still appears. Otherwise, vim will also state noeol in it's statusbar to confirm there is no end of line.&lt;/li&gt;
&lt;li&gt;Run vagrant status and see if it picks up your old box, if it doesn't make sure step 4 is correct.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Test your VM&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure none of the other VMs are still running. I use the &lt;a href="https://github.com/joshmcarthur/vagrant-list"&gt;vagrant list plugin&lt;/a&gt; for this. Once installed run vagrant list.&lt;/li&gt;
&lt;li&gt;Then I shut down any that might conflict with my VM using VBoxManage controlvm VM_NAME poweroff&lt;/li&gt;
&lt;li&gt;Then vagrant reload my vagrant box to ensure everything works.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Tech"></category></entry><entry><title>Using PPAs with Salt-States</title><link href="https://shanedowling.com/using-ppas-with-salt-states-dd60c32c1211.html" rel="alternate"></link><published>2013-10-10T00:00:00+00:00</published><updated>2013-10-10T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-10-10:/using-ppas-with-salt-states-dd60c32c1211.html</id><summary type="html">&lt;p&gt;I couldn't seem to find a decent tutorial on using PPA's to manage repos
with salt states so I'm documenting it here.&lt;/p&gt;
&lt;p&gt;Say you want to install golang using these&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo add-apt-repository ppa:duh/golang
sudo apt-get update
sudo apt-get install golang
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Well, to replicate this into a salt state …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I couldn't seem to find a decent tutorial on using PPA's to manage repos
with salt states so I'm documenting it here.&lt;/p&gt;
&lt;p&gt;Say you want to install golang using these&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo add-apt-repository ppa:duh/golang
sudo apt-get update
sudo apt-get install golang
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Well, to replicate this into a salt state it's pretty straight-foward.
This also ensures you always have an up-to-date version of go.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;golang&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;pkg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
 &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;latest&lt;/span&gt;
&lt;span class="nt"&gt;pkgrepo.managed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
 &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ppa:duh/golang&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's it, I just struggled to find that anyway.&lt;/p&gt;
&lt;p&gt;Also, I'm aware &lt;a href="https://github.com/moovweb/gvm"&gt;gvm&lt;/a&gt; is awesome but I wanted to get something up and running quick and this was a nice example.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Making Drupal 6 Development Suck Less</title><link href="https://shanedowling.com/making-drupal-6-development-suck-less-ea6930df8056.html" rel="alternate"></link><published>2013-10-03T00:00:00+00:00</published><updated>2013-10-03T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-10-03:/making-drupal-6-development-suck-less-ea6930df8056.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__pyKonP__4TTO__P9guQ1lY9A.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;So you're here. Like myself probably stuck developing for `Drupal
6 `__. All the modules on-line are for
the latest and greatest versions of Drupal and you're scouring posts
from 2009 to try find that deprecated module you really need. Well his
post is dedicated to making your life that little …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__pyKonP__4TTO__P9guQ1lY9A.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;So you're here. Like myself probably stuck developing for `Drupal
6 `__. All the modules on-line are for
the latest and greatest versions of Drupal and you're scouring posts
from 2009 to try find that deprecated module you really need. Well his
post is dedicated to making your life that little bit less painful,
because I too feel your pain.&lt;/p&gt;
&lt;h3&gt;Better debugging with &lt;a href="https://drupal.org/project/devel"&gt;devel&lt;/a&gt;.&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;a href="http://subversion.tigris.org/"&gt;subversion&lt;/a&gt; (to allow devel to download the firePHP extension code needed).&lt;/li&gt;
&lt;li&gt;Make sure &lt;a href="http://drush.ws/"&gt;drush&lt;/a&gt; is installed.&lt;/li&gt;
&lt;li&gt;drush dl devel &amp;amp;&amp;amp; drush en devel&lt;/li&gt;
&lt;li&gt;Enable user permissions for devel&lt;/li&gt;
&lt;li&gt;Enable what you need to at &lt;a href="http://root%5C_url.com/admin/settings/devel"&gt;http://rooturl.com/admin/settings/devel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://getfirebug.com/"&gt;FireBug&lt;/a&gt; and &lt;a href="http://firephp.org/"&gt;FirePHP&lt;/a&gt; on firefox and enable the Net Panel in firebug&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Usage&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Checkout watchdog output on firePHP, pretty cool eh?&lt;/li&gt;
&lt;li&gt;You can see queries in the sidebar or if you're logging them, here &lt;a href="http://example.com/devel/queries"&gt;http://example.com/devel/queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Directly output to firephp with(alternate WARN with ERROR or INFO):&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;dfb($foo, 'probably bad', FirePHP::WARN);&lt;/p&gt;
&lt;h3&gt;Drupal Specific Vim Config&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/joonty/vim-sauce"&gt;&lt;strong&gt;VimSauce&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I like to keep my vim configurations separate from each other so I don't
end up with huge messy config files with settings overlapping and
breaking things. Before I used some shell aliases to alter symlinks to
different vim configurations I had. Now, I use &lt;a href="https://github.com/joonty/vim-sauce"&gt;vimsauce&lt;/a&gt; to manage them. Once you got VimSauce installed(I'd recommend Vundle) create a new Drupal specific sauce with&lt;/p&gt;
&lt;p&gt;:SauceNew drupal&lt;/p&gt;
&lt;p&gt;then edit it with&lt;/p&gt;
&lt;p&gt;:SauceEdit drupal&lt;/p&gt;
&lt;p&gt;&lt;a href="https://drupal.org/project/vimrc"&gt;&lt;strong&gt;Drupal Vimrc&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project provides vimrc customisations for Drupal-specific editing. Exactly what&lt;/p&gt;
&lt;p&gt;drush @none dl vimrc&lt;/p&gt;
&lt;p&gt;This should install the file into ~/.drush/vimrc/bundle. Now you need to
configure your new vimsauce file to work with the drupal vimrc
customisations. The vimrc below should explain things. It's a merge of
the vimsauce default settings, a file I found under
~/.drush/vimrc/examples/vimrc_timplunkett.vim and the pathogen
settings.&lt;/p&gt;
&lt;p&gt;set nocompatible call pathogen#infect('/home/user/.drush/vimrc/bundle') call pathogen#infect('/home/user/.vimsauce/drupal/bundle') " End of vimrc-install additions.&lt;/p&gt;
&lt;p&gt;let g:current_dir = "~/code/drupal" exec 'cd ' . g:current_dir&lt;/p&gt;
&lt;p&gt;" Allow Vim-only settings even if they break vi keybindings. set nocompatible&lt;/p&gt;
&lt;p&gt;" Enable filetype detection filetype plugin on&lt;/p&gt;
&lt;p&gt;" General settings set incsearch "Find as you type set scrolloff=2 "Number of lines to keep above/below cursor set number "Show line numbers set wildmode=longest,list "Complete longest string, then list alternatives set pastetoggle= "Toggle paste mode set fileformats=unix "Use Unix line endings set history=300 "Number of commands to remember set showmode "Show whether in Visual, Replace, or Insert Mode set showmatch "Show matching brackets/parentheses set backspace=2 "Use standard backspace behavior set hlsearch "Highlight matches in search set ruler "Show line and column number set formatoptions=1 "Don't wrap text after a one-letter word set linebreak "Break lines when appropriate&lt;/p&gt;
&lt;p&gt;" Persistent Undo (vim 7.3 and later) if exists('&amp;amp;undofile') &amp;amp;&amp;amp; !&amp;amp;undofile set undodir=~/.vim_runtime/undodir set undofile endif&lt;/p&gt;
&lt;p&gt;" Enable syntax highlighting if &amp;amp;t_Co &amp;gt; 1 syntax enable endif syntax on&lt;/p&gt;
&lt;p&gt;" Custom key mapping map :redo map :tabn map :tabp&lt;/p&gt;
&lt;p&gt;" Uncomment the following to have Vim jump to the last position when " reopening a file if has("autocmd") au BufReadPost * if line("'"") &amp;gt; 0 &amp;amp;&amp;amp; line("'"") &amp;lt;= line("$") | exe "normal! g'"" | endif endif&lt;/p&gt;
&lt;h3&gt;Sticking to a Coding Standard&lt;/h3&gt;
&lt;p&gt;So I try to always adhere to the coding standard of whatever system I'm
using. Typically that's easy but I've found getting my hands on a
automated check that ensures my code is up to drupal's standards a
little difficult(especially with drupal 6). Firstly you need to install
PHP's codesniffer, which I did using PEAR.&lt;/p&gt;
&lt;p&gt;sudo pear install PHP_CodeSniffer&lt;/p&gt;
&lt;p&gt;In the end I was forced to use a Drupal 7 specific codesniffer. This
project has actually been merged into the Coder project but as I'm using
Drupal 6, the current version of coder that works with Drupal 6 doesn't
include the codesniffer. So I nabbed the latest standalone version of
drupal codesniffer.&lt;/p&gt;
&lt;p&gt;wget &lt;a href="http://ftp.drupal.org/files/projects/drupalcs-7.x-1.x-dev.tar.gz"&gt;http://ftp.drupal.org/files/projects/drupalcs-7.x-1.x-dev.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I then extract it to my ~/.drush folder and symlink it to where pear has
placed php codesniffers various syntax checking config files&lt;/p&gt;
&lt;p&gt;sudo ln -sv ~/.drush/drupalcs/Drupal $(pear config-getphp_dir)/PHP/CodeSniffer/Standards&lt;/p&gt;
&lt;p&gt;Now, this is the setting that I've come across that apparently changes
phpcs to use Drupal as the standard which codesniffer adheres to.&lt;/p&gt;
&lt;h3&gt;Use drupals codesniffer&lt;/h3&gt;
&lt;p&gt;let g:syntastic_phpcs_conf=" — standard=Drupal — extensions=php,module,inc,install,test,profile,theme"&lt;/p&gt;
&lt;p&gt;I could not get this to work. It simply refused to budge from the
standard PSR syntax checker that is the default for PHP codesniffer. I
was forced to just set the default to drupal's.&lt;/p&gt;
&lt;p&gt;sudo phpcs — config-set default_standard Drupal&lt;/p&gt;
&lt;p&gt;This is a little annoying if you jump between standard PHP projects and
Drupal projects, so I added a system command call to my various vim
sauces to set php codesniffer to the correct standard. It should bug you
to enter a sudo password, but I'd rather that than having to explicitly
run these commands.&lt;/p&gt;
&lt;p&gt;call system("sudo phpcs — config-set default_standard Drupal")&lt;/p&gt;
&lt;p&gt;This post has already gotten very long but I'll try to write something
up on getting unit-testing up and running with Drupal 6 at a later
stage. I can attest it is possible, just a bit of a pain in the ass.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Connect to routers anonymously</title><link href="https://shanedowling.com/connect-to-routers-anonymously-9287ec7e7951.html" rel="alternate"></link><published>2013-09-28T00:00:00+00:00</published><updated>2013-09-28T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-09-28:/connect-to-routers-anonymously-9287ec7e7951.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__2zYJ6QvnP__Z17B321DD7NQ.png"&gt;&lt;/p&gt;
&lt;p&gt;I've created a little script that incorporates
&lt;a href="https://launchpad.net/wicd"&gt;wicd&lt;/a&gt;, &lt;a href="https://github.com/alobbs/macchanger"&gt;macchanger&lt;/a&gt;, &lt;a href="http://unixhelp.ed.ac.uk/CGI/man-cgi?hostname"&gt;hostname&lt;/a&gt; and &lt;a href="http://www.openwall.com/john/"&gt;john the ripper's&lt;/a&gt; password list to randomise your mac address and hostname when connecting to the internet.&lt;/p&gt;
&lt;p&gt;I've gone with wicd over network manager as network-manager has a
tendency to store connection details, so while your machine might id …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__2zYJ6QvnP__Z17B321DD7NQ.png"&gt;&lt;/p&gt;
&lt;p&gt;I've created a little script that incorporates
&lt;a href="https://launchpad.net/wicd"&gt;wicd&lt;/a&gt;, &lt;a href="https://github.com/alobbs/macchanger"&gt;macchanger&lt;/a&gt;, &lt;a href="http://unixhelp.ed.ac.uk/CGI/man-cgi?hostname"&gt;hostname&lt;/a&gt; and &lt;a href="http://www.openwall.com/john/"&gt;john the ripper's&lt;/a&gt; password list to randomise your mac address and hostname when connecting to the internet.&lt;/p&gt;
&lt;p&gt;I've gone with wicd over network manager as network-manager has a
tendency to store connection details, so while your machine might id
your hostname or mac address as something new, network-manager will
actually connect using the original stored details.&lt;/p&gt;
&lt;p&gt;I must admit I enjoyed writing this, it reminded me of the old days when
linux network managers were all rubbish and you had to write bash
scripts to connect to vaguely complex network configurations.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
 &lt;span class="c1"&gt;# Anonymise your machines internet connection&lt;/span&gt;

&lt;span class="c1"&gt;# Settings&lt;/span&gt;
 &lt;span class="nv"&gt;INTERFACE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;wlan1
 &lt;span class="nv"&gt;HOSTS_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/hosts&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;START_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;## start-anon&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;END_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;## end-anon&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Must be run as root&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="nv"&gt;$EUID&lt;/span&gt; -ne &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
 &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;This script must be run as root\\n&amp;quot;&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
 &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
 &lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# Network restart function&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Linux&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="se"&gt;\`&lt;/span&gt;uname&lt;span class="se"&gt;\`&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
 &lt;span class="nv"&gt;restart_network&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/etc/init.d/networking restart&amp;quot;&lt;/span&gt;
 &lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# Function to clear old data and add new hosts entry&lt;/span&gt;
 &lt;span class="k"&gt;function&lt;/span&gt; update_hosts&lt;span class="o"&gt;()&lt;/span&gt;
 &lt;span class="o"&gt;{&lt;/span&gt;
 &lt;span class="c1"&gt;# if no hosts file found…&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -f &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="k"&gt;then&lt;/span&gt;
 &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="se"&gt;\\&lt;/span&gt;n&lt;span class="s2"&gt;&amp;quot;No hosts file found\\n&amp;quot;&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
 &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
 &lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
 &lt;span class="nv"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;

&lt;span class="nv"&gt;sed_script&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{&lt;/span&gt;
&lt;span class="s2"&gt; s/&lt;/span&gt;&lt;span class="nv"&gt;$END_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$END_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;
&lt;span class="s2"&gt; t finished_sites&lt;/span&gt;

&lt;span class="s2"&gt;s/&lt;/span&gt;&lt;span class="nv"&gt;$START_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$START_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;
&lt;span class="s2"&gt; x&lt;/span&gt;
&lt;span class="s2"&gt; t started_sites&lt;/span&gt;

&lt;span class="s2"&gt;s/&lt;/span&gt;&lt;span class="nv"&gt;$START_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$START_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;
&lt;span class="s2"&gt; x&lt;/span&gt;
&lt;span class="s2"&gt; t started_sites&lt;/span&gt;

&lt;span class="s2"&gt;p&lt;/span&gt;
&lt;span class="s2"&gt; b end&lt;/span&gt;
&lt;span class="s2"&gt; : started_sites&lt;/span&gt;
&lt;span class="s2"&gt; d&lt;/span&gt;
&lt;span class="s2"&gt; : finished_sites&lt;/span&gt;
&lt;span class="s2"&gt; x&lt;/span&gt;
&lt;span class="s2"&gt; d&lt;/span&gt;
&lt;span class="s2"&gt; : end&lt;/span&gt;
&lt;span class="s2"&gt; d&lt;/span&gt;
&lt;span class="s2"&gt; }&amp;quot;&lt;/span&gt;

hostname &lt;span class="nv"&gt;$host&lt;/span&gt;

sed — &lt;span class="k"&gt;in&lt;/span&gt;-place -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$sed_script&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt;
 &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$START_TOKEN&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$file&lt;/span&gt;
 &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\n127.0.1.1 &lt;/span&gt;&lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="s2"&gt;\\n&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$file&lt;/span&gt;
 &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$END_TOKEN&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$file&lt;/span&gt;
 &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Presenting original information&lt;/span&gt;
 &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Starting to anonimise your data\\n&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Stop Wicd&lt;/span&gt;
 sudo service wicd stop
 sleep &lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;#changing mac address to random&lt;/span&gt;
 ifconfig &lt;span class="nv"&gt;$INTERFACE&lt;/span&gt; down &amp;gt; /dev/null
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
 &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%snChanging mac address…\\n&amp;quot;&lt;/span&gt;
 macchanger -r &lt;span class="nv"&gt;$INTERFACE&lt;/span&gt;
 &lt;span class="k"&gt;else&lt;/span&gt;
 &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%sScript encountered an error, sorry…\\n&amp;quot;&lt;/span&gt;
 &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
 &lt;span class="k"&gt;fi&lt;/span&gt;
 sleep &lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;# Use john to supply new hostname to function&lt;/span&gt;
 &lt;span class="nv"&gt;OLDHOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;hostname&lt;span class="k"&gt;)&lt;/span&gt;
 &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%s\\nChanging hostname…\\n&amp;quot;&lt;/span&gt;
 &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Current : &lt;/span&gt;&lt;span class="nv"&gt;$OLDHOST&lt;/span&gt;&lt;span class="s2"&gt; \\n&amp;quot;&lt;/span&gt;
 &lt;span class="nv"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/john/password.lst
 &lt;span class="nv"&gt;WORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;sort -R &lt;span class="nv"&gt;$FILE&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; head -1&lt;span class="k"&gt;)&lt;/span&gt;
 update_hosts &lt;span class="nv"&gt;$HOSTS_FILE&lt;/span&gt; &lt;span class="nv"&gt;$WORD&lt;/span&gt;
 &lt;span class="nv"&gt;NEWHOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;hostname&lt;span class="k"&gt;)&lt;/span&gt;
 &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;New : &lt;/span&gt;&lt;span class="nv"&gt;$NEWHOST&lt;/span&gt;&lt;span class="s2"&gt; \\n&amp;quot;&lt;/span&gt;
 sleep &lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;# putting interface up&lt;/span&gt;
 ifconfig &lt;span class="nv"&gt;$INTERFACE&lt;/span&gt; up &amp;gt; /dev/null
 &lt;span class="nb"&gt;printf&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\\n&amp;quot;&lt;/span&gt;
 sleep &lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;# Restart networking&lt;/span&gt;
 &lt;span class="nv"&gt;$restart_network&lt;/span&gt;

&lt;span class="c1"&gt;# Get wicd back up and running&lt;/span&gt;
 service wicd start
 sleep &lt;span class="m"&gt;1&lt;/span&gt;

wicd-gtk &amp;gt; /dev/null &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>Explainshell</title><link href="https://shanedowling.com/explainshell-52cc1de7a71a.html" rel="alternate"></link><published>2013-09-13T00:00:00+00:00</published><updated>2013-09-13T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-09-13:/explainshell-52cc1de7a71a.html</id><content type="html">&lt;p&gt;&lt;a href="https://explainshell.com" title="https://explainshell.com"&gt;&lt;strong&gt;explainshell.com - &lt;em&gt;match command-line arguments to their help text&lt;/em&gt;&lt;/strong&gt;
match command-line arguments to their help textexplainshell.com&lt;/a&gt;&lt;a href="https://explainshell.com"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A very nice visualization of command line args.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Salt Miner</title><link href="https://shanedowling.com/salt-miner-5d8c30f9d61f.html" rel="alternate"></link><published>2013-09-07T00:00:00+00:00</published><updated>2013-09-07T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-09-07:/salt-miner-5d8c30f9d61f.html</id><summary type="html">&lt;p&gt;I've just created a salt state that allows you to install a
crypto-currency miner across your salt provisioned boxes. It's only
tested on Ubuntu and Debian, but I intend to extend it to
Archlinux(there's a lovely aur package that does all the work).
Currently I'm mining &lt;a href="https://anoncoin.net/"&gt;anoncoins&lt;/a&gt; as you …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've just created a salt state that allows you to install a
crypto-currency miner across your salt provisioned boxes. It's only
tested on Ubuntu and Debian, but I intend to extend it to
Archlinux(there's a lovely aur package that does all the work).
Currently I'm mining &lt;a href="https://anoncoin.net/"&gt;anoncoins&lt;/a&gt; as you have
some chance of making tiny amounts of cash and it's &lt;a href="https://www.cryptsy.com/markets/view/66"&gt;exchange rate
against Bitcoins isn't so bad&lt;/a&gt; but feel free to choose whatever coin you like.&lt;/p&gt;
&lt;p&gt;Make literally pennies per day on your salt provisioned servers using a
crappy unprofitable CPU-based miner! Yes, this was a labor of love, not
profit. The git repo is &lt;a href="https://github.com/shano/salty-miner"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So when no one is visiting your blog and no one is using your web app at
least you can be happy knowing your servers are doing something small
towards paying themselves off.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Unit-testing unmanaged Django models</title><link href="https://shanedowling.com/unit-testing-unmanaged-django-models-bf2cb6837fec.html" rel="alternate"></link><published>2013-08-31T00:00:00+00:00</published><updated>2013-08-31T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-08-31:/unit-testing-unmanaged-django-models-bf2cb6837fec.html</id><summary type="html">&lt;p&gt;Say you have an app with a set of models that aren't being managed by
Django, you're going to run into trouble when it comes time to run
unit-tests against these. What I mean is if in the model meta you have
something like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="n"&gt;app_label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;your_app_label …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Say you have an app with a set of models that aren't being managed by
Django, you're going to run into trouble when it comes time to run
unit-tests against these. What I mean is if in the model meta you have
something like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="n"&gt;app_label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;your_app_label&amp;#39;&lt;/span&gt;
 &lt;span class="n"&gt;managed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
 &lt;span class="n"&gt;db_table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;your_table_name&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you run unit-tests against these models the trouble occurs because
django will ignore this model when creating tables in the test database
and you'll get a relation not defined error for 'your_table_name'. The
solution to this is to create an app specific TestRunner that will
over-ride this setting and temporarily allow Django to manage your
models, just for testing purposes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.test.simple&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DjangoTestSuiteRunner&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ManagedModelTestRunner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DjangoTestSuiteRunner&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt; Test runner that automatically makes all unmanaged models in your Django&lt;/span&gt;
&lt;span class="sd"&gt; project managed for the duration of the test run, so that one doesn&amp;#39;t need&lt;/span&gt;
&lt;span class="sd"&gt; to execute the SQL manually to create them.&lt;/span&gt;
&lt;span class="sd"&gt; &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
 &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setup_test_environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models.loading&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_models&lt;/span&gt;
    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unmanaged_models&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;get_models&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_meta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;managed&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_meta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app_label&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;your_app_label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_meta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;managed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
    &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManagedModelTestRunner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup_test_environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;teardown_test_environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ManagedModelTestRunner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;teardown_test_environment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# reset unmanaged models&lt;/span&gt;
    &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_meta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;managed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This code was lovingly taken from &lt;a href="http://www.caktusgroup.com/blog/2010/09/24/simplifying-the-testing-of-unmanaged-database-models-in-django/"&gt;here&lt;/a&gt; and extending very slightly to only include models that exist under the my_app_label app. I don't want my app's test to go fudging around with others, unless it's needed.&lt;/p&gt;
&lt;p&gt;To then run tests with this testrunner, create a test_settings.py that
looks something like this. This which basically tells Django to import
your existing settings but to use your newly created TestRunner&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;settings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="n"&gt;TEST_RUNNER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;your_app_label.scripts.testrunner.ManagedModelTestRunner&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./manage.py &lt;span class="nb"&gt;test&lt;/span&gt; your_app_label &lt;span class="nv"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;you_app_label.settings.test_settings
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>Suppling test data to django-cities</title><link href="https://shanedowling.com/suppling-test-data-to-django-cities-6afd013f671d.html" rel="alternate"></link><published>2013-08-29T00:00:00+00:00</published><updated>2013-08-29T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-08-29:/suppling-test-data-to-django-cities-6afd013f671d.html</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/coderholic/django-cities"&gt;Django-Cities&lt;/a&gt;, is an awesome project that supplies easy to import worldwide location data and a set of very neat location models that you should really be using for any django project needing location information. I've been using it lately but ran into problems when I tried to run unit tests …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://github.com/coderholic/django-cities"&gt;Django-Cities&lt;/a&gt;, is an awesome project that supplies easy to import worldwide location data and a set of very neat location models that you should really be using for any django project needing location information. I've been using it lately but ran into problems when I tried to run unit tests that made use of the django-cities app.&lt;/p&gt;
&lt;p&gt;As django-cities populates a load of data via it's import command it can
take a long time(over an hour) before a test database with all the data
could be created. So I needed a stop-gap solution to quickly get a
workable dataset up and running for a few small unit tests.&lt;/p&gt;
&lt;p&gt;I find fixtures problematic, data may change over time and maintaining a
bunch of JSON files to represent a few simple locations can be a pain.
So here's a very quick example of how I use the ORM to populate a single
location hierarchy for your tests.py.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

  &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;country&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Country&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;United Kingdom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;UK&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tld&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;co.uk&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;population&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;62740000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;country&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Region&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;London&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name_std&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;London&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;LDN&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;country&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;country&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;City&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Camden&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name_std&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Camden&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;region&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;country&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;country&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;population&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8174000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;POINT (3400000 6700010)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The city POINT location is totally random, I'll start populating real
location values when I need distance based tests.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Archlinux Pacman Update Fix</title><link href="https://shanedowling.com/archlinux-pacman-update-fix-a99b2f157a2c.html" rel="alternate"></link><published>2013-08-25T00:00:00+00:00</published><updated>2013-08-25T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-08-25:/archlinux-pacman-update-fix-a99b2f157a2c.html</id><content type="html">&lt;p&gt;I'm writing this up as a quick solution to archlinux's dreaded pacman
update problem.&lt;/p&gt;
&lt;p&gt;If you have yaourt installed simply update package-query through it and
update pacman normally.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yaourt -S package-query
pacman -Syu
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make sure also to delete the SyncFirst option from /etc/pacman.conf&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Writing Django tests for PostGis</title><link href="https://shanedowling.com/writing-django-tests-for-postgis-9eefe47fd368.html" rel="alternate"></link><published>2013-08-24T00:00:00+00:00</published><updated>2013-08-24T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-08-24:/writing-django-tests-for-postgis-9eefe47fd368.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__gkK1dMEHoaXRw2CWD0xS__g.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;PostGis is awesome, I think I already established this in &lt;a href="http://shanedowling.com/index.php/postgis/"&gt;this post&lt;/a&gt;. However when you start writing django tests you might start getting errors complaining that certain postgres libs cannot be found. This is because you've failed to create a proper postgres_template database for your test database to work …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__gkK1dMEHoaXRw2CWD0xS__g.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;PostGis is awesome, I think I already established this in &lt;a href="http://shanedowling.com/index.php/postgis/"&gt;this post&lt;/a&gt;. However when you start writing django tests you might start getting errors complaining that certain postgres libs cannot be found. This is because you've failed to create a proper postgres_template database for your test database to work with. Run these commands in your postgres prompt to create the appropriate template.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;template_postgis&lt;/span&gt; &lt;span class="k"&gt;ENCODING&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;pg_database&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;datistemplate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;true&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;datname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;template_postgis&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt; &lt;span class="n"&gt;psql&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;template_postgis&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;postgresql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;contrib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;postgis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;postgis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;sql&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt; &lt;span class="n"&gt;psql&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;template_postgis&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;postgresql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;contrib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;postgis&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;spatial_ref_sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;sql&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt; &lt;span class="n"&gt;psql&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;template_postgis&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;share&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;postgresql&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;contrib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;postgis_comments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;sql&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt; &lt;span class="n"&gt;psql&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;template_postgis&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GRANT ALL ON geometry_columns TO PUBLIC;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt; &lt;span class="n"&gt;psql&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;template_postgis&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GRANT ALL ON geography_columns TO PUBLIC;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt; &lt;span class="n"&gt;psql&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="n"&gt;template_postgis&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GRANT ALL ON spatial_ref_sys TO PUBLIC;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you decide to name your postgis template something other than
template_postgis, make sure you tell Django by putting the below into
settings.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;POSTGIS_TEMPLATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;my_other_database_template&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I ran all of these commands on my Ubuntu 12.04 LTS vagrant
box. If you get encoding errors you might need to set UTF-8 as the
template DB encoding, see this &lt;a href="http://stackoverflow.com/a/16737776/108396"&gt;SO answer&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Install nzbget using salt</title><link href="https://shanedowling.com/install-nzbget-using-salt-7cc40711adb6.html" rel="alternate"></link><published>2013-08-23T00:00:00+00:00</published><updated>2013-08-23T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-08-23:/install-nzbget-using-salt-7cc40711adb6.html</id><summary type="html">&lt;p&gt;Recently I've been using vagrant to configure more and more of the local webapps I'm using day to day, simply as I find sticking all the apps I use on my host machine a little messy. I've also been picking up &lt;a href="http://saltstack.com/"&gt;salt-stack&lt;/a&gt; with salt-states as the provisioner as I personally …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I've been using vagrant to configure more and more of the local webapps I'm using day to day, simply as I find sticking all the apps I use on my host machine a little messy. I've also been picking up &lt;a href="http://saltstack.com/"&gt;salt-stack&lt;/a&gt; with salt-states as the provisioner as I personally prefer it a lot more than puppet/chef.&lt;/p&gt;
&lt;p&gt;As a learning exercise I figured I'd setup nzbget using salt, it's good because it requires a few config files and some compiling. You can find the repo &lt;a href="https://github.com/shano/salt-nzbget"&gt;here&lt;/a&gt;. Should be fairly self explanatory, but there's more details in the README. If you've any questions just ask in the comments.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Octopress back to Wordpress</title><link href="https://shanedowling.com/octopress-back-to-wordpress-6740efc31eb9.html" rel="alternate"></link><published>2013-08-22T00:00:00+00:00</published><updated>2013-08-22T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-08-22:/octopress-back-to-wordpress-6740efc31eb9.html</id><summary type="html">&lt;p&gt;I've been using &lt;a href="http://octopress.org/"&gt;Octopress&lt;/a&gt; for the last while
and it felt good having a nice fast static blog as opposed to heavy-old
&lt;a href="https://wordpress.com/"&gt;Wordpress&lt;/a&gt;. After time passed however, I noticed I wrote less. Having to grab my laptop and pull up vim to write something, then play around with git or …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been using &lt;a href="http://octopress.org/"&gt;Octopress&lt;/a&gt; for the last while
and it felt good having a nice fast static blog as opposed to heavy-old
&lt;a href="https://wordpress.com/"&gt;Wordpress&lt;/a&gt;. After time passed however, I noticed I wrote less. Having to grab my laptop and pull up vim to write something, then play around with git or a sometimes having dodgy rsync problems it made the whole process less seamless. Jumping straight onto Wordpress anywhere I felt like(even my phone), has made the ability to write much more present during my day and naturally as a result I'm writing more.&lt;/p&gt;
&lt;p&gt;Anyway, I found a nice little project that pushed a folder of Octopress
markdown to a Wordpress XML-RPC endpoint &lt;a href="https://github.com/collindonnell/octo-2-wp"&gt;here&lt;/a&gt;. It was a struggle
to find, if you search for anything vaguely related to Octopress and
Wordpress you'll get a million tutorials pushing you out of nasty old
Wordpress, not back into. The script didn't work out of the box for me
so I added a couple of fixes, which the author nicely accepted. Hope it
helps!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Postgis</title><link href="https://shanedowling.com/postgis-31e5d7e13bff.html" rel="alternate"></link><published>2013-08-19T00:00:00+00:00</published><updated>2013-08-19T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-08-19:/postgis-31e5d7e13bff.html</id><summary type="html">&lt;p&gt;from cities.models import City
 cape_town = City.objects.filter(country__name='South Africa').get(name='Cape Town')
 nearest = City.objects.distance(cape_town.location).exclude(id=cape_town.id).order_by('distance')[:10000]&lt;/p&gt;
&lt;p&gt;I must be very damaged from location data being badly implemented in MySQL. I'm still amazed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;from cities.models import City
 cape_town = City.objects.filter(country__name='South Africa').get(name='Cape Town')
 nearest = City.objects.distance(cape_town.location).exclude(id=cape_town.id).order_by('distance')[:10000]&lt;/p&gt;
&lt;p&gt;I must be very damaged from location data being badly implemented in MySQL. I'm still amazed that this request could be under a second, let alone be pretty much instant. &lt;a href="http://postgis.net/"&gt;Postgis&lt;/a&gt; is basically the coolest thing ever.&lt;/p&gt;
&lt;p&gt;Oh and in case you were curious(which you weren't), &lt;a href="https://en.wikipedia.org/wiki/Rocca_di_Papa"&gt;this place&lt;/a&gt; is in terms of
distance the 10000th closest place to Cape Town.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>worksly.com — Find workspaces in the UK</title><link href="https://shanedowling.com/worksly-com-find-workspaces-in-the-uk-ee31e3f6b1b3.html" rel="alternate"></link><published>2013-05-22T00:00:00+00:00</published><updated>2013-05-22T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2013-05-22:/worksly-com-find-workspaces-in-the-uk-ee31e3f6b1b3.html</id><summary type="html">&lt;p&gt;It's online &lt;a href="http://www.worksly.com/"&gt;here&lt;/a&gt;. Hopefully people find it useful, it's got data from Foursquare, Yelp and a few other sources.&lt;/p&gt;
&lt;p&gt;The site itself is built in Python, Bottle, Bootstrap and MySQL, though I hope to upgrade to Postgres with PostGIS when I get the time. I also want to make it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's online &lt;a href="http://www.worksly.com/"&gt;here&lt;/a&gt;. Hopefully people find it useful, it's got data from Foursquare, Yelp and a few other sources.&lt;/p&gt;
&lt;p&gt;The site itself is built in Python, Bottle, Bootstrap and MySQL, though I hope to upgrade to Postgres with PostGIS when I get the time. I also want to make it look a lot less bootstrappy.&lt;/p&gt;
&lt;p&gt;For scraping content, because Yelp renders it's content in AJAX callbacks, it required &lt;a href="http://phantomjs.org/"&gt;Phantom JS&lt;/a&gt; and Python with it's awesome &lt;a href="http://beautiful-soup-4.readthedocs.org/en/latest/"&gt;beautifulsoup&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;If you're trying it out from outside the UK, give it a go with
Buckingham Palace's postcode and see what coffee shops the Queen can
escape to! SW1A 1AA&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Circumventing The Pirate Bay Blockade</title><link href="https://shanedowling.com/circumventing-the-pirate-bay-blockade-b85834c22679.html" rel="alternate"></link><published>2012-05-03T00:00:00+00:00</published><updated>2012-05-03T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2012-05-03:/circumventing-the-pirate-bay-blockade-b85834c22679.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.fucktimkuik.org" title="https://www.fucktimkuik.org"&gt;&lt;strong&gt;Fuck jou, Tim Kuik&lt;/strong&gt;
_Edit description_www.fucktimkuik.org&lt;/a&gt;&lt;a href="https://www.fucktimkuik.org"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;will forward you to a number of viable options, but in case that goes down.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://thepiratebay.ee/" title="http://thepiratebay.ee/"&gt;&lt;strong&gt;Download music, movies, games, software! The Pirate Bay - The world's most resilient BitTorrent…&lt;/strong&gt;
_Download music, movies, games, software and much more. The Pirate Bay is the …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.fucktimkuik.org" title="https://www.fucktimkuik.org"&gt;&lt;strong&gt;Fuck jou, Tim Kuik&lt;/strong&gt;
_Edit description_www.fucktimkuik.org&lt;/a&gt;&lt;a href="https://www.fucktimkuik.org"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;will forward you to a number of viable options, but in case that goes down.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://thepiratebay.ee/" title="http://thepiratebay.ee/"&gt;&lt;strong&gt;Download music, movies, games, software! The Pirate Bay - The world's most resilient BitTorrent…&lt;/strong&gt;
_Download music, movies, games, software and much more. The Pirate Bay is the world's largest bittorrent tracker._thepiratebay.ee&lt;/a&gt;&lt;a href="http://thepiratebay.ee/"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://malaysiabay.org/" title="http://malaysiabay.org/"&gt;&lt;strong&gt;Loading...&lt;/strong&gt;
_Edit description_malaysiabay.org&lt;/a&gt;&lt;a href="http://malaysiabay.org/"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://lanunbay.org/" title="http://lanunbay.org/"&gt;&lt;strong&gt;Loading...&lt;/strong&gt;
_Edit description_lanunbay.org&lt;/a&gt;&lt;a href="http://lanunbay.org/"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And while you're at it, could you be a doll and fill this in?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://epetitions.direct.gov.uk/petitions/30063" title="http://epetitions.direct.gov.uk/petitions/30063"&gt;&lt;strong&gt;Archived Petition: Leave The Pirate Bay alone&lt;/strong&gt;
_The Pirate Bay has done nothing wrong. It does not share illegal files, it does not host these files. People do not…_epetitions.direct.gov.uk&lt;/a&gt;&lt;a href="http://epetitions.direct.gov.uk/petitions/30063"&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Screwed Server Checklist</title><link href="https://shanedowling.com/screwed-server-checklist-ef23820824c7.html" rel="alternate"></link><published>2012-04-28T00:00:00+00:00</published><updated>2012-04-28T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2012-04-28:/screwed-server-checklist-ef23820824c7.html</id><summary type="html">&lt;p&gt;My servers started getting unusably slow at peak hours lately and I
decided, midst panic to vaguely attempt to document the various things I
had to go through to narrow down the problem, anyway I'm sticking them
up here so a) I don't lose the list and b) it might …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My servers started getting unusably slow at peak hours lately and I
decided, midst panic to vaguely attempt to document the various things I
had to go through to narrow down the problem, anyway I'm sticking them
up here so a) I don't lose the list and b) it might be of use to someone
else. Some are obvious, some less so. I've already forgotten half of
what I did to fix it, so here's the other half before I forget anything
else.&lt;/p&gt;
&lt;p&gt;Note:This is only meant to give you a pragmatic, last minute ditch
attempt at diagnosing problems roughly. In essence, to give an idea of
what to look for and dig when you come across signs of strangeness. I'm
sure nagios, serverdensity, munin or whatever else can diagnose these
things far quicker and better, so just assume we're far beyond clever
solutions. It's essentially for the idiots like me who barely change any
of their servers configuration to handle scaling at all well.&lt;/p&gt;
&lt;p&gt;other handy tips I should be aware of, let me know here.&lt;/p&gt;
&lt;p&gt;This is meant for a LAMP install(more specifically ubuntu), so may be
slanted that way, but most of the tips should work depending on your
distro of choice.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Processes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;top/htop -&amp;gt; An obvious one, should be your first point of entry,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Memory&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;free -m -&amp;gt; Free ram, could there be a lot of IO to disk? Again, obvious.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hard-Disk&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;df -h -&amp;gt; Another obvious one, is your disk full?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Network&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;sudo iftop -&amp;gt; This one requires installation on ubuntu but it's in apt
so shouldn't be a big deal(unless of course your network is in fact
screwed). Anyway, check those numbers, check your b/w restrictions, then
do the math.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DNS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Does banging the servers ip into your local hosts file speed this up? If
so, it could be a DNS issue.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MySQL&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;watch -n &lt;span class="m"&gt;1&lt;/span&gt; mysqladmin — &lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;mysql_user — &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;mysql_password processlist
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-&amp;gt; This command will watch live mysql queries being executed. Noticing any crap queries running insanely long? This could be your issue.&lt;/p&gt;
&lt;p&gt;And directly related to slow crap queries do you have an large tables
that say might be causing a serious performance issue? Here's a mysql
query to grab the largest tables on your server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table_schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ROUND&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;table_rows&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ROUND&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;DATA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ROUND&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index_length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ROUND&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt; &lt;span class="n"&gt;data_length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;index_length&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;total_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ROUND&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index_length&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;data_length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;idxfrac&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;information_schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TABLES&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;data_length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;index_length&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Index your tables better or truncate crap you don't need.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Apache&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps ax &lt;span class="p"&gt;|&lt;/span&gt; grep apache &lt;span class="p"&gt;|&lt;/span&gt; wc -l
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's assume you didn't change your ubuntu default apache configuration,
if your MaxChild setting is at 150 and the value returned from the above
command is stuck at over 150(wc will match the ps command too), then
here's your problem. It may "look" like your network is slow but in fact
it's apache being forced to queue requests.&lt;/p&gt;
&lt;p&gt;Run ps aux | grep apache and see how much ram apache is taking on your
server(you should see roughly what each concurrent connection is getting
in terms of ram percentage). Do some math and see if you have the free
ram to increase max childs, if you can, do so.&lt;/p&gt;
&lt;p&gt;If not, reduce the keepalive value(essentially this isn't as scary as it
sounds, quite a few major sites run without a keepalive value at all),
but this entirely depends on your sites usage. Altering keepalive will
lose you some speed, you're essentially cycling through the concurrent
requests faster, so request 151 doesn't have to wait as long. But, you
need to decide whether less speed for more people is better than speed
with a hard concurrent limit.&lt;/p&gt;
&lt;p&gt;You can also enable some of apache's new cleverer keepalive modules but
again that goes beyond the scope of the post.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Diary.py future proof memories.</title><link href="https://shanedowling.com/diary-py-future-proof-memories-b097056bc350.html" rel="alternate"></link><published>2012-03-08T00:00:00+00:00</published><updated>2012-03-08T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2012-03-08:/diary-py-future-proof-memories-b097056bc350.html</id><summary type="html">&lt;p&gt;I've created a little command line diary script for anyone whose interested. It stores your diaries in separate txt files so you know all of your memories will always be accessible to you in a format you'll always be able to read. It's super quick and easy to use. It's …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've created a little command line diary script for anyone whose interested. It stores your diaries in separate txt files so you know all of your memories will always be accessible to you in a format you'll always be able to read. It's super quick and easy to use. It's based loosely on Gina Trapini's &lt;a href="http://todotxt.com/"&gt;todotxt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Documentation is &lt;a href="https://github.com/shanedowling/Diary.py"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Download is &lt;a href="https://github.com/shanedowling/Diary.py/downloads"&gt;here&lt;/a&gt;. Works really well with Dropbox too!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Quick vhost script</title><link href="https://shanedowling.com/quick-vhost-script-6bdb6138fc10.html" rel="alternate"></link><published>2012-03-01T00:00:00+00:00</published><updated>2012-03-01T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2012-03-01:/quick-vhost-script-6bdb6138fc10.html</id><summary type="html">&lt;p&gt;Quick script to setup a new virtualhost entry for apache. Works for me
on archlinux.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;

&lt;span class="n"&gt;vhosts_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/etc/httpd/conf/extra/httpd-vhosts.conf&amp;quot;&lt;/span&gt;
 &lt;span class="n"&gt;hosts_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/etc/hosts&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;domain_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;3 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Quick script to setup a new virtualhost entry for apache. Works for me
on archlinux.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/python&lt;/span&gt;
 &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;

&lt;span class="n"&gt;vhosts_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/etc/httpd/conf/extra/httpd-vhosts.conf&amp;quot;&lt;/span&gt;
 &lt;span class="n"&gt;hosts_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/etc/hosts&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;domain_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &lt;span class="n"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;currentUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getoutput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;whoami&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;currentUser&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
 &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;You need to be root!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vhosts_file&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Vhosts file doesn&amp;#39;t exist, exiting&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hosts_file&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hosts file doesn&amp;#39;t exist, exiting&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
 &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Web folder doesn&amp;#39;t exist, attempting to create&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;vhost_entry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;nnntServerAdmin your@&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;ntDocumentRoot &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ntServerName &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;ntServerAlias &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; ntnttDirectoryIndex index.php index.htm index.htmlnttAddHandler cgi-script .cgi .plnttOptions ExecCGI Indexes FollowSymLinks MultiViews +IncludesnttAllowOverride NonenttOrder allow,denynttallow from allntn&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;domain_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;domain_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;domain_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;folder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;vhosts_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vhost_entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;host_entry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;n127.0.0.1 &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;domain_name&lt;/span&gt;

&lt;span class="n"&gt;vhosts_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host_entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/etc/rc.d/httpd restart&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>Easily remember linux commands</title><link href="https://shanedowling.com/easily-remember-linux-commands-44191f6843f6.html" rel="alternate"></link><published>2012-02-19T00:00:00+00:00</published><updated>2012-02-19T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2012-02-19:/easily-remember-linux-commands-44191f6843f6.html</id><summary type="html">&lt;p&gt;I use an absolute ton of awesome tools my various linux distros. The
problem is I tend to forget a lot of the time how to use the tools, so I
got a list of frequently used command with and a few examples of how to
use them from &lt;a href="http://www.thegeekstuff.com/2010/11/50-linux-commands/"&gt;here …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;I use an absolute ton of awesome tools my various linux distros. The
problem is I tend to forget a lot of the time how to use the tools, so I
got a list of frequently used command with and a few examples of how to
use them from &lt;a href="http://www.thegeekstuff.com/2010/11/50-linux-commands/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So here's the file I use.&lt;/p&gt;
&lt;p&gt;— Create a new tar archive
 $ tar cvf archive_name.tar dirname/
 — Extract from an existing tar archive.
 $ tar xvf archive_name.tar
 — Grep for a given string in a file (case in-sensitive search).
 $ grep -i "the" demo_file
 — Print the grep line, along with the 3 lines after it.
 $ grep -A 3 -i "example" demo_text
 — Grep for a given string in all files recursively
 $ grep -r "ramesh" *
 — Grep for a string that starts with $ char and contains what's in $1
 grep — color=auto -B 1 -E '^$.b'$1'b' cmd_examples.txt
 — Find files using file-name ( case in-sensitve find)
 $ find -iname "MyCProgram.c"
 — Execute commands on files found by the find command
 $ find -iname "MyCProgram.c" -exec md5sum {} ;
 — Find all empty files in home directory
 $ find ~ -empty
 — Converts the DOS file format to Unix file format using sed command.
 $ sed 's/.$//' filename
 — Print file content in reverse order
 $ sed -n '1!G;h;$p' thegeekstuff.txt
 — Add line number for all non-empty-lines in a file
 $ sed '/./=' thegeekstuff.txt | sed 'N; s/n/ /'
 — Remove duplicate lines using awk
 $ awk '!($0 in array) { array[$0]; print }' temp
 — Print all lines from /etc/passwd that has the same uid and gid
 $ awk -F ':' '$3==$4' passwd.txt
 — Print only specific field from a file.
 $ awk '{print $2,$5;}' employee.txt
 — Diff ignore white space while comparing.
 $ diff -w name_list.txt name_list_new.txt
 — Sort a file in ascending order
 $ sort names.txt
 — Sort a file in descending order
 $ sort -r names.txt
 — Sort passwd file by 3rd field.
 — Xarg:Copy all images to external hard-drive
 $ ls &lt;em&gt;.jpg | xargs -n1 -i cp {} /external-hard-drive/directory
 — Xarg:Search all jpg images in the system and archive it.
 $ find / -name &lt;/em&gt;.jpg -type f -print | xargs tar -cvzf images.tar.gz
 — XargLDownload all the URLs mentioned in the url-list.txt file
 $ cat url-list.txt | xargs wget –c
 — LS:Order Files Based on Last Modified Time (In Reverse Order) Using ls -ltr
 $ ls -ltr
 — LS:Visual Classification of Files With Special Characters Using ls -F
 $ ls -F
 — Gzip:Display compression ratio of the compressed file using gzip -l
 $ gzip -l &lt;em&gt;.gz
 $ bzip2 test.txt
 $ bzip2 -d test.txt.bz2
 — UNZip:View the contents of &lt;/em&gt;.zip file (Without unzipping it):
 $ unzip -l jasper.zip
 — Shutdown the system after 10 minutes.
 $ shutdown -h +10
 — Force the filesystem check during reboot.
 # shutdown -Fr now
 — FTP:Both ftp and secure ftp (sftp) has similar commands. To connect to a remote server and download multiple files, do the following.
 $ ftp IP/hostname
 — FTP:To download a file
 $ ftp&amp;gt; mget &lt;em&gt;.html
 — To view the file names located on the remote server before downloading, mls ftp command as shown below.
 $ ftp&amp;gt; mls &lt;/em&gt;.html -
 — View crontab entry for a specific user
 $ crontab -u john -l
 — Schedule a cron job every 10 minutes.
 $ &lt;em&gt;/10 * &lt;/em&gt; * &lt;em&gt; /home/ramesh/check-disk-cron
 $ service ssh status
 — Status:Check the status of all the services.
 $ service — status-all
 — Restart a service.
 # service ssh restart
 — To view current running processes.
 $ ps -ef | more
 — To view current running processes in a tree structure. H option stands for process hierarchy.
 $ ps -efH | more
 $ df -T
 $ rm -i filename.txt
 $ rm -i file&lt;/em&gt;
 — Copy file1 to file2. if file2 exists prompt for confirmation before overwritting it.
 $ cp -i file1 file2
 — While displaying the file, following cat -n command will prepend the line number to each line of the output.
 $ cat -n /etc/logrotate.conf
 — Give full access to user and group (i.e read, write and execute ) on a specific file.
 $ chmod ug+rwx file.txt
 — Revoke all access for the group (i.e read, write and execute ) on a specific file.
 $ chmod g-rwx file.txt
 — Apply the file permissions recursively to all the files in the sub-directories.
 $ chmod -R ug+rwx file.txt
 — To change owner to oracle and group to db on a file. i.e Change both owner and group at the same time.
 $ chown oracle:dba dbora.sh
 — Create nested directories using one mkdir command.
 $ mkdir -p dir1/dir2/dir3/dir4/
 — Sample uname output from a Ubuntu laptop is shown below.
 $ uname -a
 — When you want to find out where a specific Unix command exists (for example, where does ls command exists?), you can execute the following command.
 $ whereis ls
 — This searches for the executable lsmk in the /tmp directory, and displays it, if it is available.
 $ whereis -u -B /tmp -f lsmk
 — Whatis command displays a single line description about a command.
 $ whatis ls
 — The example below shows all files in the system that contains the word crontab in it.
 $ locate crontab
 — Print the last 10 lines of a file by default.
 $ tail filename.txt
 — Print N number of lines from the file named filename.txt
 $ tail -n N filename.txt
 — View the content of the file in real time using tail -f. This is useful to view the log files, that keeps growing. The command can be terminated using CTRL-C.
 $ tail -f log-file
 — less is very efficient while viewing huge log files, as it doesn't need to load the full file while opening.
 $ less huge-log-file.log
 — Ping a remote host by sending only 5 packets.
 $ ping -c 5 gmail.com
 — Download and store it with a different name.
 $ wget -O taglist.zip &lt;a href="http://www.vim.org/scripts/download_script.php?src_id=7701"&gt;http://www.vim.org/scripts/download_script.php?src_id=7701&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then I use this command to search for the specific command and get back
the examples with an explanation. Please note, to add your own examples,
you need to save the same format of the command starting with a $ and
the line above providing the explanation. When you do a search you must
search for the command.&lt;/p&gt;
&lt;p&gt;grep — color=auto -B 1 -E '^$.bpingb' ~/cmd_examples.txt&lt;/p&gt;
&lt;p&gt;And if you wish to use it in a bash alias, you'll need to create a
function&lt;/p&gt;
&lt;p&gt;function exam() { grep — color=auto -B 1 -E '^$.b'"$*"'b' ~/cmd_examples.txt ;}&lt;/p&gt;
&lt;p&gt;Calling&lt;/p&gt;
&lt;p&gt;$ exam ping&lt;/p&gt;
&lt;p&gt;should return&lt;/p&gt;
&lt;p&gt;— Ping a remote host by sending only 5 packets.&lt;/p&gt;
&lt;p&gt;$ ping -c 5 gmail.com&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Simple ubuntu backup to S3</title><link href="https://shanedowling.com/simple-ubuntu-backup-to-s3-c3f3b7070208.html" rel="alternate"></link><published>2012-01-14T00:00:00+00:00</published><updated>2012-01-14T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2012-01-14:/simple-ubuntu-backup-to-s3-c3f3b7070208.html</id><summary type="html">&lt;p&gt;After browsing the web for ages to find a decent solution to backup my
server to amazon s3 I finally came across one and I'm just throwing it
up here. So basically all I need it to do was backup my sites(filesystem and mysql databases) and some config for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After browsing the web for ages to find a decent solution to backup my
server to amazon s3 I finally came across one and I'm just throwing it
up here. So basically all I need it to do was backup my sites(filesystem and mysql databases) and some config for lighttpd.&lt;/p&gt;
&lt;p&gt;The post I'm basing this off is &lt;a href="http://sdykman.com/blog/backing-drupal-sites-automysqlbackup-and-duplicity"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install automysqlbackup using apt&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;sudo apt-get install automysqlbackup&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run automysqlbackup as root(just to give it a test)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;sudo automysqlbackup&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Double check the databases are being backed up you should see daily,
weekly and monthly under /var/lib/automysqlbackup with the appropriate
databases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now use this script to backup all the specific folders you want.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="c1"&gt;# Export some ENV variables so you don&amp;#39;t have to type anything&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PASSPHRASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
 &lt;span class="c1"&gt;# Your GPG key&lt;/span&gt;
 &lt;span class="nv"&gt;GPG_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="c1"&gt;# The source of your backup&lt;/span&gt;
 &lt;span class="nv"&gt;SOURCE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/
 &lt;span class="c1"&gt;# The destination&lt;/span&gt;
 &lt;span class="c1"&gt;# Note that the bucket need not exist&lt;/span&gt;
 &lt;span class="c1"&gt;# but does need to be unique amongst all&lt;/span&gt;
 &lt;span class="c1"&gt;# Amazon S3 users. So, choose wisely.&lt;/span&gt;
 &lt;span class="nv"&gt;DEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;s3+http://
 &lt;span class="c1"&gt;# The duplicity command and options&lt;/span&gt;
 duplicity
 — encrypt-key&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GPG_KEY&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
 — sign-key&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GPG_KEY&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
 — &lt;span class="nv"&gt;volsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;250&lt;/span&gt;
 — &lt;span class="nv"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/www
 — &lt;span class="nv"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home
 — &lt;span class="nv"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/lighttpd
 — &lt;span class="nv"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/automysqlbackup
 — &lt;span class="nv"&gt;exclude&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/**
 &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SOURCE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DEST&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
 &lt;span class="c1"&gt;# Reset the ENV variables. Don&amp;#39;t need them sitting around&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PASSPHRASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add your own specific access key stuff and give it a test&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then add it to a cronjob&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; * * * /usr/sbin/automysqlbackup &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; /root/s3_backup
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>Simple git web interface</title><link href="https://shanedowling.com/simple-git-web-interface-999d0f685454.html" rel="alternate"></link><published>2012-01-07T00:00:00+00:00</published><updated>2012-01-07T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2012-01-07:/simple-git-web-interface-999d0f685454.html</id><summary type="html">&lt;p&gt;I decided instead of springing for a monthly github payed account I'd
install git on a server and use a decent web interface that could be
easily installed.&lt;/p&gt;
&lt;p&gt;So for this little guide I'm rocking ubuntu 10.04 with git and lighttpd
already installed.&lt;/p&gt;
&lt;p&gt;It was a Goldilocks search for …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I decided instead of springing for a monthly github payed account I'd
install git on a server and use a decent web interface that could be
easily installed.&lt;/p&gt;
&lt;p&gt;So for this little guide I'm rocking ubuntu 10.04 with git and lighttpd
already installed.&lt;/p&gt;
&lt;p&gt;It was a Goldilocks search for ease of installation vs web interfaces
usefulness. I tried a number of options, gitweb looked a little rough
for my liking and Gitorious and InDeferno were just an utter pain to
install. Eventually I came across gitalist and decided I would give it's
incredibly simple to installation go(http://www.gitalist.com/install/).
By simply following the directions I managed to get it running without
any thought. The problem was it was running on port 3000, I wanted it to
hook it into lighttpd and have it run under a subdomain.&lt;/p&gt;
&lt;p&gt;Since Gitalist is built with the catalyst framework, I figured using a
lighttpd catalyst tutorial would do the job.&lt;/p&gt;
&lt;p&gt;Firstly you need to install FCGI and FCGI Process Manager for perl, so&lt;/p&gt;
&lt;p&gt;sudo cpan FCGI FCGI::ProcManager&lt;/p&gt;
&lt;p&gt;Or on ubuntu I think you can use&lt;/p&gt;
&lt;p&gt;sudo apt-get install libfcgi-perl libfcgi-procmanager-perl&lt;/p&gt;
&lt;p&gt;Now attempt to execute this command&lt;/p&gt;
&lt;p&gt;/var/www/gitalist/script/gitalist_fastcgi.pl —listen 127.0.0.1:55900 —nproc 5&lt;/p&gt;
&lt;p&gt;If your ubuntu install is anything like mine a bunch of errors with get
thrown in relation is FCGI.pm(And the proc manager) not being found. If
you do, run a locate for FCGI.pm, find which folder it's under then make
sure the folder FCGI.pm is in is in perl's @INC variable(this list of
folders should have been printed out when the above command executed and
failed). Then add them to the @INC in gitalist.&lt;/p&gt;
&lt;p&gt;So for me, I simply edited lib/Gitalist/Script/FastCGI.pm and added
these 2 lines.&lt;/p&gt;
&lt;p&gt;&gt; push(@INC, "/usr/local/lib/perl/5.10.1/");&lt;/p&gt;
&lt;p&gt;push(@INC, "/usr/local/share/perl/5.10.1/");&lt;/p&gt;
&lt;p&gt;Once these were added executing the gitalist_fastcgi.pl worked fine.
Next step was to hook everything into lighttpd.&lt;/p&gt;
&lt;p&gt;&gt; $HTTP["host"] =~ "(^|.)git_repos.example.com$" {&lt;/p&gt;
&lt;p&gt;fastcgi.server = (&lt;/p&gt;
&lt;p&gt;"" =&amp;gt; (&lt;/p&gt;
&lt;h1&gt;the extension is empty because we want to match on any extension&lt;/h1&gt;
&lt;p&gt;"127.0.0.1" =&amp;gt; (&lt;/p&gt;
&lt;p&gt;"host" =&amp;gt; "127.0.0.1",&lt;/p&gt;
&lt;p&gt;"port" =&amp;gt; 55900,&lt;/p&gt;
&lt;p&gt;"check-local" =&amp;gt; "disable"&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;p&gt;),&lt;/p&gt;
&lt;h1&gt;make sure these folders exist&lt;/h1&gt;
&lt;p&gt;server.errorlog = "/var/log/lighttpd/gitalist/error.log"&lt;/p&gt;
&lt;p&gt;accesslog.filename = "/var/log/lighttpd/gitalist/access.log"&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;Give lighttpd a restart and it should all hopefully work just fine.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>CLI Dash</title><link href="https://shanedowling.com/cli-dash-b7f2766a53c9.html" rel="alternate"></link><published>2011-12-31T00:00:00+00:00</published><updated>2011-12-31T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2011-12-31:/cli-dash-b7f2766a53c9.html</id><summary type="html">&lt;p&gt;Due to being flu-ridden for the entire holiday period, I decided to
write up a quick tool I've been wanting to write for ages. It's written
in Python, so go easy, I'm no Python expert and I'm sick.&lt;/p&gt;
&lt;p&gt;The tool is essentially a wee-little dashboard for your linux server.&lt;/p&gt;
&lt;p&gt;It …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Due to being flu-ridden for the entire holiday period, I decided to
write up a quick tool I've been wanting to write for ages. It's written
in Python, so go easy, I'm no Python expert and I'm sick.&lt;/p&gt;
&lt;p&gt;The tool is essentially a wee-little dashboard for your linux server.&lt;/p&gt;
&lt;p&gt;It only supports a few system details at present(essentially handy
little things python does) but I'll add more as I get the time, if
you've any suggestions let me know.&lt;/p&gt;
&lt;p&gt;Heres what it will check.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If a process you're interested in is running. I use this for lighttpd and mysql.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CPU Use&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Memory Use&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Internal IP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;External IP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Free/Total Disk Space&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Basically alter the sample config file, put it somewhere then point to
the config file from the main code. I actually execute it from my bashrc
file, reason being is that typically when I need to ssh into my server
it's to pull up one of the details this tool presents.&lt;/p&gt;
&lt;p&gt;Anyhoo the git repo is &lt;a href="https://github.com/shano/CLI-Dash"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Good Coding Practice Snippets</title><link href="https://shanedowling.com/good-coding-practice-snippets-60b75db22e57.html" rel="alternate"></link><published>2011-12-24T00:00:00+00:00</published><updated>2011-12-24T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2011-12-24:/good-coding-practice-snippets-60b75db22e57.html</id><summary type="html">&lt;p&gt;After reading through Code Complete I decided to make up mind-maps on
each topic in the hope that I would peruse them every so often to brush
up on my programming best practice. Recently I decided take a look over
them and was dismayed at the amount of knowledge from …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After reading through Code Complete I decided to make up mind-maps on
each topic in the hope that I would peruse them every so often to brush
up on my programming best practice. Recently I decided take a look over
them and was dismayed at the amount of knowledge from the book I'd
forgotten or that hadn't become habit. Sure I'd remember a decent chunk
of the good stuff and it has certainly improved my programming ability
but there was so much I'd missed, even from the tiny mind-maps I'd made.&lt;/p&gt;
&lt;p&gt;I was trying to figure out a way to embed some of the 'good practices'
into my programming, in a way to force myself to review them in the hope
they would become habit. Luckily I'd recently come across the awesome &lt;a href="https://github.com/garbas/vim-snipmate"&gt;snipMate&lt;/a&gt; plug-in for vim so I decided to include a number of good programming practices into the snippets themselves and while I could only really get in a tiny percentage of it I feel these tips will enhance my ability at
the lowest level of programming.&lt;/p&gt;
&lt;p&gt;It will probably really grate having to delete all of these dumped
comments from my snippets, but I figure by having the text front of me
every-time I create a new if statement or a new function I expect my
coding standards to increase significantly. I will also start creating
snippets that represent explanations of certain programming concepts,
with actual pseudo-code.&lt;/p&gt;
&lt;p&gt;Anyway, feel free to check-out the PHP snippet file &lt;a href="https://github.com/shano/Vim-SnipMate-Coding-Standards"&gt;here&lt;/a&gt;, will add to it as I find missing things/enhancements&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Very Simple EC2 Snapshot Management</title><link href="https://shanedowling.com/very-simple-ec2-snapshot-management-6bcca8bd28fb.html" rel="alternate"></link><published>2011-04-01T00:00:00+00:00</published><updated>2011-04-01T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2011-04-01:/very-simple-ec2-snapshot-management-6bcca8bd28fb.html</id><summary type="html">&lt;p&gt;I've been pulling my hair out trying to get a handy ec2 snapshot
backup/management working. My google results have ranged from broken
libraries to using bash scripts to do one aspect and php scripts to do
another, all of the solutions seem to have serious issues with regions.&lt;/p&gt;
&lt;p&gt;Anyway …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been pulling my hair out trying to get a handy ec2 snapshot
backup/management working. My google results have ranged from broken
libraries to using bash scripts to do one aspect and php scripts to do
another, all of the solutions seem to have serious issues with regions.&lt;/p&gt;
&lt;p&gt;Anyway I've coded up a very very stupidly simple bash script that's
based on the ec2-api-tools. Ubuntu based info &lt;a href="https://help.ubuntu.com/community/EC2StartersGuide"&gt;here&lt;/a&gt;. Essentially sudo apt-get install ec2-api-tools should get the required tools.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What it does:&lt;/strong&gt; Backs up all instances and deletes all snapshots older
than 7 days.&lt;/p&gt;
&lt;p&gt;You can find it &lt;a href="http://pastebin.com/xMHQUbmH"&gt;here&lt;/a&gt;, hope it helps.&lt;/p&gt;
&lt;p&gt;Due to major problems with ec2-api-tools I've done a quick rewrite for
to support &lt;a href="http://open.eucalyptus.com/wiki/Euca2oolsGuide"&gt;euca2ools&lt;/a&gt;. Essentially I had this script running on a micro instance and due to bugs with the ubuntu kernel and java it would tank my server so I've switched to the python-based euca2ools.&lt;/p&gt;
&lt;p&gt;You can find this script &lt;a href="http://pastebin.com/CCmJyULN"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get euca2ools work simply install via sudo apt-get install euca2ools
and add this to ~/.eucarc&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;EC2_REGION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;EC2_REGION&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;eu&lt;/span&gt;&lt;span class="p"&gt;-west-1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;EC2_CERT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/cert.pem

&lt;span class="nv"&gt;EC2_PRIVATE_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/pk.pem

&lt;span class="nv"&gt;EC2_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;AAAAAAAAAAAAAAAAAAA

&lt;span class="nv"&gt;EC2_SECRET_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;+AAAAAAAAAAAAAAaaaaaaaaaaa

&lt;span class="nv"&gt;EC2_USER_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1234567890&lt;/span&gt;

&lt;span class="nv"&gt;EUCALYPTUS_CERT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/ec2/amitools/cert-ec2.pem

&lt;span class="nv"&gt;EC2_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://ec2.&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;EC2_REGION&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.amazonaws.com

&lt;span class="nv"&gt;S3_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://s3.amazonaws.com:443
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>Music at work</title><link href="https://shanedowling.com/music-at-work-12aac3472110.html" rel="alternate"></link><published>2011-01-13T00:00:00+00:00</published><updated>2011-01-13T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2011-01-13:/music-at-work-12aac3472110.html</id><summary type="html">&lt;p&gt;For anyone bored of trying to decide what to listen to at work I'd
recommend indie 103.1. Decent music and as it's in La it's 8 hours
behind, so no annoying presenters during the work day(If you're in the
timezone of course).&lt;/p&gt;
&lt;p&gt;Anyway, for anyone rocking mplayer a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For anyone bored of trying to decide what to listen to at work I'd
recommend indie 103.1. Decent music and as it's in La it's 8 hours
behind, so no annoying presenters during the work day(If you're in the
timezone of course).&lt;/p&gt;
&lt;p&gt;Anyway, for anyone rocking mplayer a bash alias for ya. I guess for
those who don't you can just the url….&lt;/p&gt;
&lt;p&gt;alias listen_indie1031="mplayer &lt;a href="http://208.80.52.108:80/KDLDFMCMP3%5C"&gt;http://208.80.52.108:80/KDLDFMCMP3&lt;/a&gt;"&lt;/p&gt;
&lt;p&gt;The stream even pulls down artist/trackname.&lt;/p&gt;
&lt;p&gt;Right now the only thing I listen to.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Daily WTF — Shopping Carts</title><link href="https://shanedowling.com/daily-wtf-shopping-carts-bbcfbdade962.html" rel="alternate"></link><published>2011-01-12T00:00:00+00:00</published><updated>2011-01-12T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2011-01-12:/daily-wtf-shopping-carts-bbcfbdade962.html</id><content type="html">&lt;p&gt;&lt;a href="http://thedailywtf.com/Articles/Confessions-The-Shopping-Cart.aspx"&gt;Daily WTF-Shopping Carts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Really entertaining how the writer "thought" through this solution.&lt;/p&gt;
&lt;p&gt;Amazing.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Software Engineer</title><link href="https://shanedowling.com/software-engineer-ddc413164c2c.html" rel="alternate"></link><published>2011-01-08T00:00:00+00:00</published><updated>2011-01-08T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2011-01-08:/software-engineer-ddc413164c2c.html</id><content type="html">&lt;p&gt;&lt;a href="http://www.reddit.com/r/programming/comments/ey7wm/software_engineering_is_the_best_job_of_2011/"&gt;Best job of 2011&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Apparently.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Intel Insider — Now hardware can screw you with copy protection.</title><link href="https://shanedowling.com/intel-insider-now-hardware-can-screw-you-with-copy-protection-723284f48a80.html" rel="alternate"></link><published>2011-01-06T00:00:00+00:00</published><updated>2011-01-06T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2011-01-06:/intel-insider-now-hardware-can-screw-you-with-copy-protection-723284f48a80.html</id><content type="html">&lt;p&gt;&lt;a href="http://www.wired.com/gadgetlab/2011/01/intel-cpu/"&gt;Intel Insider-Now hardware can screw you with copy protection.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Another product I have to remember never to buy. Companies should be
punished for this behaviour.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>PHP and big numbers</title><link href="https://shanedowling.com/php-and-big-numbers-4605875d1635.html" rel="alternate"></link><published>2011-01-05T00:00:00+00:00</published><updated>2011-01-05T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2011-01-05:/php-and-big-numbers-4605875d1635.html</id><content type="html">&lt;p&gt;&lt;a href="http://www.exploringbinary.com/php-hangs-on-numeric-value-2-2250738585072011e-308/"&gt;PHP isn't friends with big numbers.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Wonder where I can stick this number to cause some serious problems.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Worryingly accurate — This is your brain on vim</title><link href="https://shanedowling.com/worryingly-accurate-this-is-your-brain-on-vim-7583add32743.html" rel="alternate"></link><published>2011-01-05T00:00:00+00:00</published><updated>2011-01-05T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2011-01-05:/worryingly-accurate-this-is-your-brain-on-vim-7583add32743.html</id><content type="html">&lt;p&gt;&lt;a href="https://kev.town/2010/12/15/this-is-your-brain-on-vim/" title="https://kev.town/2010/12/15/this-is-your-brain-on-vim/"&gt;&lt;strong&gt;This is Your Brain on Vim&lt;/strong&gt;
_la casa de kev en Interweb_kev.town&lt;/a&gt;&lt;a href="https://kev.town/2010/12/15/this-is-your-brain-on-vim/"&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Simple ubuntu backup to S3</title><link href="https://shanedowling.com/simple-ubuntu-backup-to-s3-d8a52b123d12.html" rel="alternate"></link><published>2010-11-22T00:00:00+00:00</published><updated>2010-11-22T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2010-11-22:/simple-ubuntu-backup-to-s3-d8a52b123d12.html</id><summary type="html">&lt;p&gt;After browsing the web for ages to find a decent solution to
backup my server to amazon s3 I finally came across one and I'm just
throwing it up here.&lt;/p&gt;
&lt;h3&gt;Reqs:&lt;/h3&gt;
&lt;p&gt;So basically all I need it to do was backup my sites(filesystem and mysql databases) and some config …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After browsing the web for ages to find a decent solution to
backup my server to amazon s3 I finally came across one and I'm just
throwing it up here.&lt;/p&gt;
&lt;h3&gt;Reqs:&lt;/h3&gt;
&lt;p&gt;So basically all I need it to do was backup my sites(filesystem and mysql databases) and some config for lighttpd.&lt;/p&gt;
&lt;h3&gt;Implementation:&lt;/h3&gt;
&lt;p&gt;The post I'm basing this off is &lt;a href="http://sdykman.com/blog/backing-drupal-sites-automysqlbackup-and-duplicity"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install automysqlbackup using apt&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;sudo apt-get install automysqlbackup&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run automysqlbackup as root(just to give it a test)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;sudo automysqlbackup&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Double check the databases are being backed up you should see daily,
weekly and monthly under /var/lib/automysqlbackup with the appropriate databases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now use this script to backup all the specific folders you want.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
 &lt;span class="c1"&gt;# Export some ENV variables so you don&amp;#39;t have to type anything&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PASSPHRASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
 &lt;span class="c1"&gt;# Your GPG key&lt;/span&gt;
 &lt;span class="nv"&gt;GPG_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="c1"&gt;# The source of your backup&lt;/span&gt;
 &lt;span class="nv"&gt;SOURCE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/
 &lt;span class="c1"&gt;# The destination&lt;/span&gt;
 &lt;span class="c1"&gt;# Note that the bucket need not exist&lt;/span&gt;
 &lt;span class="c1"&gt;# but does need to be unique amongst all&lt;/span&gt;
 &lt;span class="c1"&gt;# Amazon S3 users. So, choose wisely.&lt;/span&gt;
 &lt;span class="nv"&gt;DEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;s3+http://
 &lt;span class="c1"&gt;# The duplicity command and options&lt;/span&gt;
 duplicity
 — encrypt-key&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GPG_KEY&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
 — sign-key&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GPG_KEY&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
 — &lt;span class="nv"&gt;volsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;250&lt;/span&gt;
 — &lt;span class="nv"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/www
 — &lt;span class="nv"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home
 — &lt;span class="nv"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/lighttpd
 — &lt;span class="nv"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/lib/automysqlbackup
 — &lt;span class="nv"&gt;exclude&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/**
 &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SOURCE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DEST&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
 &lt;span class="c1"&gt;# Reset the ENV variables. Don&amp;#39;t need them sitting around&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
 &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PASSPHRASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add your own specific access key stuff and give it a test&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then add it to a cronjob&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; * * * /usr/sbin/automysqlbackup &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; /root/s3_backup
&lt;/pre&gt;&lt;/div&gt;</content><category term="Tech"></category></entry><entry><title>Google History told me I'm a nerd</title><link href="https://shanedowling.com/google-history-told-me-im-a-nerd-68c2161f42c7.html" rel="alternate"></link><published>2010-05-06T00:00:00+00:00</published><updated>2010-05-06T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2010-05-06:/google-history-told-me-im-a-nerd-68c2161f42c7.html</id><summary type="html">&lt;p&gt;24000 searches later and here is my top ten sites I click to on google.&lt;/p&gt;
&lt;p&gt;Top sites&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ubuntuforums.org" title="http://ubuntuforums.org"&gt;&lt;strong&gt;Ubuntu Forums&lt;/strong&gt;
_A help and support forum for Ubuntu Linux._ubuntuforums.org&lt;/a&gt;&lt;a href="http://ubuntuforums.org"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org" title="http://en.wikipedia.org"&gt;&lt;strong&gt;Wikipedia, the free encyclopedia&lt;/strong&gt;
_Allied naval bombardments of Japan during the last weeks of World War II in 1945 targeted industrial …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;24000 searches later and here is my top ten sites I click to on google.&lt;/p&gt;
&lt;p&gt;Top sites&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ubuntuforums.org" title="http://ubuntuforums.org"&gt;&lt;strong&gt;Ubuntu Forums&lt;/strong&gt;
_A help and support forum for Ubuntu Linux._ubuntuforums.org&lt;/a&gt;&lt;a href="http://ubuntuforums.org"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org" title="http://en.wikipedia.org"&gt;&lt;strong&gt;Wikipedia, the free encyclopedia&lt;/strong&gt;
_Allied naval bombardments of Japan during the last weeks of World War II in 1945 targeted industrial and military…_en.wikipedia.org&lt;/a&gt;&lt;a href="http://en.wikipedia.org"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.boards.ie" title="http://www.boards.ie"&gt;&lt;strong&gt;boards.ie - Now Ye're Talkin'&lt;/strong&gt;
_Boards.ie uses cookies. By continuing to browse this site you are agreeing to our use of cookies. Click here to find…_www.boards.ie&lt;/a&gt;&lt;a href="http://www.boards.ie"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com" title="http://stackoverflow.com"&gt;&lt;strong&gt;Stack Overflow - Where Developers Learn, Share, &amp;amp; Build Careers&lt;/strong&gt;
_Stack Overflow is the largest, most trusted online community for developers to learn, share​ ​their programming…_stackoverflow.com&lt;/a&gt;&lt;a href="http://stackoverflow.com"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://lifehacker.com" title="http://lifehacker.com"&gt;&lt;strong&gt;Lifehacker - &lt;em&gt;Do everything better&lt;/em&gt;&lt;/strong&gt;
Do everything betterlifehacker.com&lt;/a&gt;&lt;a href="http://lifehacker.com"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://php.net" title="http://php.net"&gt;&lt;strong&gt;PHP: Hypertext Preprocessor&lt;/strong&gt;
_Please note that according to the PHP version support timelines, PHP 7.0.33 is the last scheduled release of PHP 7.0…_php.net&lt;/a&gt;&lt;a href="http://php.net"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://drupal.org"&gt;https://drupal.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://wiki.archlinux.org" title="http://wiki.archlinux.org"&gt;&lt;strong&gt;ArchWiki&lt;/strong&gt;
_Welcome to the ArchWiki: your source for Arch Linux documentation on the web._wiki.archlinux.org&lt;/a&gt;&lt;a href="http://wiki.archlinux.org"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://addons.mozilla.org" title="http://addons.mozilla.org"&gt;&lt;strong&gt;Add-ons for Firefox (en-US)&lt;/strong&gt;
_Download Firefox extensions and themes. They're like apps for your browser. They can block annoying ads, protect…_addons.mozilla.org&lt;/a&gt;&lt;a href="http://addons.mozilla.org"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yep most of them are nerdy related but I was utterly shocked that
ubuntuforums.org bested wikipedia. So I have more interest in a flavour
of linux than I do on…. the rest of life, basically.&lt;/p&gt;
&lt;p&gt;Terrific.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>8 randomly useful php tricks</title><link href="https://shanedowling.com/8-randomly-useful-php-tricks-1acfd89a3fb4.html" rel="alternate"></link><published>2010-02-22T00:00:00+00:00</published><updated>2010-02-22T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2010-02-22:/8-randomly-useful-php-tricks-1acfd89a3fb4.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;1)debug_print_backtrace()&lt;/strong&gt;
I use this one a lot, print a debug-style list of what was called to get
thethe point where this function is called. Very, very useful.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) __autoload()&lt;/strong&gt;
- Called when you attempt to load a class that hasn't been defined.
the autoloader to attempt an import …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;1)debug_print_backtrace()&lt;/strong&gt;
I use this one a lot, print a debug-style list of what was called to get
thethe point where this function is called. Very, very useful.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) __autoload()&lt;/strong&gt;
- Called when you attempt to load a class that hasn't been defined.
the autoloader to attempt an import of xyz.php. Probably not the best
technique for readability or clarity in code, but has it uses.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3) ip2long()&lt;/strong&gt;
Don't store IP addresses as strings on a db use this to store them as a
long.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4) oString()&lt;/strong&gt;
- If an object is ever used as a string, you can define what's returned
here. Again you can find it's uses once you realise these things are
possible. :)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5) get_browser()&lt;/strong&gt;
- Easily get your hands on the users browser-type. Some leave this
process to the browser end but can be useful to get this info server
side.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;More of a total dirty hack(come on, it's PHP). Having problems with
that annoying 'headers already sent' error. Don't bother to fix the
underlying problem, just omit the closing php tag! It's totally
valid(this list is really becoming things I hate about PHP….)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7) natsort()&lt;/strong&gt;
This will sort lists of things in ways humans will understand. Good idea
when displaying drop-down lists etc for users. Again, you might find a
use.:)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8) metaphone()&lt;/strong&gt;
Again one of those random things PHP does, you may never use this but
comparing words that sounds similar, this one's really obscure and I
honestly haven't actually found a use for it yet.:)&lt;/p&gt;
&lt;p&gt;Take a look at the PHP magic methods for some other ideas. :)&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Sync config files over dropbox</title><link href="https://shanedowling.com/sync-config-files-over-dropbox-62b51425343e.html" rel="alternate"></link><published>2010-02-14T00:00:00+00:00</published><updated>2010-02-14T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2010-02-14:/sync-config-files-over-dropbox-62b51425343e.html</id><summary type="html">&lt;p&gt;One of the many reasons for my love of linux is the idea of keeping
config information in simple texts files in the home directory of each
user. It all very painless. And now with &lt;a href="https://www.dropbox.com/referrals/NTQyMzk2MT"&gt;Dropbox&lt;/a&gt; I can have a
set of application configurations stored via the web.&lt;/p&gt;
&lt;p&gt;Using Dropbox …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the many reasons for my love of linux is the idea of keeping
config information in simple texts files in the home directory of each
user. It all very painless. And now with &lt;a href="https://www.dropbox.com/referrals/NTQyMzk2MT"&gt;Dropbox&lt;/a&gt; I can have a
set of application configurations stored via the web.&lt;/p&gt;
&lt;p&gt;Using Dropbox, add a folder(I've called mine dotfiles) and add in all
the useful config files you have.&lt;/p&gt;
&lt;p&gt;For me it's my&lt;/p&gt;
&lt;p&gt;.bashrc (sets up environment stuff, can be iffy with multiple machines
however)&lt;/p&gt;
&lt;p&gt;.bash_aliases (sets up all my command line aliases)&lt;/p&gt;
&lt;p&gt;.vimrc (my vim configuration)&lt;/p&gt;
&lt;p&gt;.vim/ (my vim plugins and documentation)&lt;/p&gt;
&lt;p&gt;.muttrc (my mutt config)&lt;/p&gt;
&lt;p&gt;.screenrc (my screen config)&lt;/p&gt;
&lt;p&gt;.irssi (my irssi config)&lt;/p&gt;
&lt;p&gt;Move all the files you wish to sync with Dropbox into your dotfiles(or&lt;/p&gt;
&lt;p&gt;1) cd ~&lt;/p&gt;
&lt;p&gt;2) ln -s /home/username/Dropbox/dotfiles/.bashrc&lt;/p&gt;
&lt;p&gt;And bingo! Your bashrc files is now synced over Dropbox. Any changes you
make on your current machine will be propagated over all machines use
this Dropboxconfig and visa-versa. On top of that the prospect of
maintaining profiles over multiple machines become a lot less painful.
Even setting up a new machine is handy. Setup your os, download dropbox,
execute ln -s a few times and you're done, and this can be extended to
any application that supports these plain-text config files. It's really
awesome!&lt;/p&gt;
&lt;h3&gt;Update-04/04/14&lt;/h3&gt;
&lt;p&gt;These days, I'm actually using bittorrent sync to do effectively the same thing, minus all the privacy invading Dropbox features.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Disable jQuery autocompleter cache</title><link href="https://shanedowling.com/disable-jquery-autocompleter-cache-a6f3a338274c.html" rel="alternate"></link><published>2010-02-12T00:00:00+00:00</published><updated>2010-02-12T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2010-02-12:/disable-jquery-autocompleter-cache-a6f3a338274c.html</id><summary type="html">&lt;p&gt;For anyone wondering how to disable the &lt;a href="http://bassistance.de/jquery-plugins/jquery-plugin-autocomplete/"&gt;autocompleter&lt;/a&gt; cache in jQuery(meaning you always poll the server each time a letter is entered).&lt;/p&gt;
&lt;p&gt;Simply set cacheLength: 0, in the autocompleter's settings. Seems obvious but my googling told me never set this value below 1 or the whole thing would explode …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For anyone wondering how to disable the &lt;a href="http://bassistance.de/jquery-plugins/jquery-plugin-autocomplete/"&gt;autocompleter&lt;/a&gt; cache in jQuery(meaning you always poll the server each time a letter is entered).&lt;/p&gt;
&lt;p&gt;Simply set cacheLength: 0, in the autocompleter's settings. Seems obvious but my googling told me never set this value below 1 or the whole thing would explode. Tried matchSubset etc and nothing else worked.&lt;/p&gt;
&lt;p&gt;Simple solutions eh?&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Php Beautifier</title><link href="https://shanedowling.com/php-beautifier-51200a4b525f.html" rel="alternate"></link><published>2010-01-23T00:00:00+00:00</published><updated>2010-01-23T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2010-01-23:/php-beautifier-51200a4b525f.html</id><summary type="html">&lt;h3&gt;Why?&lt;/h3&gt;
&lt;p&gt;When you're faced with an ugly PHP file(or files) with little to do but
trawl through it, there is a solution.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://phpbeautifier.com"&gt;PHP beautifier&lt;/a&gt; is a pear package that will process PHP files and reformat them in a (hopefully) nicer format.&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;You can install it using pear with …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Why?&lt;/h3&gt;
&lt;p&gt;When you're faced with an ugly PHP file(or files) with little to do but
trawl through it, there is a solution.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://phpbeautifier.com"&gt;PHP beautifier&lt;/a&gt; is a pear package that will process PHP files and reformat them in a (hopefully) nicer format.&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;You can install it using pear with a very simple&lt;/p&gt;
&lt;p&gt;pear install PHP_Beautifier&lt;/p&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;Usage is pretty dependent on your needs. What's nice is, it takes
formatting rules as arguments, so if you pass in Pear() as an argument
your code will be formatted to the pear standard.&lt;/p&gt;
&lt;p&gt;Here's a bash alias I used to fire an entire folder(and recursively
through all sub-folders) through the beautifier with the Pear standard
coding conventions and outputted to a src2 folder.&lt;/p&gt;
&lt;p&gt;alias beautify="php_beautifier -l "Pear()" -r "*.php" ./src2/"&lt;/p&gt;
&lt;p&gt;Or if your using vim here is a mapping to call the beautifier on the
current file when Ctrl-F2 is pressed(all my function keys are currently
mapped to vim'sxdebug plugin).&lt;/p&gt;
&lt;p&gt;map :% ! php_beautifier&lt;/p&gt;
&lt;h3&gt;Results&lt;/h3&gt;
&lt;p&gt;The results are pretty nice actually. The author of it notes that on
40,000 lines of PHP it hasn't broken a single file. I have noted that it
can make certain files look like crap however. An example would be our
locales file, that has large array mappings of terms to languages.
Unless you're totally certain your whole project is going to look
awesome I would suggest using this on a file by file basis, as I have
with vim.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Vim!</title><link href="https://shanedowling.com/vim-e2fc00d85b79.html" rel="alternate"></link><published>2010-01-11T00:00:00+00:00</published><updated>2010-01-11T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2010-01-11:/vim-e2fc00d85b79.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__z__gwqd53GgEAJGz83yndbA.png"&gt;&lt;/p&gt;
&lt;p&gt;For a while now vim has been my editor of choice and only up until
recently have I began to unearth it's potential. My reasoning before was
that it was so cross-compatible(even working in ssh terminals) that this
would always be my go-to editor. Now it's become so much …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__z__gwqd53GgEAJGz83yndbA.png"&gt;&lt;/p&gt;
&lt;p&gt;For a while now vim has been my editor of choice and only up until
recently have I began to unearth it's potential. My reasoning before was
that it was so cross-compatible(even working in ssh terminals) that this
would always be my go-to editor. Now it's become so much more! Running
regexes across all working files with bufdo, crazy window manipulation
and crazy editing tricks have made this editor truly fantastic. I've
started using wherever possible, even trying out the vimperator firefox
plugin.&lt;/p&gt;
&lt;p&gt;3 reasons to learn Vim are&lt;/p&gt;
&lt;p&gt;1. Edit text far more efficiently(I as a programmer do this more than a
little)&lt;/p&gt;
&lt;p&gt;2. Not look like an idiot by saying you "know" vim then head straight
for the arrow keys&lt;/p&gt;
&lt;p&gt;3. The ladies&lt;/p&gt;
&lt;p&gt;I felt if I was ever going to learn it I would have to see someone use
it. Luckily I found a guy who clearly only has love for VIM. Before I
watched the videos I basically knew a couple of shortcuts but still used
the arrows key and 'i' to do 95% of my work. Things have changed
drastically since then.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Play with &lt;a href="http://www.vim.org/"&gt;vim&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Watch all of these &lt;a href="http://www.derekwyatt.org/vim/vim-tutorial-videos/vim-novice-tutorial-videos/"&gt;vim tutorials&lt;/a&gt;, a guy who has likely changed me forever!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Feel free to use the mindmap I made, I find it easier to traverse
quickly over the flat cheatsheet(but that's just me)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You'll find yourself working at a slow pace(even slower than normal) but
fight through this as the productivity rewards are worth it!&lt;/p&gt;
&lt;p&gt;Alsoit may be a little annoying but add these to your .vimrc to disable
the arrow keys, this helped me a lot in using the editor correctly.&lt;/p&gt;
&lt;p&gt;You'll find yourself working at a slow pace(even slower than normal) but
fight true this as the productivity rewards are worth it!&lt;/p&gt;
&lt;p&gt;Also if may be a little annoying but add these to your .vimrc to disable
the arrow keys, this helped me a lot in using the editor correctly.&lt;/p&gt;
&lt;p&gt;noremap "" noremap! noremap "" noremap! noremap "" noremap! noremap "" norema! noremap "" noremap! noremap "" noremap! noremap "" noremap! noremap "" norema!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Google Wave Server Admin</title><link href="https://shanedowling.com/google-wave-server-admin-693186dcac55.html" rel="alternate"></link><published>2009-12-16T00:00:00+00:00</published><updated>2009-12-16T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2009-12-16:/google-wave-server-admin-693186dcac55.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__FO13w__1tT7x8ZvWoH19o0w.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Download &lt;a href="http://github.com/shanedowling/Wave-ServerAdmin"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;What it does&lt;/h3&gt;
&lt;p&gt;Execute commands from google wave on your remote server.&lt;/p&gt;
&lt;h3&gt;How to set it up&lt;/h3&gt;
&lt;p&gt;You need python2.6 or greater, which sucks for a lot of debian users but I
need it to be able to kill processes nicely.&lt;/p&gt;
&lt;p&gt;Fill in the details required &lt;a href="http://github.com/shanedowling/Wave-ServerAdmin"&gt;here …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__FO13w__1tT7x8ZvWoH19o0w.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;Download &lt;a href="http://github.com/shanedowling/Wave-ServerAdmin"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;What it does&lt;/h3&gt;
&lt;p&gt;Execute commands from google wave on your remote server.&lt;/p&gt;
&lt;h3&gt;How to set it up&lt;/h3&gt;
&lt;p&gt;You need python2.6 or greater, which sucks for a lot of debian users but I
need it to be able to kill processes nicely.&lt;/p&gt;
&lt;p&gt;Fill in the details required &lt;a href="http://github.com/shanedowling/Wave-ServerAdmin"&gt;here&lt;/a&gt;. Deploy it to your own google app engine deployment and continue on the easy option.&lt;/p&gt;
&lt;h3&gt;How it works&lt;/h3&gt;
&lt;p&gt;Using google wave's api and google's datastore, when a blip is submitted
an &lt;a href="http://www.python.org/doc/2.5.2/lib/module-xmlrpclib.html"&gt;xmlrpc&lt;/a&gt; request is sent to your server, along with your hashed password for
authentication. The python code running on the server is then executed
as a sub process and the output is returned. If the server subprocess
lasts more than 3 seconds it is killed and that output is returned, I
can't seem to be able to wait any longer before the request times out.&lt;/p&gt;
&lt;p&gt;As I mentioned the data is stored on google datastore. All passwords
are hashed as soon as they're entered.&lt;/p&gt;
&lt;p&gt;If you need any further details, check the &lt;a href="http://github.com/shanedowling/Wave-ServerAdmin"&gt;source&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Why&lt;/h3&gt;
&lt;p&gt;Generating ideas with what you can do with wave mostly. Obviously this
script needs locking down to be useful, I'm doubting very many want to
run ls -alh from google wave a lot. But if you start extending the code
you can write some cool things into waves.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://o2sms.sourceforge.net/"&gt;o2sms&lt;/a&gt; it allows me to send text
messages from the command line for free using my mobile phone operator's
web-account(this tool only works in Ireland however). So for me to send
a text message I would type. o2sms sender_in_phonebook -M 'a message'&lt;/p&gt;
&lt;p&gt;o2sms mum -M 'Hi I am sending you a message'&lt;/p&gt;
&lt;p&gt;So with a few changes to my script I can create a new wave add the robot
participant and type&lt;/p&gt;
&lt;p&gt;mum Hi I am sending you a message&lt;/p&gt;
&lt;p&gt;And presto I'm sending texts from my google wave, for free.&lt;/p&gt;
&lt;p&gt;Happys Days!&lt;/p&gt;
&lt;p&gt;And I'm sure there is a truck load of ideas that can be done around
this, the project itself is purely a proof of concept that I hope will
generate some cool stuff.&lt;/p&gt;
&lt;p&gt;Note:I did this project to learn both python and google wave's api, so
apologies if the code sucks/is very PHPish.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Pseudocode Programming Process</title><link href="https://shanedowling.com/pseudocode-programming-process-ad198e7b0584.html" rel="alternate"></link><published>2009-11-23T00:00:00+00:00</published><updated>2009-11-23T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2009-11-23:/pseudocode-programming-process-ad198e7b0584.html</id><summary type="html">&lt;p&gt;So for the last while I've been experimenting with PPP as described in
&lt;a href="http://cc2e.com/Page.aspx?hid=145"&gt;Code Complete&lt;/a&gt;. Jeff Atwood has a great description of it on &lt;a href="http://www.codinghorror.com/blog/archives/001264.html"&gt;coding horror&lt;/a&gt;. You should read the blog post the metaphor of pseudocode as tang is a good one. I've been using PPP for a number of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;So for the last while I've been experimenting with PPP as described in
&lt;a href="http://cc2e.com/Page.aspx?hid=145"&gt;Code Complete&lt;/a&gt;. Jeff Atwood has a great description of it on &lt;a href="http://www.codinghorror.com/blog/archives/001264.html"&gt;coding horror&lt;/a&gt;. You should read the blog post the metaphor of pseudocode as tang is a good one. I've been using PPP for a number of weeks now and so far it's really been working. There have been several reasons why I found it worksbut for me the most important and useful part is purely that it &lt;strong&gt;slows me down&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;One of Jeff's arguments against PPP is that he 'thinks in code', and
before I tried PPP I would have said the same. The problem is when I
'think in code', it sometimes results in poorly written code that
clearly I haven't spent nearly enough time thinking about. I'm moving
straight into worrying about implementation details.&lt;/p&gt;
&lt;p&gt;Now, because I'm abstracting the thinking away from the code it's
effectively created a new step in programming for me. Now Jeff is
undoubtedly a better and more experienced programmer than I, so this is
where he bases his argument, however we don't all have this immediate
ability to make the optimum choices as we start writing out code. When I
say it slows me down, on a routine level, I start to think more about
naming, is the function parameters in keeping with the abstraction of
the overall class, the boundaries on parameters and other implementation
details I may miss. And although most of those points are not at all
related to what PPP wants me to think about it's because I'm forcing
myself to slow down I begin to become more thoughtful in the part where
I fill out the tang. For now at least, I find it difficult to conceptualise all of this on top of worrying about all of the implementation details of the language. I really have shifted my thinking process to a new 'thinking about thinking' stage, that has significantly improved the quality of my code. I do sometimes feel like slipping into old habits, but I know the quality of my code will slip too so for the last while I've been good.&lt;/p&gt;
&lt;p&gt;For examplewhen I've had to really think about certain functions it may
become obvious that it needs to be split, something I may not have
noticed worrying about implementation details, or more likely I'll
noticed it needs to be split half-way through coding it. I also know
there have been times when I 'should' have split a routine but because I
mid programming it I 'leave it for now'. Never a good idea but when
deadlines loom….. However when I'm writing pseudocode, if what I'm
writing need some serious explaining, it become's pretty obvious that I
need to start a new routine. Typically this has resulted in small tight
functions that truly adhere to the 'do one thing well' ideal. There are
many other examplesbut it all boils down to a procedure that focuses my
thoughts.&lt;/p&gt;
&lt;p&gt;One tip I would suggest is to write your pseudocode for any language to
implement, so I always re-read the pseudocode with an eye to writing it
in a totally different language for me it's C(I typically code in PHP).
This ensures there's no language details in there.&lt;/p&gt;
&lt;p&gt;Another good way to think about it is a &lt;a href="http://en.wikipedia.org/wiki/Getting_Things_Done"&gt;GTD&lt;/a&gt; to-do list.
Basically, 'a person needs to move tasks out of the mind by recording
them externally. That way, the mind is freed from the job of remembering
everything that needs to be done, and can concentrate on actually
performing those tasks.' I feel this step is becoming more and more
vital for me and on top of that free well written comments are a
terrific bonus for the lazy programmer!&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Code Complete</title><link href="https://shanedowling.com/code-complete-d53ccde8613b.html" rel="alternate"></link><published>2009-11-06T00:00:00+00:00</published><updated>2009-11-06T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2009-11-06:/code-complete-d53ccde8613b.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="images/1__aEP__LZBNqV2mQa4JFBx__7Q.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;I've been reading through Steve McConnell's &lt;a href="http://www.amazon.com/exec/obidos/ASIN/0735619670/codinghorror-20"&gt;Code
Complete&lt;/a&gt; for the last few months, in fact I'm working through mindmaps of each section to traverse through this dense book in a fairly easy manner.
Basically, instead of saying "Hey I need to create a new class what
should I be thinking …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="" src="images/1__aEP__LZBNqV2mQa4JFBx__7Q.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;I've been reading through Steve McConnell's &lt;a href="http://www.amazon.com/exec/obidos/ASIN/0735619670/codinghorror-20"&gt;Code
Complete&lt;/a&gt; for the last few months, in fact I'm working through mindmaps of each section to traverse through this dense book in a fairly easy manner.
Basically, instead of saying "Hey I need to create a new class what
should I be thinking about again, which pages are they on?", I search
the appropriate mindmap and all the headings are there, withpage number
for a deeper reference(which is rarely needed). I would highly recommend
this system to anyone who wants to read any book and also use it for a
future reference.&lt;/p&gt;
&lt;p&gt;Since I began my current software engineering job, my code quality has
improved significantly purely because of this book(I have little
technical expertise to rely on, low availability of experienced
programmers has effectively forced me to punch about my own experience
weight). For me the real impact of this book has been having my own
expert to back my decisions, instead of my typical response of 'Eh, I
like doing it that way', it's moved to 'Steve McConnell a widely
regarded software engineer in a book that epitomises software
engineering tells me to do it this way'.&lt;/p&gt;
&lt;p&gt;It's basically a handbook on how to be a software engineer, so for me
truly at the start of this process, this book has been invaluable. It's
forced me to start thinking about things I would have never bothered
putting thought into. An example would be variable names, which before I
put barely any thought into(I know what it does…..) I've now got a large
section of my mindmap dedicated to picking a decent name, in a
consistent way. Another example would be creating a class. Before, I
would ponder whether it 'feels' right to do so, then probably do it
anyway. Now, I have a checklist to say whether making this section of
code and variable does justify a class. I find myself thinking more
about thinking. The most important part being I'm making decisions in a
consistent manner and as I've put a lot more thought into them I tend to
remember and repeat those decisions. Honestly I've already refactored a
bunch of code as I realised just how unpleasant it was in the scheme of
things.&lt;/p&gt;
&lt;p&gt;I'd say at this stage I'm hitting Code Complete more than the php.net
manual, which is a big feat(considering how often I forget how to do
things). Honestly I have no idea if this would have any impact on an
experienced programmer, I would hazard a guess that most large ongoing
projects incorporate a look of the ideas this book puts forward. But as
a beginner it's influence on me has been morethen significant and I've
already started to look at other inexperienced programmers who haven't
read this book with slightly less confidence. The book is in itself
probably the most important book the programmer in me will ever read and
is the first book I would recommend to any developer. Now I just have to
finish it.&lt;/p&gt;
&lt;p&gt;Oh there's some awesome resources on Steve's page Code Complete page.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Useful Linux apps you've probably never heard of</title><link href="https://shanedowling.com/useful-linux-apps-youve-probably-never-heard-of-ad375c0b8532.html" rel="alternate"></link><published>2008-06-12T00:00:00+00:00</published><updated>2008-06-12T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2008-06-12:/useful-linux-apps-youve-probably-never-heard-of-ad375c0b8532.html</id><summary type="html">&lt;h3&gt;Corkscrew&lt;/h3&gt;
&lt;p&gt;What corkscrew does is allow you to tunnel ssh connections over a http
proxy very easily. As far as admins of the http proxy can see this is
encrypted traffic which is most likely anssl connection to a web
server(the server you have sshed to), you could in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Corkscrew&lt;/h3&gt;
&lt;p&gt;What corkscrew does is allow you to tunnel ssh connections over a http
proxy very easily. As far as admins of the http proxy can see this is
encrypted traffic which is most likely anssl connection to a web
server(the server you have sshed to), you could in theory ( :D ), create
a socks proxy using an ssh tunnel that is corkscrewing over a http
proxy. Then set your browser to use that socks proxy instead of the http
proxy and thus encrypt all your traffic. I think you can use this with
windows and cygwin tool but its probably easier to simply use putty as
is has added support for this a while back.&lt;/p&gt;
&lt;h3&gt;Tsocks&lt;/h3&gt;
&lt;p&gt;This useful little command line app allows you to use the socks protocol
with applications that may or may not support socks proxies and does not
require you to have to configure all of your apps. So if you want to use
the Opera web browser over a socks proxy, which it annoyingly doesn't
support simply configure tsocks with your socks proxy and run "tsocks
opera". Tsocks has pretty much worked with every command I could throw
at it when I'm stuck behind an annoying proxy.&lt;/p&gt;
&lt;h3&gt;Curlftpfs&lt;/h3&gt;
&lt;p&gt;Another app to make life that little bit easier, if you're using a crap
cheapo web hosting service(like I currently am), one way to make your
life easier is to mount the ftp server locally and run all the commands
you want to on it using curlftp, so you don't need that fancy expensive
server with ssh access to run stuff, well unless you want to execute
something on the server… which you probably will, like I really do,
but i'll put up with this rather than paying triple what I am now for
hosting. :D. But Curlftp seems to work just as well as others remote
mounting such assshfs etc… I would recommend building from source, I
was using Ubuntu and the repos version didn't work.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Getting yourself on Trinity's Wireless network with Linux</title><link href="https://shanedowling.com/getting-yourself-on-trinitys-wireless-network-with-linux-dd6a51344317.html" rel="alternate"></link><published>2008-02-03T00:00:00+00:00</published><updated>2008-02-03T00:00:00+00:00</updated><author><name>Shane Dowling</name></author><id>tag:shanedowling.com,2008-02-03:/getting-yourself-on-trinitys-wireless-network-with-linux-dd6a51344317.html</id><summary type="html">&lt;p&gt;Since ISServices have washed their hands of any support for Linux, I've
banged up a guide on how to get onto it with Linux. I'm using Ubuntu so
things may need to be changed depending on your distro. :D Right, you
need wpa_supplicant installed and modify it's config file …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Since ISServices have washed their hands of any support for Linux, I've
banged up a guide on how to get onto it with Linux. I'm using Ubuntu so
things may need to be changed depending on your distro. :D Right, you
need wpa_supplicant installed and modify it's config file
/etc/wpa_supplicant.conf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nv"&gt;ctrl_interface&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/var/run/wpa_supplicant
    &lt;span class="nv"&gt;ctrl_interface_group&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
    &lt;span class="nv"&gt;eapol_version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="nv"&gt;ap_scan&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="nv"&gt;fast_reauth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="nv"&gt;network&lt;/span&gt;&lt;span class="o"&gt;={&lt;/span&gt;
        &lt;span class="nv"&gt;ssid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TCDwifi&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;scan_ssid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
        &lt;span class="nv"&gt;key_mgmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;IEEE8021X
        &lt;span class="nv"&gt;eap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;LEAP
        &lt;span class="nv"&gt;identity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;
        &lt;span class="nv"&gt;phase2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MSCHAPV2&amp;quot;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you're in Computer Science you can also use COMPSCIwireless2 and
there's no MAC address filtering so no stupid registering stuff. Place
this in your /etc/network/interfaces if its not already there so you can
dhcp over your wireless card.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    auto eth1
    iface eth1 inet dhcp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And finally all of this stuff into a script, say tcd.sh&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Putting the wifi card up and down&amp;quot;&lt;/span&gt;
    sudo ifconfig eth1 down
    sudo ifconfig eth1 up
    sleep &lt;span class="m"&gt;3&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Killing all necessary stuff&amp;quot;&lt;/span&gt;
    sudo killall dhclient dhclient3
    sudo killall wpa_supplicant
    sleep &lt;span class="m"&gt;3&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Setting up WPA&amp;quot;&lt;/span&gt;
    sudo wpa_supplicant -B -ieth1 -Dwext -c/etc/wpa_supplicant.conf
    sleep &lt;span class="m"&gt;3&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Connecting to wireless&amp;quot;&lt;/span&gt;
    sudo iwconfig eth1 essid TCDwifi
    sleep &lt;span class="m"&gt;3&lt;/span&gt;
    sudo dhclient eth1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then run sh tcd.sh and enter your root password, it may not work
sometimes, this seems to be due to the wireless networks being hidden.
If you want add this to the start of your script. iwlist scanning \|
grep TCDwifi and if you see a few TCDwifi access points coming up you
"should" be ok and it will connect alright, otherwise cancel the script
and give it another go. The wifi card should pick up the access points
now… hopefully&lt;/p&gt;</content><category term="Tech"></category></entry></feed>